control 'SV-89569' do
  title 'The MQ Appliance messaging server must ensure authentication of both SSH client and server during the entire session.'
  desc "This control focuses on communications protection at the session, versus packet level.

At the application layer, session IDs are tokens generated by web applications to uniquely identify an application user's session. Web applications utilize session tokens or session IDs in order to establish application user identity. Proper use of session IDs addresses man-in-the-middle attacks, including session hijacking or insertion of false information into a session.

Messaging servers must provide the capability to perform mutual authentication. Mutual authentication is when both the client and the server authenticate each other.

"
  desc 'check', 'Check that TLS mutual authentication configuration is correct by using DISPLAY commands. 

To access the MQ Appliance CLI, enter:
mqcli

To identify the queue managers, enter:
dspmq

For each queue manager identified, run the command:
runmqsc [queue name]

DIS CHANNEL(*) CHLTYPE(SVRCONN)

Note the name of SVRCONN channel (client channel) you wish to check.

DIS CHANNEL([name of SVRCONN channel])

Confirm that the parameter "SSLCIPH" specifies the desired cipher spec and that the value of "SSLAUTH" is "REQUIRED".

If either the "SSLCIPH" or "SSLAUTH" value is not correct, this is a finding.'
  desc 'fix', "The most common way devices (endpoints) may connect an MQ Appliance MQ queue manager is as an MQ client. In order to ensure unique identification of network-connected devices, mutual authentication using CA-signed TLS certificates should be configured. 

1. Prepare the key repository on each endpoint client.
2. Request a CA-signed certificate for each client. You might use different CAs for the two endpoints.
3. Add the Certificate Authority certificate to the key repository for each client. If the endpoints are using different Certificate Authorities then the CA certificate for each Certificate Authority must be added to both key repositories.
4. Add the CA-signed certificate to the key repository for each endpoint.

On the MQ Appliance queue manager, define a server-connection channel by issuing a command as in the following example:

[C1]=Client, [QM1]=MQ Appliance queue manager. Replace [QM1] with the actual queue manager name (e.g., FINANCEQM)

To access the MQ Appliance CLI, enter:
mqcli

runmqsc [QM1]
DEFINE CHANNEL([C1].TO.[QM1]) CHLTYPE(SVRCONN) TRPTYPE(TCP) +
SSLCIPH([TLS_RSA_WITH_AES_128_CBC_SHA or other cipher spec]) SSLCAUTH(REQUIRED) +
DESCR('Receiver channel using TLS from [client name] to [QM name]')
end

Note: Following are the cipher specs available for MQ: https://ibm.biz/BdrJGp"
  impact 0.5
  ref 'DPMS Target IBM MQ Appliance v9.0 AS'
  tag check_id: 'C-74753r1_chk'
  tag severity: 'medium'
  tag gid: 'V-74895'
  tag rid: 'SV-89569r1_rule'
  tag stig_id: 'MQMH-AS-001120'
  tag gtitle: 'SRG-APP-000219-AS-000147'
  tag fix_id: 'F-81511r1_fix'
  tag satisfies: ['SRG-APP-000219-AS-000147', 'SRG-APP-000223-AS-000150', 'SRG-APP-000223-AS-000151']
  tag 'documentable'
  tag cci: ['CCI-001184', 'CCI-001664']
  tag nist: ['SC-23', 'SC-23 (3)']
end
