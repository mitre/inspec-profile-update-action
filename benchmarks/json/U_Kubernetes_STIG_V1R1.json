{"controls":[{"id":"SV-242376","code":"control 'SV-242376' do\n  title 'The Kubernetes Controller Manager must use TLS 1.2, at a minimum, to protect the confidentiality of sensitive data during electronic dissemination.'\n  desc 'The Kubernetes Controller Manager will prohibit the use of SSL and unauthorized versions of TLS protocols to properly secure communication.\n\nThe use of unsupported protocol exposes vulnerabilities to the Kubernetes by rogue traffic interceptions, man-in-the-middle attacks, and impersonation of users or services from the container platform runtime, registry, and key store. To enable the minimum version of TLS to be used by the Kubernetes Controller Manager, the setting \"tls-min-version\" must be set.'\n  desc 'check', 'Change to the /etc/kubernetes/manifests/ directory on the Kubernetes Master Node. Run the command:\n\ngrep -i tls-min-version * \n\nIf the setting \"tls-min-version\" is not configured in the Kubernetes Controller Manager manifest file or it is set to \"VersionTLS10\" or \"VersionTLS11\", this is a finding.'\n  desc 'fix', 'Edit the Kubernetes Controller Manager manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Set the value of \"--tls-min-version\" to \"VersionTLS12\" or higher.'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45651r712482_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242376'\n  tag rid: 'SV-242376r712484_rule'\n  tag stig_id: 'CNTR-K8-000150'\n  tag gtitle: 'SRG-APP-000014-CTR-000035'\n  tag fix_id: 'F-45609r712483_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000068']\n  tag nist: ['AC-17 (2)']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242376.rb"},"title":"The Kubernetes Controller Manager must use TLS 1.2, at a minimum, to protect the confidentiality of sensitive data during electronic dissemination.","desc":"The Kubernetes Controller Manager will prohibit the use of SSL and unauthorized versions of TLS protocols to properly secure communication.\n\nThe use of unsupported protocol exposes vulnerabilities to the Kubernetes by rogue traffic interceptions, man-in-the-middle attacks, and impersonation of users or services from the container platform runtime, registry, and key store. To enable the minimum version of TLS to be used by the Kubernetes Controller Manager, the setting \"tls-min-version\" must be set.","descriptions":{"default":"The Kubernetes Controller Manager will prohibit the use of SSL and unauthorized versions of TLS protocols to properly secure communication.\n\nThe use of unsupported protocol exposes vulnerabilities to the Kubernetes by rogue traffic interceptions, man-in-the-middle attacks, and impersonation of users or services from the container platform runtime, registry, and key store. To enable the minimum version of TLS to be used by the Kubernetes Controller Manager, the setting \"tls-min-version\" must be set.","check":"Change to the /etc/kubernetes/manifests/ directory on the Kubernetes Master Node. Run the command:\n\ngrep -i tls-min-version * \n\nIf the setting \"tls-min-version\" is not configured in the Kubernetes Controller Manager manifest file or it is set to \"VersionTLS10\" or \"VersionTLS11\", this is a finding.","fix":"Edit the Kubernetes Controller Manager manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Set the value of \"--tls-min-version\" to \"VersionTLS12\" or higher."},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45651r712482_chk","severity":"medium","gid":"V-242376","rid":"SV-242376r712484_rule","stig_id":"CNTR-K8-000150","gtitle":"SRG-APP-000014-CTR-000035","fix_id":"F-45609r712483_fix","documentable":null,"cci":["CCI-000068"],"nist":["AC-17 (2)"]}},{"id":"SV-242377","code":"control 'SV-242377' do\n  title 'The Kubernetes Scheduler must use TLS 1.2, at a minimum, to protect the confidentiality of sensitive data during electronic dissemination.'\n  desc 'The Kubernetes Scheduler will prohibit the use of SSL and unauthorized versions of TLS protocols to properly secure communication.\n\nThe use of unsupported protocol exposes vulnerabilities to the Kubernetes by rogue traffic interceptions, man-in-the-middle attacks, and impersonation of users or services from the container platform runtime, registry, and keystore. To enable the minimum version of TLS to be used by the Kubernetes API Server, the setting \"tls-min-version\" must be set.'\n  desc 'check', 'Change to the /etc/kubernetes/manifests/ directory on the Kubernetes Master Node. Run the command:\n\ngrep -i tls-min-version * \n\nIf the setting \"tls-min-version\" is not configured in the Kubernetes Scheduler manifest file or it is set to \"VersionTLS10\" or \"VersionTLS11\", this is a finding.'\n  desc 'fix', 'Edit the Kubernetes Scheduler manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Set the value of \"--tls-min-version\" to \"VersionTLS12\" or higher.'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45652r712485_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242377'\n  tag rid: 'SV-242377r712487_rule'\n  tag stig_id: 'CNTR-K8-000160'\n  tag gtitle: 'SRG-APP-000014-CTR-000035'\n  tag fix_id: 'F-45610r712486_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000068']\n  tag nist: ['AC-17 (2)']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242377.rb"},"title":"The Kubernetes Scheduler must use TLS 1.2, at a minimum, to protect the confidentiality of sensitive data during electronic dissemination.","desc":"The Kubernetes Scheduler will prohibit the use of SSL and unauthorized versions of TLS protocols to properly secure communication.\n\nThe use of unsupported protocol exposes vulnerabilities to the Kubernetes by rogue traffic interceptions, man-in-the-middle attacks, and impersonation of users or services from the container platform runtime, registry, and keystore. To enable the minimum version of TLS to be used by the Kubernetes API Server, the setting \"tls-min-version\" must be set.","descriptions":{"default":"The Kubernetes Scheduler will prohibit the use of SSL and unauthorized versions of TLS protocols to properly secure communication.\n\nThe use of unsupported protocol exposes vulnerabilities to the Kubernetes by rogue traffic interceptions, man-in-the-middle attacks, and impersonation of users or services from the container platform runtime, registry, and keystore. To enable the minimum version of TLS to be used by the Kubernetes API Server, the setting \"tls-min-version\" must be set.","check":"Change to the /etc/kubernetes/manifests/ directory on the Kubernetes Master Node. Run the command:\n\ngrep -i tls-min-version * \n\nIf the setting \"tls-min-version\" is not configured in the Kubernetes Scheduler manifest file or it is set to \"VersionTLS10\" or \"VersionTLS11\", this is a finding.","fix":"Edit the Kubernetes Scheduler manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Set the value of \"--tls-min-version\" to \"VersionTLS12\" or higher."},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45652r712485_chk","severity":"medium","gid":"V-242377","rid":"SV-242377r712487_rule","stig_id":"CNTR-K8-000160","gtitle":"SRG-APP-000014-CTR-000035","fix_id":"F-45610r712486_fix","documentable":null,"cci":["CCI-000068"],"nist":["AC-17 (2)"]}},{"id":"SV-242378","code":"control 'SV-242378' do\n  title 'The Kubernetes API Server must use TLS 1.2, at a minimum, to protect the confidentiality of sensitive data during electronic dissemination.'\n  desc 'The Kubernetes API Server will prohibit the use of SSL and unauthorized versions of TLS protocols to properly secure communication.\n\nThe use of unsupported protocol exposes vulnerabilities to the Kubernetes by rogue traffic interceptions, man-in-the-middle attacks, and impersonation of users or services from the container platform runtime, registry, and keystore. To enable the minimum version of TLS to be used by the Kubernetes API Server, the setting \"tls-min-version\" must be set.'\n  desc 'check', 'Change to the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Run the command:\n\ngrep -i tls-min-version * \n\nIf the setting \"tls-min-version\" is not configured in the Kubernetes API Server manifest file or it is set to \"VersionTLS10\" or \"VersionTLS11\", this is a finding.'\n  desc 'fix', 'Edit the Kubernetes API Server manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Set the value of \"--tls-min-version\" to \"VersionTLS12\" or higher.'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45653r712488_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242378'\n  tag rid: 'SV-242378r712490_rule'\n  tag stig_id: 'CNTR-K8-000170'\n  tag gtitle: 'SRG-APP-000014-CTR-000040'\n  tag fix_id: 'F-45611r712489_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000068']\n  tag nist: ['AC-17 (2)']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242378.rb"},"title":"The Kubernetes API Server must use TLS 1.2, at a minimum, to protect the confidentiality of sensitive data during electronic dissemination.","desc":"The Kubernetes API Server will prohibit the use of SSL and unauthorized versions of TLS protocols to properly secure communication.\n\nThe use of unsupported protocol exposes vulnerabilities to the Kubernetes by rogue traffic interceptions, man-in-the-middle attacks, and impersonation of users or services from the container platform runtime, registry, and keystore. To enable the minimum version of TLS to be used by the Kubernetes API Server, the setting \"tls-min-version\" must be set.","descriptions":{"default":"The Kubernetes API Server will prohibit the use of SSL and unauthorized versions of TLS protocols to properly secure communication.\n\nThe use of unsupported protocol exposes vulnerabilities to the Kubernetes by rogue traffic interceptions, man-in-the-middle attacks, and impersonation of users or services from the container platform runtime, registry, and keystore. To enable the minimum version of TLS to be used by the Kubernetes API Server, the setting \"tls-min-version\" must be set.","check":"Change to the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Run the command:\n\ngrep -i tls-min-version * \n\nIf the setting \"tls-min-version\" is not configured in the Kubernetes API Server manifest file or it is set to \"VersionTLS10\" or \"VersionTLS11\", this is a finding.","fix":"Edit the Kubernetes API Server manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Set the value of \"--tls-min-version\" to \"VersionTLS12\" or higher."},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45653r712488_chk","severity":"medium","gid":"V-242378","rid":"SV-242378r712490_rule","stig_id":"CNTR-K8-000170","gtitle":"SRG-APP-000014-CTR-000040","fix_id":"F-45611r712489_fix","documentable":null,"cci":["CCI-000068"],"nist":["AC-17 (2)"]}},{"id":"SV-242379","code":"control 'SV-242379' do\n  title 'The Kubernetes etcd must use TLS to protect the confidentiality of sensitive data during electronic dissemination.'\n  desc 'Kubernetes etcd will prohibit the use of SSL and unauthorized versions of TLS protocols to properly secure communication.\n\nThe use of unsupported protocol exposes vulnerabilities to the Kubernetes by rogue traffic interceptions, man-in-the-middle attacks, and impersonation of users or services from the container platform runtime, registry, and keystore. To enable the minimum version of TLS to be used by the Kubernetes API Server, the setting \"tls-min-version\" must be set.'\n  desc 'check', 'Change to the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Run the command:\n\ngrep -i  auto-tls * \n\nIf the setting \"auto-tls\" is not configured in the Kubernetes etcd manifest file or it is set to true, this is a finding.'\n  desc 'fix', 'Edit the Kubernetes etcd manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Set the value of \"-auto-tls\" to \"false\".'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45654r712491_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242379'\n  tag rid: 'SV-242379r712493_rule'\n  tag stig_id: 'CNTR-K8-000180'\n  tag gtitle: 'SRG-APP-000014-CTR-000035'\n  tag fix_id: 'F-45612r712492_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000068']\n  tag nist: ['AC-17 (2)']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242379.rb"},"title":"The Kubernetes etcd must use TLS to protect the confidentiality of sensitive data during electronic dissemination.","desc":"Kubernetes etcd will prohibit the use of SSL and unauthorized versions of TLS protocols to properly secure communication.\n\nThe use of unsupported protocol exposes vulnerabilities to the Kubernetes by rogue traffic interceptions, man-in-the-middle attacks, and impersonation of users or services from the container platform runtime, registry, and keystore. To enable the minimum version of TLS to be used by the Kubernetes API Server, the setting \"tls-min-version\" must be set.","descriptions":{"default":"Kubernetes etcd will prohibit the use of SSL and unauthorized versions of TLS protocols to properly secure communication.\n\nThe use of unsupported protocol exposes vulnerabilities to the Kubernetes by rogue traffic interceptions, man-in-the-middle attacks, and impersonation of users or services from the container platform runtime, registry, and keystore. To enable the minimum version of TLS to be used by the Kubernetes API Server, the setting \"tls-min-version\" must be set.","check":"Change to the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Run the command:\n\ngrep -i  auto-tls * \n\nIf the setting \"auto-tls\" is not configured in the Kubernetes etcd manifest file or it is set to true, this is a finding.","fix":"Edit the Kubernetes etcd manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Set the value of \"-auto-tls\" to \"false\"."},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45654r712491_chk","severity":"medium","gid":"V-242379","rid":"SV-242379r712493_rule","stig_id":"CNTR-K8-000180","gtitle":"SRG-APP-000014-CTR-000035","fix_id":"F-45612r712492_fix","documentable":null,"cci":["CCI-000068"],"nist":["AC-17 (2)"]}},{"id":"SV-242380","code":"control 'SV-242380' do\n  title 'The Kubernetes etcd must use TLS to protect the confidentiality of sensitive data during electronic dissemination.'\n  desc 'The Kubernetes API Server will prohibit the use of SSL and unauthorized versions of TLS protocols to properly secure communication.\n\nThe use of unsupported protocol exposes vulnerabilities to the Kubernetes by rogue traffic interceptions, man-in-the-middle attacks, and impersonation of users or services from the container platform runtime, registry, and keystore. To enable the minimum version of TLS to be used by the Kubernetes API Server, the setting \"tls-min-version\" must be set.'\n  desc 'check', 'Change to the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Run the command:\n\ngrep -I  peer-auto-tls * \n\nIf the setting \"peer-auto-tls\" is not configured in the Kubernetes etcd manifest file or it is set to \"true\", this is a finding.'\n  desc 'fix', 'Edit the Kubernetes etcd manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Set the value of \"peer-auto-tls\" to \"false\".'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45655r712494_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242380'\n  tag rid: 'SV-242380r712496_rule'\n  tag stig_id: 'CNTR-K8-000190'\n  tag gtitle: 'SRG-APP-000014-CTR-000035'\n  tag fix_id: 'F-45613r712495_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000068']\n  tag nist: ['AC-17 (2)']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242380.rb"},"title":"The Kubernetes etcd must use TLS to protect the confidentiality of sensitive data during electronic dissemination.","desc":"The Kubernetes API Server will prohibit the use of SSL and unauthorized versions of TLS protocols to properly secure communication.\n\nThe use of unsupported protocol exposes vulnerabilities to the Kubernetes by rogue traffic interceptions, man-in-the-middle attacks, and impersonation of users or services from the container platform runtime, registry, and keystore. To enable the minimum version of TLS to be used by the Kubernetes API Server, the setting \"tls-min-version\" must be set.","descriptions":{"default":"The Kubernetes API Server will prohibit the use of SSL and unauthorized versions of TLS protocols to properly secure communication.\n\nThe use of unsupported protocol exposes vulnerabilities to the Kubernetes by rogue traffic interceptions, man-in-the-middle attacks, and impersonation of users or services from the container platform runtime, registry, and keystore. To enable the minimum version of TLS to be used by the Kubernetes API Server, the setting \"tls-min-version\" must be set.","check":"Change to the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Run the command:\n\ngrep -I  peer-auto-tls * \n\nIf the setting \"peer-auto-tls\" is not configured in the Kubernetes etcd manifest file or it is set to \"true\", this is a finding.","fix":"Edit the Kubernetes etcd manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Set the value of \"peer-auto-tls\" to \"false\"."},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45655r712494_chk","severity":"medium","gid":"V-242380","rid":"SV-242380r712496_rule","stig_id":"CNTR-K8-000190","gtitle":"SRG-APP-000014-CTR-000035","fix_id":"F-45613r712495_fix","documentable":null,"cci":["CCI-000068"],"nist":["AC-17 (2)"]}},{"id":"SV-242381","code":"control 'SV-242381' do\n  title 'The Kubernetes Controller Manager must create unique service accounts for each work payload.'\n  desc 'The Kubernetes Controller Manager is a background process that embeds core control loops regulating cluster system state through the API Server. Every process executed in a pod has an associated service account. By default, service accounts use the same credentials for authentication. Implementing the default settings poses a High risk to the Kubernetes Controller Manager. Setting the use-service-account-credential value lowers the attack surface by generating unique service accounts settings for each controller instance.'\n  desc 'check', 'Change to the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Run the command:\n\ngrep -i use-service-account-credential * \n\nIf the setting use-service-account-credential is not configured in the Kubernetes Controller Manager manifest file or it is set to \"false\", this is a finding.'\n  desc 'fix', 'Edit the Kubernetes Controller Manager manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Set the value of \"use-service-account-credential\" to \"true\".'\n  impact 0.7\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45656r712497_chk'\n  tag severity: 'high'\n  tag gid: 'V-242381'\n  tag rid: 'SV-242381r712499_rule'\n  tag stig_id: 'CNTR-K8-000220'\n  tag gtitle: 'SRG-APP-000023-CTR-000055'\n  tag fix_id: 'F-45614r712498_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000015']\n  tag nist: ['AC-2 (1)']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242381.rb"},"title":"The Kubernetes Controller Manager must create unique service accounts for each work payload.","desc":"The Kubernetes Controller Manager is a background process that embeds core control loops regulating cluster system state through the API Server. Every process executed in a pod has an associated service account. By default, service accounts use the same credentials for authentication. Implementing the default settings poses a High risk to the Kubernetes Controller Manager. Setting the use-service-account-credential value lowers the attack surface by generating unique service accounts settings for each controller instance.","descriptions":{"default":"The Kubernetes Controller Manager is a background process that embeds core control loops regulating cluster system state through the API Server. Every process executed in a pod has an associated service account. By default, service accounts use the same credentials for authentication. Implementing the default settings poses a High risk to the Kubernetes Controller Manager. Setting the use-service-account-credential value lowers the attack surface by generating unique service accounts settings for each controller instance.","check":"Change to the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Run the command:\n\ngrep -i use-service-account-credential * \n\nIf the setting use-service-account-credential is not configured in the Kubernetes Controller Manager manifest file or it is set to \"false\", this is a finding.","fix":"Edit the Kubernetes Controller Manager manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Set the value of \"use-service-account-credential\" to \"true\"."},"impact":0.7,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45656r712497_chk","severity":"high","gid":"V-242381","rid":"SV-242381r712499_rule","stig_id":"CNTR-K8-000220","gtitle":"SRG-APP-000023-CTR-000055","fix_id":"F-45614r712498_fix","documentable":null,"cci":["CCI-000015"],"nist":["AC-2 (1)"]}},{"id":"SV-242382","code":"control 'SV-242382' do\n  title 'The Kubernetes API Server must enable Node,RBAC as the authorization mode.'\n  desc 'To mitigate the risk of unauthorized access to sensitive information by entities that have been issued certificates by DoD-approved PKIs, all DoD systems (e.g., networks, web servers, and web portals) must be properly configured to incorporate access control methods that do not rely solely on the possession of a certificate for access. Successful authentication must not automatically give an entity access to an asset or security boundary. Authorization procedures and controls must be implemented to ensure each authenticated entity also has a validated and current authorization. Authorization is the process of determining whether an entity, once authenticated, is permitted to access a specific asset.\n\nNode,RBAC is the method within Kubernetes to control access of users and applications. Kubernetes uses roles to grant authorization API requests made by kubelets.\n\n'\n  desc 'check', 'Change to the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Run the command:\n\n\"grep -i authorization-mode *\"\n\nIf the setting \"authorization-mode\" is not configured in the Kubernetes API Server manifest file or is not set to \"Node,RBAC\", this is a finding.'\n  desc 'fix', 'Edit the Kubernetes API Server manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Set the value of \"--authorization-mode\" to \"Node,RBAC\".'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45657r712500_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242382'\n  tag rid: 'SV-242382r712502_rule'\n  tag stig_id: 'CNTR-K8-000270'\n  tag gtitle: 'SRG-APP-000033-CTR-000090'\n  tag fix_id: 'F-45615r712501_fix'\n  tag satisfies: ['SRG-APP-000033-CTR-000090', 'SRG-APP-000033-CTR-000095']\n  tag 'documentable'\n  tag cci: ['CCI-000213']\n  tag nist: ['AC-3']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242382.rb"},"title":"The Kubernetes API Server must enable Node,RBAC as the authorization mode.","desc":"To mitigate the risk of unauthorized access to sensitive information by entities that have been issued certificates by DoD-approved PKIs, all DoD systems (e.g., networks, web servers, and web portals) must be properly configured to incorporate access control methods that do not rely solely on the possession of a certificate for access. Successful authentication must not automatically give an entity access to an asset or security boundary. Authorization procedures and controls must be implemented to ensure each authenticated entity also has a validated and current authorization. Authorization is the process of determining whether an entity, once authenticated, is permitted to access a specific asset.\n\nNode,RBAC is the method within Kubernetes to control access of users and applications. Kubernetes uses roles to grant authorization API requests made by kubelets.\n\n","descriptions":{"default":"To mitigate the risk of unauthorized access to sensitive information by entities that have been issued certificates by DoD-approved PKIs, all DoD systems (e.g., networks, web servers, and web portals) must be properly configured to incorporate access control methods that do not rely solely on the possession of a certificate for access. Successful authentication must not automatically give an entity access to an asset or security boundary. Authorization procedures and controls must be implemented to ensure each authenticated entity also has a validated and current authorization. Authorization is the process of determining whether an entity, once authenticated, is permitted to access a specific asset.\n\nNode,RBAC is the method within Kubernetes to control access of users and applications. Kubernetes uses roles to grant authorization API requests made by kubelets.\n\n","check":"Change to the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Run the command:\n\n\"grep -i authorization-mode *\"\n\nIf the setting \"authorization-mode\" is not configured in the Kubernetes API Server manifest file or is not set to \"Node,RBAC\", this is a finding.","fix":"Edit the Kubernetes API Server manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Set the value of \"--authorization-mode\" to \"Node,RBAC\"."},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45657r712500_chk","severity":"medium","gid":"V-242382","rid":"SV-242382r712502_rule","stig_id":"CNTR-K8-000270","gtitle":"SRG-APP-000033-CTR-000090","fix_id":"F-45615r712501_fix","satisfies":["SRG-APP-000033-CTR-000090","SRG-APP-000033-CTR-000095"],"documentable":null,"cci":["CCI-000213"],"nist":["AC-3"]}},{"id":"SV-242383","code":"control 'SV-242383' do\n  title 'User-managed resources must be created in dedicated namespaces.'\n  desc 'Creating namespaces for user-managed resources is important when implementing Role-Based Access Controls (RBAC). RBAC allows for the authorization of users and helps support proper API server permissions separation and network micro segmentation. If user-managed resources are placed within the default namespaces, it becomes impossible to implement policies for RBAC permission, service account usage, network policies, and more.'\n  desc 'check', 'To view the available namespaces, run the command:\n\nkubectl get namespaces\n\nThe default namespaces to be validated are default, kube-public and kube-node-lease if it is created.\n\nFor the default namespace, execute the commands:\n\nkubectl config set-context --current --namespace=default\nkubectl get all\n\nFor the kube-public namespace, execute the commands:\n\nkubectl config set-context --current --namespace=kube-public\nkubectl get all\n\nFor the kube-node-lease namespace, execute the commands:\n\nkubectl config set-context --current --namespace=kube-node-lease\nkubectl get all\n\nThe only valid return values are the kubernetes service (i.e., service/kubernetes) and nothing at all.\n\nIf a return value is returned from the \"kubectl get all\" command and it is not the kubernetes service (i.e., service/kubernetes), this is a finding.'\n  desc 'fix', 'Move any user-managed resources from the default, kube-public and kube-node-lease namespaces, to user namespaces.'\n  impact 0.7\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45658r712503_chk'\n  tag severity: 'high'\n  tag gid: 'V-242383'\n  tag rid: 'SV-242383r712505_rule'\n  tag stig_id: 'CNTR-K8-000290'\n  tag gtitle: 'SRG-APP-000038-CTR-000105'\n  tag fix_id: 'F-45616r712504_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000366']\n  tag nist: ['CM-6 b']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242383.rb"},"title":"User-managed resources must be created in dedicated namespaces.","desc":"Creating namespaces for user-managed resources is important when implementing Role-Based Access Controls (RBAC). RBAC allows for the authorization of users and helps support proper API server permissions separation and network micro segmentation. If user-managed resources are placed within the default namespaces, it becomes impossible to implement policies for RBAC permission, service account usage, network policies, and more.","descriptions":{"default":"Creating namespaces for user-managed resources is important when implementing Role-Based Access Controls (RBAC). RBAC allows for the authorization of users and helps support proper API server permissions separation and network micro segmentation. If user-managed resources are placed within the default namespaces, it becomes impossible to implement policies for RBAC permission, service account usage, network policies, and more.","check":"To view the available namespaces, run the command:\n\nkubectl get namespaces\n\nThe default namespaces to be validated are default, kube-public and kube-node-lease if it is created.\n\nFor the default namespace, execute the commands:\n\nkubectl config set-context --current --namespace=default\nkubectl get all\n\nFor the kube-public namespace, execute the commands:\n\nkubectl config set-context --current --namespace=kube-public\nkubectl get all\n\nFor the kube-node-lease namespace, execute the commands:\n\nkubectl config set-context --current --namespace=kube-node-lease\nkubectl get all\n\nThe only valid return values are the kubernetes service (i.e., service/kubernetes) and nothing at all.\n\nIf a return value is returned from the \"kubectl get all\" command and it is not the kubernetes service (i.e., service/kubernetes), this is a finding.","fix":"Move any user-managed resources from the default, kube-public and kube-node-lease namespaces, to user namespaces."},"impact":0.7,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45658r712503_chk","severity":"high","gid":"V-242383","rid":"SV-242383r712505_rule","stig_id":"CNTR-K8-000290","gtitle":"SRG-APP-000038-CTR-000105","fix_id":"F-45616r712504_fix","documentable":null,"cci":["CCI-000366"],"nist":["CM-6 b"]}},{"id":"SV-242384","code":"control 'SV-242384' do\n  title 'The Kubernetes Scheduler must have secure binding.'\n  desc 'Limiting the number of attack vectors and implementing authentication and encryption on the endpoints available to external sources is paramount when securing the overall Kubernetes cluster. The Scheduler API service exposes port 10251/TCP by default for health and metrics information use. This port does not encrypt or authenticate connections. If this port is exposed externally, an attacker can use this port to attack the entire Kubernetes cluster. By setting the bind address to localhost (i.e., 127.0.0.1), only those internal services that require health and metrics information can access the Scheduler API.'\n  desc 'check', 'Change to the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Run the command:\n\ngrep -i bind-address * \n\nIf the setting \"bind-address\" is not set to \"127.0.0.1\" or is not found in the Kubernetes Scheduler manifest file, this is a finding.'\n  desc 'fix', 'Edit the Kubernetes Scheduler manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Set the argument \"--bind-address\" to \"127.0.0.1\".'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45659r712506_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242384'\n  tag rid: 'SV-242384r712508_rule'\n  tag stig_id: 'CNTR-K8-000300'\n  tag gtitle: 'SRG-APP-000033-CTR-000090'\n  tag fix_id: 'F-45617r712507_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000213']\n  tag nist: ['AC-3']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242384.rb"},"title":"The Kubernetes Scheduler must have secure binding.","desc":"Limiting the number of attack vectors and implementing authentication and encryption on the endpoints available to external sources is paramount when securing the overall Kubernetes cluster. The Scheduler API service exposes port 10251/TCP by default for health and metrics information use. This port does not encrypt or authenticate connections. If this port is exposed externally, an attacker can use this port to attack the entire Kubernetes cluster. By setting the bind address to localhost (i.e., 127.0.0.1), only those internal services that require health and metrics information can access the Scheduler API.","descriptions":{"default":"Limiting the number of attack vectors and implementing authentication and encryption on the endpoints available to external sources is paramount when securing the overall Kubernetes cluster. The Scheduler API service exposes port 10251/TCP by default for health and metrics information use. This port does not encrypt or authenticate connections. If this port is exposed externally, an attacker can use this port to attack the entire Kubernetes cluster. By setting the bind address to localhost (i.e., 127.0.0.1), only those internal services that require health and metrics information can access the Scheduler API.","check":"Change to the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Run the command:\n\ngrep -i bind-address * \n\nIf the setting \"bind-address\" is not set to \"127.0.0.1\" or is not found in the Kubernetes Scheduler manifest file, this is a finding.","fix":"Edit the Kubernetes Scheduler manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Set the argument \"--bind-address\" to \"127.0.0.1\"."},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45659r712506_chk","severity":"medium","gid":"V-242384","rid":"SV-242384r712508_rule","stig_id":"CNTR-K8-000300","gtitle":"SRG-APP-000033-CTR-000090","fix_id":"F-45617r712507_fix","documentable":null,"cci":["CCI-000213"],"nist":["AC-3"]}},{"id":"SV-242385","code":"control 'SV-242385' do\n  title 'The Kubernetes Controller Manager must have secure binding.'\n  desc 'Limiting the number of attack vectors and implementing authentication and encryption on the endpoints available to external sources is paramount when securing the overall Kubernetes cluster. The Controller Manager API service exposes port 10252/TCP by default for health and metrics information use. This port does not encrypt or authenticate connections. If this port is exposed externally, an attacker can use this port to attack the entire Kubernetes cluster. By setting the bind address to only localhost (i.e., 127.0.0.1), only those internal services that require health and metrics information can access the Control Manager API.'\n  desc 'check', 'Change to the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Run the command:\n\ngrep -i bind-address * \n\nIf the setting bind-address is not set to \"127.0.0.1\" or is not found in the Kubernetes Controller Manager manifest file, this is a finding.'\n  desc 'fix', 'Edit the Kubernetes Controller Manager manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Set the argument \"--bind-address\" to \"127.0.0.1\".'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45660r712509_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242385'\n  tag rid: 'SV-242385r712511_rule'\n  tag stig_id: 'CNTR-K8-000310'\n  tag gtitle: 'SRG-APP-000033-CTR-000090'\n  tag fix_id: 'F-45618r712510_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000213']\n  tag nist: ['AC-3']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242385.rb"},"title":"The Kubernetes Controller Manager must have secure binding.","desc":"Limiting the number of attack vectors and implementing authentication and encryption on the endpoints available to external sources is paramount when securing the overall Kubernetes cluster. The Controller Manager API service exposes port 10252/TCP by default for health and metrics information use. This port does not encrypt or authenticate connections. If this port is exposed externally, an attacker can use this port to attack the entire Kubernetes cluster. By setting the bind address to only localhost (i.e., 127.0.0.1), only those internal services that require health and metrics information can access the Control Manager API.","descriptions":{"default":"Limiting the number of attack vectors and implementing authentication and encryption on the endpoints available to external sources is paramount when securing the overall Kubernetes cluster. The Controller Manager API service exposes port 10252/TCP by default for health and metrics information use. This port does not encrypt or authenticate connections. If this port is exposed externally, an attacker can use this port to attack the entire Kubernetes cluster. By setting the bind address to only localhost (i.e., 127.0.0.1), only those internal services that require health and metrics information can access the Control Manager API.","check":"Change to the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Run the command:\n\ngrep -i bind-address * \n\nIf the setting bind-address is not set to \"127.0.0.1\" or is not found in the Kubernetes Controller Manager manifest file, this is a finding.","fix":"Edit the Kubernetes Controller Manager manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Set the argument \"--bind-address\" to \"127.0.0.1\"."},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45660r712509_chk","severity":"medium","gid":"V-242385","rid":"SV-242385r712511_rule","stig_id":"CNTR-K8-000310","gtitle":"SRG-APP-000033-CTR-000090","fix_id":"F-45618r712510_fix","documentable":null,"cci":["CCI-000213"],"nist":["AC-3"]}},{"id":"SV-242386","code":"control 'SV-242386' do\n  title 'The Kubernetes API server must have the insecure port flag disabled.'\n  desc %q(By default, the API server will listen on two ports. One port is the secure port and the other port is called the \"localhost port\". This port is also called the \"insecure port\", port 8080. Any requests to this port bypass authentication and authorization checks. If this port is left open, anyone who gains access to the host on which the master is running can bypass all authorization and authentication mechanisms put in place, and have full control over the entire cluster.\n\nClose the insecure port by setting the API server's --insecure-port flag to \"0\", ensuring that the --insecure-bind-address is not set.)\n  desc 'check', 'Change to the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Run the command:\n\ngrep -i insecure-port * \n\nIf the setting insecure-port is not set to \"0\" or is not configured in the Kubernetes API server manifest file, this is a finding.'\n  desc 'fix', 'Edit the Kubernetes API Server manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Set the argument --insecure-port to \"0\".'\n  impact 0.7\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45661r712512_chk'\n  tag severity: 'high'\n  tag gid: 'V-242386'\n  tag rid: 'SV-242386r712514_rule'\n  tag stig_id: 'CNTR-K8-000320'\n  tag gtitle: 'SRG-APP-000033-CTR-000095'\n  tag fix_id: 'F-45619r712513_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000213']\n  tag nist: ['AC-3']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242386.rb"},"title":"The Kubernetes API server must have the insecure port flag disabled.","desc":"By default, the API server will listen on two ports. One port is the secure port and the other port is called the \"localhost port\". This port is also called the \"insecure port\", port 8080. Any requests to this port bypass authentication and authorization checks. If this port is left open, anyone who gains access to the host on which the master is running can bypass all authorization and authentication mechanisms put in place, and have full control over the entire cluster.\n\nClose the insecure port by setting the API server's --insecure-port flag to \"0\", ensuring that the --insecure-bind-address is not set.","descriptions":{"default":"By default, the API server will listen on two ports. One port is the secure port and the other port is called the \"localhost port\". This port is also called the \"insecure port\", port 8080. Any requests to this port bypass authentication and authorization checks. If this port is left open, anyone who gains access to the host on which the master is running can bypass all authorization and authentication mechanisms put in place, and have full control over the entire cluster.\n\nClose the insecure port by setting the API server's --insecure-port flag to \"0\", ensuring that the --insecure-bind-address is not set.","check":"Change to the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Run the command:\n\ngrep -i insecure-port * \n\nIf the setting insecure-port is not set to \"0\" or is not configured in the Kubernetes API server manifest file, this is a finding.","fix":"Edit the Kubernetes API Server manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Set the argument --insecure-port to \"0\"."},"impact":0.7,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45661r712512_chk","severity":"high","gid":"V-242386","rid":"SV-242386r712514_rule","stig_id":"CNTR-K8-000320","gtitle":"SRG-APP-000033-CTR-000095","fix_id":"F-45619r712513_fix","documentable":null,"cci":["CCI-000213"],"nist":["AC-3"]}},{"id":"SV-242387","code":"control 'SV-242387' do\n  title 'The Kubernetes Kubelet must have the read-only port flag disabled.'\n  desc %q(Kubelet serves a small REST API with read access to port 10255. The read-only port for Kubernetes provides no authentication or authorization security control. Providing unrestricted access on port 10255 exposes Kubernetes pods and containers to malicious attacks or compromise. Port 10255 is deprecated and should be disabled. \n\nClose the read-only-port by setting the API server's read-only port flag to \"0\".)\n  desc 'check', 'Run the following command on each Worker Node:\nps -ef | grep kubelet \n\nVerify that the --read-only-port argument exists and is set to \"0\". \n\nIf the --read-only-port argument exists and is not set to \"0\", this is a finding. \n\nIf the --read-only-port argument does not exist, check the Master Node Kubelet config file.\n\nOn the Kubernetes Master Node, run the command:\nps -ef | grep kubelet\n(path identified by: --config)\n\nVerify there is a readOnlyPort entry in the config file and it is set to \"0\". \n\nIf the --read-only-port argument exists and is not set to \"0\" this is a finding. \n\nIf \"--read-only-port=0\" argument does not exist on the worker node and the master node, this is a finding.'\n  desc 'fix', 'Edit the Kubernetes Kubelet file in the --config directory on the Kubernetes Master Node. Set the argument --read-only-port to 0.  \n\nReset Kubelet service using the following command:\nservice kubelet restart\n\nIf using worker node arguments, edit the kubelet service file /usr/lib/systemd/system/kubelet.service.d/10-kubeadm.conf on each Worker Node: set the parameter in KUBELET_SYSTEM_PODS_ARGS variable to\n\"--read-only-port=0\".'\n  impact 0.7\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45662r712515_chk'\n  tag severity: 'high'\n  tag gid: 'V-242387'\n  tag rid: 'SV-242387r717013_rule'\n  tag stig_id: 'CNTR-K8-000330'\n  tag gtitle: 'SRG-APP-000033-CTR-000095'\n  tag fix_id: 'F-45620r717012_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000213']\n  tag nist: ['AC-3']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242387.rb"},"title":"The Kubernetes Kubelet must have the read-only port flag disabled.","desc":"Kubelet serves a small REST API with read access to port 10255. The read-only port for Kubernetes provides no authentication or authorization security control. Providing unrestricted access on port 10255 exposes Kubernetes pods and containers to malicious attacks or compromise. Port 10255 is deprecated and should be disabled. \n\nClose the read-only-port by setting the API server's read-only port flag to \"0\".","descriptions":{"default":"Kubelet serves a small REST API with read access to port 10255. The read-only port for Kubernetes provides no authentication or authorization security control. Providing unrestricted access on port 10255 exposes Kubernetes pods and containers to malicious attacks or compromise. Port 10255 is deprecated and should be disabled. \n\nClose the read-only-port by setting the API server's read-only port flag to \"0\".","check":"Run the following command on each Worker Node:\nps -ef | grep kubelet \n\nVerify that the --read-only-port argument exists and is set to \"0\". \n\nIf the --read-only-port argument exists and is not set to \"0\", this is a finding. \n\nIf the --read-only-port argument does not exist, check the Master Node Kubelet config file.\n\nOn the Kubernetes Master Node, run the command:\nps -ef | grep kubelet\n(path identified by: --config)\n\nVerify there is a readOnlyPort entry in the config file and it is set to \"0\". \n\nIf the --read-only-port argument exists and is not set to \"0\" this is a finding. \n\nIf \"--read-only-port=0\" argument does not exist on the worker node and the master node, this is a finding.","fix":"Edit the Kubernetes Kubelet file in the --config directory on the Kubernetes Master Node. Set the argument --read-only-port to 0.  \n\nReset Kubelet service using the following command:\nservice kubelet restart\n\nIf using worker node arguments, edit the kubelet service file /usr/lib/systemd/system/kubelet.service.d/10-kubeadm.conf on each Worker Node: set the parameter in KUBELET_SYSTEM_PODS_ARGS variable to\n\"--read-only-port=0\"."},"impact":0.7,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45662r712515_chk","severity":"high","gid":"V-242387","rid":"SV-242387r717013_rule","stig_id":"CNTR-K8-000330","gtitle":"SRG-APP-000033-CTR-000095","fix_id":"F-45620r717012_fix","documentable":null,"cci":["CCI-000213"],"nist":["AC-3"]}},{"id":"SV-242388","code":"control 'SV-242388' do\n  title 'The Kubernetes API server must have the insecure bind address not set.'\n  desc %q(By default, the API server will listen on two ports and addresses. One address is the secure address and the other address is called the \"insecure bind\" address and is set by default to localhost. Any requests to this address bypass authentication and authorization checks. If this insecure bind address is set to localhost, anyone who gains access to the host on which the master is running can bypass all authorization and authentication mechanisms put in place and have full control over the entire cluster.\n\nClose or set the insecure bind address by setting the API server's --insecure-bind-address flag to an IP or leave it unset and ensure that the --insecure-bind-port is not set.)\n  desc 'check', 'Change to the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Run the command:\n\ngrep -i insecure-bind-address * \n\nIf the setting insecure-bind-address is found and set to \"localhost\" in the Kubernetes API manifest file, this is a finding.'\n  desc 'fix', 'Edit the Kubernetes API Server manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Remove the value for the --insecure-bind-address setting.'\n  impact 0.7\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45663r712518_chk'\n  tag severity: 'high'\n  tag gid: 'V-242388'\n  tag rid: 'SV-242388r712520_rule'\n  tag stig_id: 'CNTR-K8-000340'\n  tag gtitle: 'SRG-APP-000033-CTR-000095'\n  tag fix_id: 'F-45621r712519_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000213']\n  tag nist: ['AC-3']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242388.rb"},"title":"The Kubernetes API server must have the insecure bind address not set.","desc":"By default, the API server will listen on two ports and addresses. One address is the secure address and the other address is called the \"insecure bind\" address and is set by default to localhost. Any requests to this address bypass authentication and authorization checks. If this insecure bind address is set to localhost, anyone who gains access to the host on which the master is running can bypass all authorization and authentication mechanisms put in place and have full control over the entire cluster.\n\nClose or set the insecure bind address by setting the API server's --insecure-bind-address flag to an IP or leave it unset and ensure that the --insecure-bind-port is not set.","descriptions":{"default":"By default, the API server will listen on two ports and addresses. One address is the secure address and the other address is called the \"insecure bind\" address and is set by default to localhost. Any requests to this address bypass authentication and authorization checks. If this insecure bind address is set to localhost, anyone who gains access to the host on which the master is running can bypass all authorization and authentication mechanisms put in place and have full control over the entire cluster.\n\nClose or set the insecure bind address by setting the API server's --insecure-bind-address flag to an IP or leave it unset and ensure that the --insecure-bind-port is not set.","check":"Change to the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Run the command:\n\ngrep -i insecure-bind-address * \n\nIf the setting insecure-bind-address is found and set to \"localhost\" in the Kubernetes API manifest file, this is a finding.","fix":"Edit the Kubernetes API Server manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Remove the value for the --insecure-bind-address setting."},"impact":0.7,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45663r712518_chk","severity":"high","gid":"V-242388","rid":"SV-242388r712520_rule","stig_id":"CNTR-K8-000340","gtitle":"SRG-APP-000033-CTR-000095","fix_id":"F-45621r712519_fix","documentable":null,"cci":["CCI-000213"],"nist":["AC-3"]}},{"id":"SV-242389","code":"control 'SV-242389' do\n  title 'The Kubernetes API server must have the secure port set.'\n  desc %q(By default, the API server will listen on what is rightfully called the secure port, port 6443. Any requests to this port will perform authentication and authorization checks. If this port is disabled, anyone who gains access to the host on which the master is running has full control of the entire cluster over encrypted traffic.\n\nOpen the secure port by setting the API server's --secure-port flag to a value other than \"0\".)\n  desc 'check', 'Change to the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Run the command:\n\ngrep -i secure-port * \n\nIf the setting secure-port is set to \"0\" or is not configured in the Kubernetes API manifest file, this is a finding.'\n  desc 'fix', 'Edit the Kubernetes API Server manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Set the argument --secure-port to a value greater than \"0\".'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45664r712521_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242389'\n  tag rid: 'SV-242389r712523_rule'\n  tag stig_id: 'CNTR-K8-000350'\n  tag gtitle: 'SRG-APP-000033-CTR-000100'\n  tag fix_id: 'F-45622r712522_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000213']\n  tag nist: ['AC-3']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242389.rb"},"title":"The Kubernetes API server must have the secure port set.","desc":"By default, the API server will listen on what is rightfully called the secure port, port 6443. Any requests to this port will perform authentication and authorization checks. If this port is disabled, anyone who gains access to the host on which the master is running has full control of the entire cluster over encrypted traffic.\n\nOpen the secure port by setting the API server's --secure-port flag to a value other than \"0\".","descriptions":{"default":"By default, the API server will listen on what is rightfully called the secure port, port 6443. Any requests to this port will perform authentication and authorization checks. If this port is disabled, anyone who gains access to the host on which the master is running has full control of the entire cluster over encrypted traffic.\n\nOpen the secure port by setting the API server's --secure-port flag to a value other than \"0\".","check":"Change to the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Run the command:\n\ngrep -i secure-port * \n\nIf the setting secure-port is set to \"0\" or is not configured in the Kubernetes API manifest file, this is a finding.","fix":"Edit the Kubernetes API Server manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Set the argument --secure-port to a value greater than \"0\"."},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45664r712521_chk","severity":"medium","gid":"V-242389","rid":"SV-242389r712523_rule","stig_id":"CNTR-K8-000350","gtitle":"SRG-APP-000033-CTR-000100","fix_id":"F-45622r712522_fix","documentable":null,"cci":["CCI-000213"],"nist":["AC-3"]}},{"id":"SV-242390","code":"control 'SV-242390' do\n  title 'The Kubernetes API server must have anonymous authentication disabled.'\n  desc 'The Kubernetes API Server controls Kubernetes via an API interface. A user who has access to the API essentially has root access to the entire Kubernetes cluster. To control access, users must be authenticated and authorized. By allowing anonymous connections, the controls put in place to secure the API can be bypassed.\n\nSetting anonymous authentication to \"false\" also disables unauthenticated requests from kubelets.\n\nWhile there are instances where anonymous connections may be needed (e.g., health checks) and Role-Based Access Controls (RBAC) are in place to limit the anonymous access, this access should be disabled, and only enabled when necessary.'\n  desc 'check', 'Change to the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Run the command:\n\ngrep -i anonymous-auth * \n\nIf the setting anonymous-auth is set to \"true\" in the Kubernetes API Server manifest file, this is a finding.'\n  desc 'fix', 'Edit the Kubernetes API Server manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Set the argument --anonymous-auth to \"false\".'\n  impact 0.7\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45665r712524_chk'\n  tag severity: 'high'\n  tag gid: 'V-242390'\n  tag rid: 'SV-242390r712526_rule'\n  tag stig_id: 'CNTR-K8-000360'\n  tag gtitle: 'SRG-APP-000033-CTR-000100'\n  tag fix_id: 'F-45623r712525_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000213']\n  tag nist: ['AC-3']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242390.rb"},"title":"The Kubernetes API server must have anonymous authentication disabled.","desc":"The Kubernetes API Server controls Kubernetes via an API interface. A user who has access to the API essentially has root access to the entire Kubernetes cluster. To control access, users must be authenticated and authorized. By allowing anonymous connections, the controls put in place to secure the API can be bypassed.\n\nSetting anonymous authentication to \"false\" also disables unauthenticated requests from kubelets.\n\nWhile there are instances where anonymous connections may be needed (e.g., health checks) and Role-Based Access Controls (RBAC) are in place to limit the anonymous access, this access should be disabled, and only enabled when necessary.","descriptions":{"default":"The Kubernetes API Server controls Kubernetes via an API interface. A user who has access to the API essentially has root access to the entire Kubernetes cluster. To control access, users must be authenticated and authorized. By allowing anonymous connections, the controls put in place to secure the API can be bypassed.\n\nSetting anonymous authentication to \"false\" also disables unauthenticated requests from kubelets.\n\nWhile there are instances where anonymous connections may be needed (e.g., health checks) and Role-Based Access Controls (RBAC) are in place to limit the anonymous access, this access should be disabled, and only enabled when necessary.","check":"Change to the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Run the command:\n\ngrep -i anonymous-auth * \n\nIf the setting anonymous-auth is set to \"true\" in the Kubernetes API Server manifest file, this is a finding.","fix":"Edit the Kubernetes API Server manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Set the argument --anonymous-auth to \"false\"."},"impact":0.7,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45665r712524_chk","severity":"high","gid":"V-242390","rid":"SV-242390r712526_rule","stig_id":"CNTR-K8-000360","gtitle":"SRG-APP-000033-CTR-000100","fix_id":"F-45623r712525_fix","documentable":null,"cci":["CCI-000213"],"nist":["AC-3"]}},{"id":"SV-242391","code":"control 'SV-242391' do\n  title 'The Kubernetes Kubelet must have anonymous authentication disabled.'\n  desc 'A user who has access to the Kubelet essentially has root access to the nodes contained within the Kubernetes Control Plane. To control access, users must be authenticated and authorized. By allowing anonymous connections, the controls put in place to secure the Kubelet can be bypassed.\n\nSetting anonymous authentication to \"false\" also disables unauthenticated requests from kubelets.\n\nWhile there are instances where anonymous connections may be needed (e.g., health checks) and Role-Based Access Controls (RBAC) are in place to limit the anonymous access, this access must be disabled and only enabled when necessary.'\n  desc 'check', 'Change to the /etc/sysconfig/ directory on the Kubernetes Master Node. Run the command:\n\ngrep -i anonymous-auth kubelet \n\nIf the setting \"anonymous-auth\" is set to \"true\" or the parameter not set in the Kubernetes Kubelet configuration file, this is a finding.'\n  desc 'fix', 'Edit the Kubernetes Kubelet file in the/etc/sysconfig/ directory on the Kubernetes Master Node. \n\nSet the argument \"--anonymous-auth\" to \"false\". \n\nRestart kubelet service using command:\nservice kubelet restart'\n  impact 0.7\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45666r712527_chk'\n  tag severity: 'high'\n  tag gid: 'V-242391'\n  tag rid: 'SV-242391r712529_rule'\n  tag stig_id: 'CNTR-K8-000370'\n  tag gtitle: 'SRG-APP-000033-CTR-000090'\n  tag fix_id: 'F-45624r712528_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000213']\n  tag nist: ['AC-3']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242391.rb"},"title":"The Kubernetes Kubelet must have anonymous authentication disabled.","desc":"A user who has access to the Kubelet essentially has root access to the nodes contained within the Kubernetes Control Plane. To control access, users must be authenticated and authorized. By allowing anonymous connections, the controls put in place to secure the Kubelet can be bypassed.\n\nSetting anonymous authentication to \"false\" also disables unauthenticated requests from kubelets.\n\nWhile there are instances where anonymous connections may be needed (e.g., health checks) and Role-Based Access Controls (RBAC) are in place to limit the anonymous access, this access must be disabled and only enabled when necessary.","descriptions":{"default":"A user who has access to the Kubelet essentially has root access to the nodes contained within the Kubernetes Control Plane. To control access, users must be authenticated and authorized. By allowing anonymous connections, the controls put in place to secure the Kubelet can be bypassed.\n\nSetting anonymous authentication to \"false\" also disables unauthenticated requests from kubelets.\n\nWhile there are instances where anonymous connections may be needed (e.g., health checks) and Role-Based Access Controls (RBAC) are in place to limit the anonymous access, this access must be disabled and only enabled when necessary.","check":"Change to the /etc/sysconfig/ directory on the Kubernetes Master Node. Run the command:\n\ngrep -i anonymous-auth kubelet \n\nIf the setting \"anonymous-auth\" is set to \"true\" or the parameter not set in the Kubernetes Kubelet configuration file, this is a finding.","fix":"Edit the Kubernetes Kubelet file in the/etc/sysconfig/ directory on the Kubernetes Master Node. \n\nSet the argument \"--anonymous-auth\" to \"false\". \n\nRestart kubelet service using command:\nservice kubelet restart"},"impact":0.7,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45666r712527_chk","severity":"high","gid":"V-242391","rid":"SV-242391r712529_rule","stig_id":"CNTR-K8-000370","gtitle":"SRG-APP-000033-CTR-000090","fix_id":"F-45624r712528_fix","documentable":null,"cci":["CCI-000213"],"nist":["AC-3"]}},{"id":"SV-242392","code":"control 'SV-242392' do\n  title 'The Kubernetes kubelet must enable explicit authorization.'\n  desc 'Kubelet is the primary agent on each node. The API server communicates with each kubelet to perform tasks such as starting/stopping pods. By default, kubelets allow all authenticated requests, even anonymous ones, without requiring any authorization checks from the API server. This default behavior bypasses any authorization controls put in place to limit what users may perform within the Kubernetes cluster. To change this behavior, the default setting of AlwaysAllow for the authorization mode must be set to \"Webhook\".'\n  desc 'check', 'Change to the /etc/sysconfig/ directory on the Kubernetes Master Node. Run the command:\n\ngrep -i authorization-mode kubelet  \n\nOn each Worker node, change to the /etc/sysconfig/ directory. Run the command:\n\ngrep -i authorization-mode kubelet\n\nIf authorization-mode is missing or is set to \"AllowAlways\" on the Master node or any of the Worker nodes, this is a finding.'\n  desc 'fix', 'Edit the Kubernetes Kubelet file in the/etc/sysconfig/ directory on the Kubernetes Master and Worker nodes. \n\nSet the argument --authorization-mode to \"Webhook\". \n\nRestart each kubelet service after the change is made using the command:\nservice kubelet restart'\n  impact 0.7\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45667r712530_chk'\n  tag severity: 'high'\n  tag gid: 'V-242392'\n  tag rid: 'SV-242392r712532_rule'\n  tag stig_id: 'CNTR-K8-000380'\n  tag gtitle: 'SRG-APP-000033-CTR-000095'\n  tag fix_id: 'F-45625r717029_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000213']\n  tag nist: ['AC-3']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242392.rb"},"title":"The Kubernetes kubelet must enable explicit authorization.","desc":"Kubelet is the primary agent on each node. The API server communicates with each kubelet to perform tasks such as starting/stopping pods. By default, kubelets allow all authenticated requests, even anonymous ones, without requiring any authorization checks from the API server. This default behavior bypasses any authorization controls put in place to limit what users may perform within the Kubernetes cluster. To change this behavior, the default setting of AlwaysAllow for the authorization mode must be set to \"Webhook\".","descriptions":{"default":"Kubelet is the primary agent on each node. The API server communicates with each kubelet to perform tasks such as starting/stopping pods. By default, kubelets allow all authenticated requests, even anonymous ones, without requiring any authorization checks from the API server. This default behavior bypasses any authorization controls put in place to limit what users may perform within the Kubernetes cluster. To change this behavior, the default setting of AlwaysAllow for the authorization mode must be set to \"Webhook\".","check":"Change to the /etc/sysconfig/ directory on the Kubernetes Master Node. Run the command:\n\ngrep -i authorization-mode kubelet  \n\nOn each Worker node, change to the /etc/sysconfig/ directory. Run the command:\n\ngrep -i authorization-mode kubelet\n\nIf authorization-mode is missing or is set to \"AllowAlways\" on the Master node or any of the Worker nodes, this is a finding.","fix":"Edit the Kubernetes Kubelet file in the/etc/sysconfig/ directory on the Kubernetes Master and Worker nodes. \n\nSet the argument --authorization-mode to \"Webhook\". \n\nRestart each kubelet service after the change is made using the command:\nservice kubelet restart"},"impact":0.7,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45667r712530_chk","severity":"high","gid":"V-242392","rid":"SV-242392r712532_rule","stig_id":"CNTR-K8-000380","gtitle":"SRG-APP-000033-CTR-000095","fix_id":"F-45625r717029_fix","documentable":null,"cci":["CCI-000213"],"nist":["AC-3"]}},{"id":"SV-242393","code":"control 'SV-242393' do\n  title 'Kubernetes Worker Nodes must not have sshd service running.'\n  desc 'Worker Nodes are maintained and monitored by the Master Node. Direct access and manipulation of the nodes should not take place by administrators. Worker nodes should be treated as immutable and updated via replacement rather than in-place upgrades.'\n  desc 'check', 'Log in to each worker node. Verify that the sshd service is not running. To validate that the service is not running, run the command:\n\nsystemctl status sshd\n\nIf the service sshd is active (running), this is a finding.\n\nNote: If console access is not available, SSH access can be attempted. If the worker nodes cannot be reached, this requirement is \"not a finding\".'\n  desc 'fix', 'To stop the sshd service, run the command:\n\nsystemctl stop sshd\n\nNote: If access to the worker node is through an SSH session, it is important to realize there are two requirements for disabling and stopping the sshd service and they should be done during the same SSH session. Disabling the service must be performed first and then the service stopped to guarantee both settings can be made if the session is interrupted.'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45668r712533_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242393'\n  tag rid: 'SV-242393r717015_rule'\n  tag stig_id: 'CNTR-K8-000400'\n  tag gtitle: 'SRG-APP-000033-CTR-000095'\n  tag fix_id: 'F-45626r717014_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000213']\n  tag nist: ['AC-3']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242393.rb"},"title":"Kubernetes Worker Nodes must not have sshd service running.","desc":"Worker Nodes are maintained and monitored by the Master Node. Direct access and manipulation of the nodes should not take place by administrators. Worker nodes should be treated as immutable and updated via replacement rather than in-place upgrades.","descriptions":{"default":"Worker Nodes are maintained and monitored by the Master Node. Direct access and manipulation of the nodes should not take place by administrators. Worker nodes should be treated as immutable and updated via replacement rather than in-place upgrades.","check":"Log in to each worker node. Verify that the sshd service is not running. To validate that the service is not running, run the command:\n\nsystemctl status sshd\n\nIf the service sshd is active (running), this is a finding.\n\nNote: If console access is not available, SSH access can be attempted. If the worker nodes cannot be reached, this requirement is \"not a finding\".","fix":"To stop the sshd service, run the command:\n\nsystemctl stop sshd\n\nNote: If access to the worker node is through an SSH session, it is important to realize there are two requirements for disabling and stopping the sshd service and they should be done during the same SSH session. Disabling the service must be performed first and then the service stopped to guarantee both settings can be made if the session is interrupted."},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45668r712533_chk","severity":"medium","gid":"V-242393","rid":"SV-242393r717015_rule","stig_id":"CNTR-K8-000400","gtitle":"SRG-APP-000033-CTR-000095","fix_id":"F-45626r717014_fix","documentable":null,"cci":["CCI-000213"],"nist":["AC-3"]}},{"id":"SV-242394","code":"control 'SV-242394' do\n  title 'Kubernetes Worker Nodes must not have the sshd service enabled.'\n  desc 'Worker Nodes are maintained and monitored by the Master Node. Direct access and manipulation of the nodes must not take place by administrators. Worker nodes must be treated as immutable and updated via replacement rather than in-place upgrades.'\n  desc 'check', 'Log in to each worker node. Verify that the sshd service is not enabled. To validate the service is not enabled, run the command:\n\nsystemctl is-enabled sshd.service\n\nIf the service sshd is enabled, this is a finding.\n\nNote: If console access is not available, SSH access can be attempted. If the worker nodes cannot be reached, this requirement is \"not a finding\".'\n  desc 'fix', 'To disable the sshd service, run the command:\n\nchkconfig sshd off\n\nNote: If access to the worker node is through an SSH session, it is important to realize there are two requirements for disabling and stopping the sshd service that must be done during the same SSH session. Disabling the service must be performed first and then the service stopped to guarantee both settings can be made if the session is interrupted.'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45669r712536_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242394'\n  tag rid: 'SV-242394r717017_rule'\n  tag stig_id: 'CNTR-K8-000410'\n  tag gtitle: 'SRG-APP-000033-CTR-000095'\n  tag fix_id: 'F-45627r717016_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000213']\n  tag nist: ['AC-3']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242394.rb"},"title":"Kubernetes Worker Nodes must not have the sshd service enabled.","desc":"Worker Nodes are maintained and monitored by the Master Node. Direct access and manipulation of the nodes must not take place by administrators. Worker nodes must be treated as immutable and updated via replacement rather than in-place upgrades.","descriptions":{"default":"Worker Nodes are maintained and monitored by the Master Node. Direct access and manipulation of the nodes must not take place by administrators. Worker nodes must be treated as immutable and updated via replacement rather than in-place upgrades.","check":"Log in to each worker node. Verify that the sshd service is not enabled. To validate the service is not enabled, run the command:\n\nsystemctl is-enabled sshd.service\n\nIf the service sshd is enabled, this is a finding.\n\nNote: If console access is not available, SSH access can be attempted. If the worker nodes cannot be reached, this requirement is \"not a finding\".","fix":"To disable the sshd service, run the command:\n\nchkconfig sshd off\n\nNote: If access to the worker node is through an SSH session, it is important to realize there are two requirements for disabling and stopping the sshd service that must be done during the same SSH session. Disabling the service must be performed first and then the service stopped to guarantee both settings can be made if the session is interrupted."},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45669r712536_chk","severity":"medium","gid":"V-242394","rid":"SV-242394r717017_rule","stig_id":"CNTR-K8-000410","gtitle":"SRG-APP-000033-CTR-000095","fix_id":"F-45627r717016_fix","documentable":null,"cci":["CCI-000213"],"nist":["AC-3"]}},{"id":"SV-242395","code":"control 'SV-242395' do\n  title 'Kubernetes dashboard must not be enabled.'\n  desc 'While the Kubernetes dashboard is not inherently insecure on its own, it is often coupled with a misconfiguration of Role-Based Access control (RBAC) permissions that can unintentionally over-grant access. It is not commonly protected with \"NetworkPolicies\", preventing all pods from being able to reach it. In increasingly rare circumstances, the Kubernetes dashboard is exposed publicly to the internet.'\n  desc 'check', 'From the master node, run the command:\n\nkubectl get pods --all-namespaces -l k8s-app=kubernetes-dashboard\n\nIf any resources are returned, this is a finding.'\n  desc 'fix', 'Delete the Kubernetes dashboard deployment with the following command:\n\nkubectl delete deployment kubernetes-dashboard --namespace=kube-system'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45670r712539_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242395'\n  tag rid: 'SV-242395r712541_rule'\n  tag stig_id: 'CNTR-K8-000420'\n  tag gtitle: 'SRG-APP-000033-CTR-000095'\n  tag fix_id: 'F-45628r712540_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000213']\n  tag nist: ['AC-3']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242395.rb"},"title":"Kubernetes dashboard must not be enabled.","desc":"While the Kubernetes dashboard is not inherently insecure on its own, it is often coupled with a misconfiguration of Role-Based Access control (RBAC) permissions that can unintentionally over-grant access. It is not commonly protected with \"NetworkPolicies\", preventing all pods from being able to reach it. In increasingly rare circumstances, the Kubernetes dashboard is exposed publicly to the internet.","descriptions":{"default":"While the Kubernetes dashboard is not inherently insecure on its own, it is often coupled with a misconfiguration of Role-Based Access control (RBAC) permissions that can unintentionally over-grant access. It is not commonly protected with \"NetworkPolicies\", preventing all pods from being able to reach it. In increasingly rare circumstances, the Kubernetes dashboard is exposed publicly to the internet.","check":"From the master node, run the command:\n\nkubectl get pods --all-namespaces -l k8s-app=kubernetes-dashboard\n\nIf any resources are returned, this is a finding.","fix":"Delete the Kubernetes dashboard deployment with the following command:\n\nkubectl delete deployment kubernetes-dashboard --namespace=kube-system"},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45670r712539_chk","severity":"medium","gid":"V-242395","rid":"SV-242395r712541_rule","stig_id":"CNTR-K8-000420","gtitle":"SRG-APP-000033-CTR-000095","fix_id":"F-45628r712540_fix","documentable":null,"cci":["CCI-000213"],"nist":["AC-3"]}},{"id":"SV-242396","code":"control 'SV-242396' do\n  title 'Kubernetes Kubectl cp command must give expected access and results.'\n  desc 'One of the tools heavily used to interact with containers in the Kubernetes cluster is kubectl. The command is the tool System Administrators used to create, modify, and delete resources. One of the capabilities of the tool is to copy files to and from running containers (i.e., kubectl cp). The command uses the \"tar\" command of the container to copy files from the container to the host executing the \"kubectl cp\" command. If the \"tar\" command on the container has been replaced by a malicious user, the command can copy files anywhere on the host machine. This flaw has been fixed in later versions of the tool. It is recommended to use kubectl versions newer than 1.12.9.'\n  desc 'check', 'From the Master and each Worker node, check the version of kubectl by executing the command:\n\nkubectl version --client\n\nIf the Master or any Work nodes are not using kubectl version 1.12.9 or newer, this is a finding.'\n  desc 'fix', 'Upgrade the Master and Worker nodes to the latest version of kubectl.'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45671r712542_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242396'\n  tag rid: 'SV-242396r712544_rule'\n  tag stig_id: 'CNTR-K8-000430'\n  tag gtitle: 'SRG-APP-000033-CTR-000090'\n  tag fix_id: 'F-45629r712543_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000213']\n  tag nist: ['AC-3']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242396.rb"},"title":"Kubernetes Kubectl cp command must give expected access and results.","desc":"One of the tools heavily used to interact with containers in the Kubernetes cluster is kubectl. The command is the tool System Administrators used to create, modify, and delete resources. One of the capabilities of the tool is to copy files to and from running containers (i.e., kubectl cp). The command uses the \"tar\" command of the container to copy files from the container to the host executing the \"kubectl cp\" command. If the \"tar\" command on the container has been replaced by a malicious user, the command can copy files anywhere on the host machine. This flaw has been fixed in later versions of the tool. It is recommended to use kubectl versions newer than 1.12.9.","descriptions":{"default":"One of the tools heavily used to interact with containers in the Kubernetes cluster is kubectl. The command is the tool System Administrators used to create, modify, and delete resources. One of the capabilities of the tool is to copy files to and from running containers (i.e., kubectl cp). The command uses the \"tar\" command of the container to copy files from the container to the host executing the \"kubectl cp\" command. If the \"tar\" command on the container has been replaced by a malicious user, the command can copy files anywhere on the host machine. This flaw has been fixed in later versions of the tool. It is recommended to use kubectl versions newer than 1.12.9.","check":"From the Master and each Worker node, check the version of kubectl by executing the command:\n\nkubectl version --client\n\nIf the Master or any Work nodes are not using kubectl version 1.12.9 or newer, this is a finding.","fix":"Upgrade the Master and Worker nodes to the latest version of kubectl."},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45671r712542_chk","severity":"medium","gid":"V-242396","rid":"SV-242396r712544_rule","stig_id":"CNTR-K8-000430","gtitle":"SRG-APP-000033-CTR-000090","fix_id":"F-45629r712543_fix","documentable":null,"cci":["CCI-000213"],"nist":["AC-3"]}},{"id":"SV-242397","code":"control 'SV-242397' do\n  title 'The Kubernetes kubelet static PodPath must not enable static pods.'\n  desc 'Allowing kubelet to set a staticPodPath gives containers with root access permissions to traverse the hosting filesystem. The danger comes when the container can create a manifest file within the /etc/kubernetes/manifests directory. When a manifest is created within this directory, containers are entirely governed by the Kubelet not the API Server. The container is not susceptible to admission control at all. Any containers or pods that are instantiated in this manner are called \"static pods\" and are meant to be used for pods such as the API server, scheduler, controller, etc., not workload pods that need to be governed by the API Server.'\n  desc 'check', 'On the Master and Worker nodes, change to the /etc/sysconfig/ directory and run the command:\n\ngrep -i staticPodPath kubelet\n\nIf any of the nodes return a value for staticPodPath, this is a finding.'\n  desc 'fix', 'Edit the kubelet file on each node under the /etc/sysconfig directory to remove the staticPodPath setting and restart the kubelet service by executing the command:\n\nservice kubelet restart'\n  impact 0.7\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45672r712545_chk'\n  tag severity: 'high'\n  tag gid: 'V-242397'\n  tag rid: 'SV-242397r712547_rule'\n  tag stig_id: 'CNTR-K8-000440'\n  tag gtitle: 'SRG-APP-000033-CTR-000090'\n  tag fix_id: 'F-45630r712546_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000213']\n  tag nist: ['AC-3']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242397.rb"},"title":"The Kubernetes kubelet static PodPath must not enable static pods.","desc":"Allowing kubelet to set a staticPodPath gives containers with root access permissions to traverse the hosting filesystem. The danger comes when the container can create a manifest file within the /etc/kubernetes/manifests directory. When a manifest is created within this directory, containers are entirely governed by the Kubelet not the API Server. The container is not susceptible to admission control at all. Any containers or pods that are instantiated in this manner are called \"static pods\" and are meant to be used for pods such as the API server, scheduler, controller, etc., not workload pods that need to be governed by the API Server.","descriptions":{"default":"Allowing kubelet to set a staticPodPath gives containers with root access permissions to traverse the hosting filesystem. The danger comes when the container can create a manifest file within the /etc/kubernetes/manifests directory. When a manifest is created within this directory, containers are entirely governed by the Kubelet not the API Server. The container is not susceptible to admission control at all. Any containers or pods that are instantiated in this manner are called \"static pods\" and are meant to be used for pods such as the API server, scheduler, controller, etc., not workload pods that need to be governed by the API Server.","check":"On the Master and Worker nodes, change to the /etc/sysconfig/ directory and run the command:\n\ngrep -i staticPodPath kubelet\n\nIf any of the nodes return a value for staticPodPath, this is a finding.","fix":"Edit the kubelet file on each node under the /etc/sysconfig directory to remove the staticPodPath setting and restart the kubelet service by executing the command:\n\nservice kubelet restart"},"impact":0.7,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45672r712545_chk","severity":"high","gid":"V-242397","rid":"SV-242397r712547_rule","stig_id":"CNTR-K8-000440","gtitle":"SRG-APP-000033-CTR-000090","fix_id":"F-45630r712546_fix","documentable":null,"cci":["CCI-000213"],"nist":["AC-3"]}},{"id":"SV-242398","code":"control 'SV-242398' do\n  title 'Kubernetes DynamicAuditing must not be enabled.'\n  desc 'Protecting the audit data from change or deletion is important when an attack occurs. One way an attacker can cover their tracks is to change or delete audit records. This will either make the attack unnoticeable or make it more difficult to investigate how the attack took place and what changes were made. The audit data can be protected through audit log file protections and user authorization.\n\nOne way for an attacker to thwart these measures is to send the audit logs to another source and filter the audited results before sending them on to the original target. This can be done in Kubernetes through the configuration of dynamic audit webhooks through the DynamicAuditing flag.'\n  desc 'check', %q(On the Master node, change to the manifests' directory at /etc/kubernetes/manifests and run the command:\n\ngrep -i feature-gates *\n\nReview the feature-gates setting, if one is returned.\n\nIf the feature-gates setting is available and contains the DynamicAuditing flag set to \"true\", this is a finding.\n\nChange to the directory /etc/sysconfig on the Master and each Worker Node and execute the command:\n\ngrep -i feature-gates kubelet\n\nReview every feature-gates setting that is returned.\n\nIf any feature-gates setting is available and contains the \"DynamicAuditing\" flag set to \"true\", this is a finding.)\n  desc 'fix', 'Edit any manifest files or kubelet config files that contain the feature-gates setting with DynamicAuditing set to \"true\". Set the flag to \"false\" or remove the \"DynamicAuditing\" setting completely. Restart the kubelet service if the kubelet config file if the kubelet config file is changed.'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45673r712548_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242398'\n  tag rid: 'SV-242398r717019_rule'\n  tag stig_id: 'CNTR-K8-000450'\n  tag gtitle: 'SRG-APP-000033-CTR-000100'\n  tag fix_id: 'F-45631r717018_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000213']\n  tag nist: ['AC-3']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242398.rb"},"title":"Kubernetes DynamicAuditing must not be enabled.","desc":"Protecting the audit data from change or deletion is important when an attack occurs. One way an attacker can cover their tracks is to change or delete audit records. This will either make the attack unnoticeable or make it more difficult to investigate how the attack took place and what changes were made. The audit data can be protected through audit log file protections and user authorization.\n\nOne way for an attacker to thwart these measures is to send the audit logs to another source and filter the audited results before sending them on to the original target. This can be done in Kubernetes through the configuration of dynamic audit webhooks through the DynamicAuditing flag.","descriptions":{"default":"Protecting the audit data from change or deletion is important when an attack occurs. One way an attacker can cover their tracks is to change or delete audit records. This will either make the attack unnoticeable or make it more difficult to investigate how the attack took place and what changes were made. The audit data can be protected through audit log file protections and user authorization.\n\nOne way for an attacker to thwart these measures is to send the audit logs to another source and filter the audited results before sending them on to the original target. This can be done in Kubernetes through the configuration of dynamic audit webhooks through the DynamicAuditing flag.","check":"On the Master node, change to the manifests' directory at /etc/kubernetes/manifests and run the command:\n\ngrep -i feature-gates *\n\nReview the feature-gates setting, if one is returned.\n\nIf the feature-gates setting is available and contains the DynamicAuditing flag set to \"true\", this is a finding.\n\nChange to the directory /etc/sysconfig on the Master and each Worker Node and execute the command:\n\ngrep -i feature-gates kubelet\n\nReview every feature-gates setting that is returned.\n\nIf any feature-gates setting is available and contains the \"DynamicAuditing\" flag set to \"true\", this is a finding.","fix":"Edit any manifest files or kubelet config files that contain the feature-gates setting with DynamicAuditing set to \"true\". Set the flag to \"false\" or remove the \"DynamicAuditing\" setting completely. Restart the kubelet service if the kubelet config file if the kubelet config file is changed."},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45673r712548_chk","severity":"medium","gid":"V-242398","rid":"SV-242398r717019_rule","stig_id":"CNTR-K8-000450","gtitle":"SRG-APP-000033-CTR-000100","fix_id":"F-45631r717018_fix","documentable":null,"cci":["CCI-000213"],"nist":["AC-3"]}},{"id":"SV-242399","code":"control 'SV-242399' do\n  title 'Kubernetes DynamicKubeletConfig must not be enabled.'\n  desc 'Kubernetes allows a user to configure kubelets with dynamic configurations. When dynamic configuration is used, the kubelet will watch for changes to the configuration file. When changes are made, the kubelet will automatically restart. Allowing this capability bypasses access restrictions and authorizations. Using this capability, an attacker can lower the security posture of the kubelet, which includes allowing the ability to run arbitrary commands in any container running on that node.'\n  desc 'check', %q(On the Master node, change to the manifests' directory at /etc/kubernetes/manifests and run the command:\n\ngrep -i feature-gates *\n\nReview the feature-gates setting if one is returned.\n\nIf the feature-gates setting does not exist or feature-gates does not contain the DynamicKubeletConfig flag or the \"DynamicKubletConfig\" flag is set to \"true\", this is a finding.\n\nChange to the directory /etc/sysconfig on the Master and each Worker node and execute the command:\n\ngrep -i feature-gates kubelet\n\nReview every feature-gates setting if one is returned.\n\nIf the feature-gates setting does not exist or feature-gates does not contain the DynamicKubeletConfig flag or the DynamicKubletConfig flag is set to \"true\", this is a finding.)\n  desc 'fix', 'Edit any manifest file or kubelet config file that does not contain a feature-gates setting or has DynamicKubeletConfig set to \"true\".\n\nAn omission of DynamicKubeletConfig within the feature-gates defaults to true. Set DynamicKubeletConfig to \"false\". Restart the kubelet service if the kubelet config file is changed.'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45674r712551_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242399'\n  tag rid: 'SV-242399r717021_rule'\n  tag stig_id: 'CNTR-K8-000460'\n  tag gtitle: 'SRG-APP-000033-CTR-000095'\n  tag fix_id: 'F-45632r717020_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000213']\n  tag nist: ['AC-3']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242399.rb"},"title":"Kubernetes DynamicKubeletConfig must not be enabled.","desc":"Kubernetes allows a user to configure kubelets with dynamic configurations. When dynamic configuration is used, the kubelet will watch for changes to the configuration file. When changes are made, the kubelet will automatically restart. Allowing this capability bypasses access restrictions and authorizations. Using this capability, an attacker can lower the security posture of the kubelet, which includes allowing the ability to run arbitrary commands in any container running on that node.","descriptions":{"default":"Kubernetes allows a user to configure kubelets with dynamic configurations. When dynamic configuration is used, the kubelet will watch for changes to the configuration file. When changes are made, the kubelet will automatically restart. Allowing this capability bypasses access restrictions and authorizations. Using this capability, an attacker can lower the security posture of the kubelet, which includes allowing the ability to run arbitrary commands in any container running on that node.","check":"On the Master node, change to the manifests' directory at /etc/kubernetes/manifests and run the command:\n\ngrep -i feature-gates *\n\nReview the feature-gates setting if one is returned.\n\nIf the feature-gates setting does not exist or feature-gates does not contain the DynamicKubeletConfig flag or the \"DynamicKubletConfig\" flag is set to \"true\", this is a finding.\n\nChange to the directory /etc/sysconfig on the Master and each Worker node and execute the command:\n\ngrep -i feature-gates kubelet\n\nReview every feature-gates setting if one is returned.\n\nIf the feature-gates setting does not exist or feature-gates does not contain the DynamicKubeletConfig flag or the DynamicKubletConfig flag is set to \"true\", this is a finding.","fix":"Edit any manifest file or kubelet config file that does not contain a feature-gates setting or has DynamicKubeletConfig set to \"true\".\n\nAn omission of DynamicKubeletConfig within the feature-gates defaults to true. Set DynamicKubeletConfig to \"false\". Restart the kubelet service if the kubelet config file is changed."},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45674r712551_chk","severity":"medium","gid":"V-242399","rid":"SV-242399r717021_rule","stig_id":"CNTR-K8-000460","gtitle":"SRG-APP-000033-CTR-000095","fix_id":"F-45632r717020_fix","documentable":null,"cci":["CCI-000213"],"nist":["AC-3"]}},{"id":"SV-242400","code":"control 'SV-242400' do\n  title 'The Kubernetes API server must have Alpha APIs disabled.'\n  desc 'Kubernetes allows alpha API calls within the API server. The alpha features are disabled by default since they are not ready for production and likely to change without notice. These features may also contain security issues that are rectified as the feature matures. To keep the Kubernetes cluster secure and stable, these alpha features must not be used.'\n  desc 'check', %q(On the Master node, change to the manifests' directory at /etc/kubernetes/manifests and run the command:\n\ngrep -i feature-gates *\n\nReview the feature-gates setting, if one is returned.\n\nIf the feature-gates setting is available and contains the AllAlpha flag set to \"true\", this is a finding.)\n  desc 'fix', 'Edit any manifest files that contain the feature-gates setting with AllAlpha set to \"true\". Set the flag to \"false\" or remove the AllAlpha setting completely.\n(AllAlpha- default=false)'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45675r712554_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242400'\n  tag rid: 'SV-242400r712556_rule'\n  tag stig_id: 'CNTR-K8-000470'\n  tag gtitle: 'SRG-APP-000033-CTR-000090'\n  tag fix_id: 'F-45633r712555_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000213']\n  tag nist: ['AC-3']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242400.rb"},"title":"The Kubernetes API server must have Alpha APIs disabled.","desc":"Kubernetes allows alpha API calls within the API server. The alpha features are disabled by default since they are not ready for production and likely to change without notice. These features may also contain security issues that are rectified as the feature matures. To keep the Kubernetes cluster secure and stable, these alpha features must not be used.","descriptions":{"default":"Kubernetes allows alpha API calls within the API server. The alpha features are disabled by default since they are not ready for production and likely to change without notice. These features may also contain security issues that are rectified as the feature matures. To keep the Kubernetes cluster secure and stable, these alpha features must not be used.","check":"On the Master node, change to the manifests' directory at /etc/kubernetes/manifests and run the command:\n\ngrep -i feature-gates *\n\nReview the feature-gates setting, if one is returned.\n\nIf the feature-gates setting is available and contains the AllAlpha flag set to \"true\", this is a finding.","fix":"Edit any manifest files that contain the feature-gates setting with AllAlpha set to \"true\". Set the flag to \"false\" or remove the AllAlpha setting completely.\n(AllAlpha- default=false)"},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45675r712554_chk","severity":"medium","gid":"V-242400","rid":"SV-242400r712556_rule","stig_id":"CNTR-K8-000470","gtitle":"SRG-APP-000033-CTR-000090","fix_id":"F-45633r712555_fix","documentable":null,"cci":["CCI-000213"],"nist":["AC-3"]}},{"id":"SV-242401","code":"control 'SV-242401' do\n  title 'The Kubernetes API Server must have an audit policy set.'\n  desc 'When Kubernetes is started, components and user services are started. For auditing startup events, and events for components and services, it is important that auditing begin on startup. Within Kubernetes, audit data for all components is generated by the API server. To enable auditing to begin, an audit policy must be defined for the events and the information to be stored with each event. It is also necessary to give a secure location where the audit logs are to be stored. If an audit log path is not specified, all audit data is sent to studio.'\n  desc 'check', 'Change to the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Run the command:\n\ngrep -i audit-policy-file * \n\nIf the audit-policy-file is not set, this is a finding.'\n  desc 'fix', 'Edit the Kubernetes API Server manifest and set \"--audit-policy-file\" to the audit policy file.\n\nNote: If the API server is running as a Pod, then the manifest will also need to be updated to mount the host system filesystem where the audit policy file resides.'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45676r712557_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242401'\n  tag rid: 'SV-242401r712559_rule'\n  tag stig_id: 'CNTR-K8-000600'\n  tag gtitle: 'SRG-APP-000092-CTR-000165'\n  tag fix_id: 'F-45634r717023_fix'\n  tag 'documentable'\n  tag cci: ['CCI-001464']\n  tag nist: ['AU-14 (1)']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242401.rb"},"title":"The Kubernetes API Server must have an audit policy set.","desc":"When Kubernetes is started, components and user services are started. For auditing startup events, and events for components and services, it is important that auditing begin on startup. Within Kubernetes, audit data for all components is generated by the API server. To enable auditing to begin, an audit policy must be defined for the events and the information to be stored with each event. It is also necessary to give a secure location where the audit logs are to be stored. If an audit log path is not specified, all audit data is sent to studio.","descriptions":{"default":"When Kubernetes is started, components and user services are started. For auditing startup events, and events for components and services, it is important that auditing begin on startup. Within Kubernetes, audit data for all components is generated by the API server. To enable auditing to begin, an audit policy must be defined for the events and the information to be stored with each event. It is also necessary to give a secure location where the audit logs are to be stored. If an audit log path is not specified, all audit data is sent to studio.","check":"Change to the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Run the command:\n\ngrep -i audit-policy-file * \n\nIf the audit-policy-file is not set, this is a finding.","fix":"Edit the Kubernetes API Server manifest and set \"--audit-policy-file\" to the audit policy file.\n\nNote: If the API server is running as a Pod, then the manifest will also need to be updated to mount the host system filesystem where the audit policy file resides."},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45676r712557_chk","severity":"medium","gid":"V-242401","rid":"SV-242401r712559_rule","stig_id":"CNTR-K8-000600","gtitle":"SRG-APP-000092-CTR-000165","fix_id":"F-45634r717023_fix","documentable":null,"cci":["CCI-001464"],"nist":["AU-14 (1)"]}},{"id":"SV-242402","code":"control 'SV-242402' do\n  title 'The Kubernetes API Server must have an audit log path set.'\n  desc 'When Kubernetes is started, components and user services are started for auditing startup events, and events for components and services, it is important that auditing begin on startup. Within Kubernetes, audit data for all components is generated by the API server. To enable auditing to begin, an audit policy must be defined for the events and the information to be stored with each event. It is also necessary to give a secure location where the audit logs are to be stored. If an audit log path is not specified, all audit data is sent to studio.'\n  desc 'check', 'Change to the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Run the command:\n\ngrep -i audit-log-path * \n\nIf the audit-log-path is not set, this is a finding.'\n  desc 'fix', 'Edit the Kubernetes API Server manifest and set \"--audit-log-path\" to a secure location for the audit logs to be written.\n\nNote: If the API server is running as a Pod, then the manifest will also need to be updated to mount the host system filesystem where the audit log file is to be written.'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45677r712560_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242402'\n  tag rid: 'SV-242402r712562_rule'\n  tag stig_id: 'CNTR-K8-000610'\n  tag gtitle: 'SRG-APP-000092-CTR-000165'\n  tag fix_id: 'F-45635r717024_fix'\n  tag 'documentable'\n  tag cci: ['CCI-001464']\n  tag nist: ['AU-14 (1)']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242402.rb"},"title":"The Kubernetes API Server must have an audit log path set.","desc":"When Kubernetes is started, components and user services are started for auditing startup events, and events for components and services, it is important that auditing begin on startup. Within Kubernetes, audit data for all components is generated by the API server. To enable auditing to begin, an audit policy must be defined for the events and the information to be stored with each event. It is also necessary to give a secure location where the audit logs are to be stored. If an audit log path is not specified, all audit data is sent to studio.","descriptions":{"default":"When Kubernetes is started, components and user services are started for auditing startup events, and events for components and services, it is important that auditing begin on startup. Within Kubernetes, audit data for all components is generated by the API server. To enable auditing to begin, an audit policy must be defined for the events and the information to be stored with each event. It is also necessary to give a secure location where the audit logs are to be stored. If an audit log path is not specified, all audit data is sent to studio.","check":"Change to the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Run the command:\n\ngrep -i audit-log-path * \n\nIf the audit-log-path is not set, this is a finding.","fix":"Edit the Kubernetes API Server manifest and set \"--audit-log-path\" to a secure location for the audit logs to be written.\n\nNote: If the API server is running as a Pod, then the manifest will also need to be updated to mount the host system filesystem where the audit log file is to be written."},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45677r712560_chk","severity":"medium","gid":"V-242402","rid":"SV-242402r712562_rule","stig_id":"CNTR-K8-000610","gtitle":"SRG-APP-000092-CTR-000165","fix_id":"F-45635r717024_fix","documentable":null,"cci":["CCI-001464"],"nist":["AU-14 (1)"]}},{"id":"SV-242403","code":"control 'SV-242403' do\n  title 'Kubernetes API Server must generate audit records that identify what type of event has occurred, identify the source of the event, contain the event results, identify any users, and identify any containers associated with the event.'\n  desc 'Within Kubernetes, audit data for all components is generated by the API server. This audit data is important when there are issues, to include security incidents that must be investigated. To make the audit data worthwhile for the investigation of events, it is necessary to have the appropriate and required data logged. To fully understand the event, it is important to identify any users associated with the event. \n\nThe API server policy file allows for the following levels of auditing:\n      None - Do not log events that match the rule.\n      Metadata - Log request metadata (requesting user, timestamp, resource, verb, etc.) but not request or response body.\n      Request - Log event metadata and request body but not response body.\n      RequestResponse - Log event metadata, request, and response bodies.\n\n'\n  desc 'check', 'Change to the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Run the command:\n\ngrep -i audit-policy-file \n\nIf the audit-policy-file is not set, this is a finding. \n\nThe file given is the policy file and defines what is audited and what information is included with each event.\n\nThe policy file must look like this:\n\n# Log all requests at the RequestResponse level.\napiVersion: audit.k8s.io/vX (Where X is the latest apiVersion)\nkind: Policy\nrules:\n- level: RequestResponse\n\nIf the audit policy file does not look like above, this is a finding.'\n  desc 'fix', 'Edit the Kubernetes API Server audit policy and set it to look like the following:\n\n# Log all requests at the RequestResponse level.\napiVersion: audit.k8s.io/vX (Where X is the latest apiVersion)\nkind: Policy\nrules:\n- level: RequestResponse'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45678r712563_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242403'\n  tag rid: 'SV-242403r712565_rule'\n  tag stig_id: 'CNTR-K8-000700'\n  tag gtitle: 'SRG-APP-000026-CTR-000070'\n  tag fix_id: 'F-45636r712564_fix'\n  tag satisfies: ['SRG-APP-000026-CTR-000070', 'SRG-APP-000027-CTR-000075', 'SRG-APP-000028-CTR-000080', 'SRG-APP-000101-CTR-000205', 'SRG-APP-000100-CTR-000200', 'SRG-APP-000100-CTR-000195', 'SRG-APP-000099-CTR-000190', 'SRG-APP-000098-CTR-000185', 'SRG-APP-000095-CTR-000170', 'SRG-APP-000096-CTR-000175', 'SRG-APP-000097-CTR-000180', 'SRG-APP-000507-CTR-001295', 'SRG-APP-000504-CTR-001280', 'SRG-APP-000503-CTR-001275', 'SRG-APP-000501-CTR-001265', 'SRG-APP-000500-CTR-001260', 'SRG-APP-000497-CTR-001245', 'SRG-APP-000496-CTR-001240', 'SRG-APP-000493-CTR-001225', 'SRG-APP-000492-CTR-001220', 'SRG-APP-000343-CTR-000780', 'SRG-APP-000381-CTR-000905']\n  tag 'documentable'\n  tag cci: ['CCI-000018', 'CCI-000130', 'CCI-000131', 'CCI-000132', 'CCI-000133', 'CCI-000134', 'CCI-000135', 'CCI-000172', 'CCI-001403', 'CCI-001404', 'CCI-001487', 'CCI-001814', 'CCI-002234']\n  tag nist: ['AC-2 (4)', 'AU-3 a', 'AU-3 b', 'AU-3 c', 'AU-3 d', 'AU-3 e', 'AU-3 (1)', 'AU-12 c', 'AC-2 (4)', 'AC-2 (4)', 'AU-3 f', 'CM-5 (1)', 'AC-6 (9)']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242403.rb"},"title":"Kubernetes API Server must generate audit records that identify what type of event has occurred, identify the source of the event, contain the event results, identify any users, and identify any containers associated with the event.","desc":"Within Kubernetes, audit data for all components is generated by the API server. This audit data is important when there are issues, to include security incidents that must be investigated. To make the audit data worthwhile for the investigation of events, it is necessary to have the appropriate and required data logged. To fully understand the event, it is important to identify any users associated with the event. \n\nThe API server policy file allows for the following levels of auditing:\n      None - Do not log events that match the rule.\n      Metadata - Log request metadata (requesting user, timestamp, resource, verb, etc.) but not request or response body.\n      Request - Log event metadata and request body but not response body.\n      RequestResponse - Log event metadata, request, and response bodies.\n\n","descriptions":{"default":"Within Kubernetes, audit data for all components is generated by the API server. This audit data is important when there are issues, to include security incidents that must be investigated. To make the audit data worthwhile for the investigation of events, it is necessary to have the appropriate and required data logged. To fully understand the event, it is important to identify any users associated with the event. \n\nThe API server policy file allows for the following levels of auditing:\n      None - Do not log events that match the rule.\n      Metadata - Log request metadata (requesting user, timestamp, resource, verb, etc.) but not request or response body.\n      Request - Log event metadata and request body but not response body.\n      RequestResponse - Log event metadata, request, and response bodies.\n\n","check":"Change to the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Run the command:\n\ngrep -i audit-policy-file \n\nIf the audit-policy-file is not set, this is a finding. \n\nThe file given is the policy file and defines what is audited and what information is included with each event.\n\nThe policy file must look like this:\n\n# Log all requests at the RequestResponse level.\napiVersion: audit.k8s.io/vX (Where X is the latest apiVersion)\nkind: Policy\nrules:\n- level: RequestResponse\n\nIf the audit policy file does not look like above, this is a finding.","fix":"Edit the Kubernetes API Server audit policy and set it to look like the following:\n\n# Log all requests at the RequestResponse level.\napiVersion: audit.k8s.io/vX (Where X is the latest apiVersion)\nkind: Policy\nrules:\n- level: RequestResponse"},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45678r712563_chk","severity":"medium","gid":"V-242403","rid":"SV-242403r712565_rule","stig_id":"CNTR-K8-000700","gtitle":"SRG-APP-000026-CTR-000070","fix_id":"F-45636r712564_fix","satisfies":["SRG-APP-000026-CTR-000070","SRG-APP-000027-CTR-000075","SRG-APP-000028-CTR-000080","SRG-APP-000101-CTR-000205","SRG-APP-000100-CTR-000200","SRG-APP-000100-CTR-000195","SRG-APP-000099-CTR-000190","SRG-APP-000098-CTR-000185","SRG-APP-000095-CTR-000170","SRG-APP-000096-CTR-000175","SRG-APP-000097-CTR-000180","SRG-APP-000507-CTR-001295","SRG-APP-000504-CTR-001280","SRG-APP-000503-CTR-001275","SRG-APP-000501-CTR-001265","SRG-APP-000500-CTR-001260","SRG-APP-000497-CTR-001245","SRG-APP-000496-CTR-001240","SRG-APP-000493-CTR-001225","SRG-APP-000492-CTR-001220","SRG-APP-000343-CTR-000780","SRG-APP-000381-CTR-000905"],"documentable":null,"cci":["CCI-000018","CCI-000130","CCI-000131","CCI-000132","CCI-000133","CCI-000134","CCI-000135","CCI-000172","CCI-001403","CCI-001404","CCI-001487","CCI-001814","CCI-002234"],"nist":["AC-2 (4)","AU-3 a","AU-3 b","AU-3 c","AU-3 d","AU-3 e","AU-3 (1)","AU-12 c","AC-2 (4)","AC-2 (4)","AU-3 f","CM-5 (1)","AC-6 (9)"]}},{"id":"SV-242404","code":"control 'SV-242404' do\n  title 'Kubernetes Kubelet must deny hostname override.'\n  desc 'Kubernetes allows for the overriding of hostnames. Allowing this feature to be implemented within the kubelets may break the TLS setup between the kubelet service and the API server. This setting also can make it difficult to associate logs with nodes if security analytics needs to take place. The better practice is to setup nodes with resolvable FQDNs and avoid overriding the hostnames.'\n  desc 'check', 'On the Master and each Worker node, change to the /etc/sysconfig/ directory and run the command:\n\ngrep -i hostname-override kubelet  \n--hostname-override\n\nIf any of the nodes have the setting \"hostname-override\" present, this is a finding.'\n  desc 'fix', 'Edit the Kubernetes Kubelet file in the /etc/sysconfig directory on the Master and Worker nodes and remove the \"--hostname-override\" setting. Restart the service after the change is made by running:\n\nservice kubelet restart'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45679r712566_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242404'\n  tag rid: 'SV-242404r712568_rule'\n  tag stig_id: 'CNTR-K8-000850'\n  tag gtitle: 'SRG-APP-000133-CTR-000290'\n  tag fix_id: 'F-45637r712567_fix'\n  tag 'documentable'\n  tag cci: ['CCI-001499']\n  tag nist: ['CM-5 (6)']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242404.rb"},"title":"Kubernetes Kubelet must deny hostname override.","desc":"Kubernetes allows for the overriding of hostnames. Allowing this feature to be implemented within the kubelets may break the TLS setup between the kubelet service and the API server. This setting also can make it difficult to associate logs with nodes if security analytics needs to take place. The better practice is to setup nodes with resolvable FQDNs and avoid overriding the hostnames.","descriptions":{"default":"Kubernetes allows for the overriding of hostnames. Allowing this feature to be implemented within the kubelets may break the TLS setup between the kubelet service and the API server. This setting also can make it difficult to associate logs with nodes if security analytics needs to take place. The better practice is to setup nodes with resolvable FQDNs and avoid overriding the hostnames.","check":"On the Master and each Worker node, change to the /etc/sysconfig/ directory and run the command:\n\ngrep -i hostname-override kubelet  \n--hostname-override\n\nIf any of the nodes have the setting \"hostname-override\" present, this is a finding.","fix":"Edit the Kubernetes Kubelet file in the /etc/sysconfig directory on the Master and Worker nodes and remove the \"--hostname-override\" setting. Restart the service after the change is made by running:\n\nservice kubelet restart"},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45679r712566_chk","severity":"medium","gid":"V-242404","rid":"SV-242404r712568_rule","stig_id":"CNTR-K8-000850","gtitle":"SRG-APP-000133-CTR-000290","fix_id":"F-45637r712567_fix","documentable":null,"cci":["CCI-001499"],"nist":["CM-5 (6)"]}},{"id":"SV-242405","code":"control 'SV-242405' do\n  title 'The Kubernetes manifests must be owned by root.'\n  desc 'The manifest files contain the runtime configuration of the API server, proxy, scheduler, controller, and etcd. If an attacker can gain access to these files, changes can be made to open vulnerabilities and bypass user authorizations inherit within Kubernetes with RBAC implemented.'\n  desc 'check', 'On the Master node, change to the /etc/kubernetes/manifest directory. Run the command:\n\nls -l *\n\nEach manifest file must be owned by root:root.\n\nIf any manifest file is not owned by root:root, this is a finding.'\n  desc 'fix', 'On the Master node, change to the /etc/kubernetes/manifest directory. Run the command:\n\nchown root:root *\n\nTo verify the change took place, run the command:\n\nls -l *\n\nAll the manifest files should be owned by root:root.'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45680r712569_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242405'\n  tag rid: 'SV-242405r712571_rule'\n  tag stig_id: 'CNTR-K8-000860'\n  tag gtitle: 'SRG-APP-000133-CTR-000295'\n  tag fix_id: 'F-45638r712570_fix'\n  tag 'documentable'\n  tag cci: ['CCI-001499']\n  tag nist: ['CM-5 (6)']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242405.rb"},"title":"The Kubernetes manifests must be owned by root.","desc":"The manifest files contain the runtime configuration of the API server, proxy, scheduler, controller, and etcd. If an attacker can gain access to these files, changes can be made to open vulnerabilities and bypass user authorizations inherit within Kubernetes with RBAC implemented.","descriptions":{"default":"The manifest files contain the runtime configuration of the API server, proxy, scheduler, controller, and etcd. If an attacker can gain access to these files, changes can be made to open vulnerabilities and bypass user authorizations inherit within Kubernetes with RBAC implemented.","check":"On the Master node, change to the /etc/kubernetes/manifest directory. Run the command:\n\nls -l *\n\nEach manifest file must be owned by root:root.\n\nIf any manifest file is not owned by root:root, this is a finding.","fix":"On the Master node, change to the /etc/kubernetes/manifest directory. Run the command:\n\nchown root:root *\n\nTo verify the change took place, run the command:\n\nls -l *\n\nAll the manifest files should be owned by root:root."},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45680r712569_chk","severity":"medium","gid":"V-242405","rid":"SV-242405r712571_rule","stig_id":"CNTR-K8-000860","gtitle":"SRG-APP-000133-CTR-000295","fix_id":"F-45638r712570_fix","documentable":null,"cci":["CCI-001499"],"nist":["CM-5 (6)"]}},{"id":"SV-242406","code":"control 'SV-242406' do\n  title 'The Kubernetes kubelet configuration file must be owned by root.'\n  desc 'The kubelet configuration file contains the runtime configuration of the kubelet service. If an attacker can gain access to this file, changes can be made to open vulnerabilities and bypass user authorizations inherent within Kubernetes with RBAC implemented.'\n  desc 'check', 'On the Master and worker nodes, change to the /etc/sysconfig directory. Run the command:\n\nls -l kubelet\n\nEach kubelet configuration file must be owned by root:root.\n\nIf any manifest file is not owned by root:root, this is a finding.'\n  desc 'fix', 'On the Master and Worker nodes, change to the /etc/sysconfig directory. Run the command:\n\nchown root:root kubelet\n\nTo verify the change took place, run the command:\n\nls -l kubelet\n\nThe kubelet file should now be owned by root:root.'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45681r712572_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242406'\n  tag rid: 'SV-242406r712574_rule'\n  tag stig_id: 'CNTR-K8-000880'\n  tag gtitle: 'SRG-APP-000133-CTR-000300'\n  tag fix_id: 'F-45639r712573_fix'\n  tag 'documentable'\n  tag cci: ['CCI-001499']\n  tag nist: ['CM-5 (6)']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242406.rb"},"title":"The Kubernetes kubelet configuration file must be owned by root.","desc":"The kubelet configuration file contains the runtime configuration of the kubelet service. If an attacker can gain access to this file, changes can be made to open vulnerabilities and bypass user authorizations inherent within Kubernetes with RBAC implemented.","descriptions":{"default":"The kubelet configuration file contains the runtime configuration of the kubelet service. If an attacker can gain access to this file, changes can be made to open vulnerabilities and bypass user authorizations inherent within Kubernetes with RBAC implemented.","check":"On the Master and worker nodes, change to the /etc/sysconfig directory. Run the command:\n\nls -l kubelet\n\nEach kubelet configuration file must be owned by root:root.\n\nIf any manifest file is not owned by root:root, this is a finding.","fix":"On the Master and Worker nodes, change to the /etc/sysconfig directory. Run the command:\n\nchown root:root kubelet\n\nTo verify the change took place, run the command:\n\nls -l kubelet\n\nThe kubelet file should now be owned by root:root."},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45681r712572_chk","severity":"medium","gid":"V-242406","rid":"SV-242406r712574_rule","stig_id":"CNTR-K8-000880","gtitle":"SRG-APP-000133-CTR-000300","fix_id":"F-45639r712573_fix","documentable":null,"cci":["CCI-001499"],"nist":["CM-5 (6)"]}},{"id":"SV-242407","code":"control 'SV-242407' do\n  title 'The Kubernetes kubelet configuration file must be owned by root.'\n  desc 'The kubelet configuration file contains the runtime configuration of the kubelet service. If an attacker can gain access to this file, changes can be made to open vulnerabilities and bypass user authorizations inherit within Kubernetes with RBAC implemented.'\n  desc 'check', 'On the Master and worker nodes, change to the /etc/kubernetes/manifest directory. Run the command:\n\nls -l kubelet\n\nEach kubelet configuration file must have permissions of \"644\" or more restrictive.\n\nIf any kubelet configuration file is less restrictive than \"644\", this is a finding.'\n  desc 'fix', 'On the Master node, change to the /etc/kubernetes/manifest directory. Run the command:\n\nchmod 644 kubelet\n\nTo verify the change took place, run the command:\n\nls -l kubelet\n\nThe kubelet file should now have the permissions of \"644\".'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45682r712575_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242407'\n  tag rid: 'SV-242407r712577_rule'\n  tag stig_id: 'CNTR-K8-000890'\n  tag gtitle: 'SRG-APP-000133-CTR-000305'\n  tag fix_id: 'F-45640r712576_fix'\n  tag 'documentable'\n  tag cci: ['CCI-001499']\n  tag nist: ['CM-5 (6)']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242407.rb"},"title":"The Kubernetes kubelet configuration file must be owned by root.","desc":"The kubelet configuration file contains the runtime configuration of the kubelet service. If an attacker can gain access to this file, changes can be made to open vulnerabilities and bypass user authorizations inherit within Kubernetes with RBAC implemented.","descriptions":{"default":"The kubelet configuration file contains the runtime configuration of the kubelet service. If an attacker can gain access to this file, changes can be made to open vulnerabilities and bypass user authorizations inherit within Kubernetes with RBAC implemented.","check":"On the Master and worker nodes, change to the /etc/kubernetes/manifest directory. Run the command:\n\nls -l kubelet\n\nEach kubelet configuration file must have permissions of \"644\" or more restrictive.\n\nIf any kubelet configuration file is less restrictive than \"644\", this is a finding.","fix":"On the Master node, change to the /etc/kubernetes/manifest directory. Run the command:\n\nchmod 644 kubelet\n\nTo verify the change took place, run the command:\n\nls -l kubelet\n\nThe kubelet file should now have the permissions of \"644\"."},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45682r712575_chk","severity":"medium","gid":"V-242407","rid":"SV-242407r712577_rule","stig_id":"CNTR-K8-000890","gtitle":"SRG-APP-000133-CTR-000305","fix_id":"F-45640r712576_fix","documentable":null,"cci":["CCI-001499"],"nist":["CM-5 (6)"]}},{"id":"SV-242408","code":"control 'SV-242408' do\n  title 'The Kubernetes manifests must have least privileges.'\n  desc 'The manifest files contain the runtime configuration of the API server, scheduler, controller, and etcd. If an attacker can gain access to these files, changes can be made to open vulnerabilities and bypass user authorizations inherent within Kubernetes with RBAC implemented.\n\n'\n  desc 'check', 'On the Master node, change to the /etc/kubernetes/manifest directory. Run the command:\n\nls -l *\n\nEach manifest file must have permissions \"644\" or more restrictive.\n\nIf any manifest file is less restrictive than \"644\", this is a finding.'\n  desc 'fix', 'On the Master node, change to the /etc/kubernetes/manifest directory. Run the command:\n\nchmod 644 *\n\nTo verify the change took place, run the command:\n\nls -l *\n\nAll the manifest files should now have privileges of \"644\".'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45683r712578_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242408'\n  tag rid: 'SV-242408r712580_rule'\n  tag stig_id: 'CNTR-K8-000900'\n  tag gtitle: 'SRG-APP-000133-CTR-000310'\n  tag fix_id: 'F-45641r712579_fix'\n  tag satisfies: ['SRG-APP-000133-CTR-000310', 'SRG-APP-000133-CTR-000295']\n  tag 'documentable'\n  tag cci: ['CCI-001499']\n  tag nist: ['CM-5 (6)']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242408.rb"},"title":"The Kubernetes manifests must have least privileges.","desc":"The manifest files contain the runtime configuration of the API server, scheduler, controller, and etcd. If an attacker can gain access to these files, changes can be made to open vulnerabilities and bypass user authorizations inherent within Kubernetes with RBAC implemented.\n\n","descriptions":{"default":"The manifest files contain the runtime configuration of the API server, scheduler, controller, and etcd. If an attacker can gain access to these files, changes can be made to open vulnerabilities and bypass user authorizations inherent within Kubernetes with RBAC implemented.\n\n","check":"On the Master node, change to the /etc/kubernetes/manifest directory. Run the command:\n\nls -l *\n\nEach manifest file must have permissions \"644\" or more restrictive.\n\nIf any manifest file is less restrictive than \"644\", this is a finding.","fix":"On the Master node, change to the /etc/kubernetes/manifest directory. Run the command:\n\nchmod 644 *\n\nTo verify the change took place, run the command:\n\nls -l *\n\nAll the manifest files should now have privileges of \"644\"."},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45683r712578_chk","severity":"medium","gid":"V-242408","rid":"SV-242408r712580_rule","stig_id":"CNTR-K8-000900","gtitle":"SRG-APP-000133-CTR-000310","fix_id":"F-45641r712579_fix","satisfies":["SRG-APP-000133-CTR-000310","SRG-APP-000133-CTR-000295"],"documentable":null,"cci":["CCI-001499"],"nist":["CM-5 (6)"]}},{"id":"SV-242409","code":"control 'SV-242409' do\n  title 'Kubernetes Controller Manager must disable profiling.'\n  desc 'Kubernetes profiling provides the ability to analyze and troubleshoot Controller Manager events over a web interface on a host port. Enabling this service can expose details about the Kubernetes architecture. This service must not be enabled unless deemed necessary.'\n  desc 'check', 'Change to the /etc/kubernetes/manifests/ directory on the Kubernetes Master Node. Run the command:\n\ngrep -i profiling * \n\nIf the setting \"profiling\" is not configured in the Kubernetes Controller Manager manifest file or it is set to \"True\", this is a finding.'\n  desc 'fix', 'Edit the Kubernetes Controller Manager manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Set the argument \"--profiling value\" to \"false\".'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45684r712581_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242409'\n  tag rid: 'SV-242409r712583_rule'\n  tag stig_id: 'CNTR-K8-000910'\n  tag gtitle: 'SRG-APP-000141-CTR-000315'\n  tag fix_id: 'F-45642r712582_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000381']\n  tag nist: ['CM-7 a']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242409.rb"},"title":"Kubernetes Controller Manager must disable profiling.","desc":"Kubernetes profiling provides the ability to analyze and troubleshoot Controller Manager events over a web interface on a host port. Enabling this service can expose details about the Kubernetes architecture. This service must not be enabled unless deemed necessary.","descriptions":{"default":"Kubernetes profiling provides the ability to analyze and troubleshoot Controller Manager events over a web interface on a host port. Enabling this service can expose details about the Kubernetes architecture. This service must not be enabled unless deemed necessary.","check":"Change to the /etc/kubernetes/manifests/ directory on the Kubernetes Master Node. Run the command:\n\ngrep -i profiling * \n\nIf the setting \"profiling\" is not configured in the Kubernetes Controller Manager manifest file or it is set to \"True\", this is a finding.","fix":"Edit the Kubernetes Controller Manager manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Set the argument \"--profiling value\" to \"false\"."},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45684r712581_chk","severity":"medium","gid":"V-242409","rid":"SV-242409r712583_rule","stig_id":"CNTR-K8-000910","gtitle":"SRG-APP-000141-CTR-000315","fix_id":"F-45642r712582_fix","documentable":null,"cci":["CCI-000381"],"nist":["CM-7 a"]}},{"id":"SV-242410","code":"control 'SV-242410' do\n  title 'The Kubernetes API Server must enforce ports, protocols, and services (PPS) that adhere to the Ports, Protocols, and Services Management Category Assurance List (PPSM CAL).'\n  desc 'Kubernetes API Server PPSs must be controlled and conform to the PPSM CAL. Those PPS that fall outside the PPSM CAL must be blocked. Instructions on the PPSM can be found in DoD Instruction 8551.01 Policy.'\n  desc 'check', 'Change to the /etc/kubernetes/manifests/ directory on the Kubernetes Master Node. Run the command:\ngrep kube-apiserver.manifest -I-insecure-port\n              grep kube-apiserver.manifest -I -secure-port\ngrep kube-apiserver.manifest -I -etcd-servers *\n-edit manifest file:\nVIM <Manifest Name>\nReview  livenessProbe:\nHttpGet:\nPort:\nReview ports:\n- containerPort:\n       hostPort:\n- containerPort:\n       hostPort:\nRun Command:\nkubectl describe services –all-namespace\nSearch labels for any apiserver names spaces.\nPort:\n\nAny manifest and namespace PPS or services configuration not in compliance with PPSM CAL is a finding.\n\nReview the information systems documentation and interview the team, gain an understanding of the API Server architecture, and determine applicable PPS. If there are any ports, protocols, and services in the system documentation not in compliance with the CAL PPSM, this is a finding. Any PPS not set in the system documentation is a finding.\n\nReview findings against the most recent PPSM CAL:\nhttps://cyber.mil/ppsm/cal/\n\nVerify API Server network boundary with the PPS associated with the CAL Assurance Categories. Any PPS not in compliance with the CAL Assurance Category requirements is a finding.'\n  desc 'fix', 'Amend any system documentation requiring revision. Update Kubernetes API Server manifest and namespace PPS configuration to comply with PPSM CAL.'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45685r712584_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242410'\n  tag rid: 'SV-242410r712586_rule'\n  tag stig_id: 'CNTR-K8-000920'\n  tag gtitle: 'SRG-APP-000142-CTR-000325'\n  tag fix_id: 'F-45643r712585_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000382']\n  tag nist: ['CM-7 b']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242410.rb"},"title":"The Kubernetes API Server must enforce ports, protocols, and services (PPS) that adhere to the Ports, Protocols, and Services Management Category Assurance List (PPSM CAL).","desc":"Kubernetes API Server PPSs must be controlled and conform to the PPSM CAL. Those PPS that fall outside the PPSM CAL must be blocked. Instructions on the PPSM can be found in DoD Instruction 8551.01 Policy.","descriptions":{"default":"Kubernetes API Server PPSs must be controlled and conform to the PPSM CAL. Those PPS that fall outside the PPSM CAL must be blocked. Instructions on the PPSM can be found in DoD Instruction 8551.01 Policy.","check":"Change to the /etc/kubernetes/manifests/ directory on the Kubernetes Master Node. Run the command:\ngrep kube-apiserver.manifest -I-insecure-port\n              grep kube-apiserver.manifest -I -secure-port\ngrep kube-apiserver.manifest -I -etcd-servers *\n-edit manifest file:\nVIM <Manifest Name>\nReview  livenessProbe:\nHttpGet:\nPort:\nReview ports:\n- containerPort:\n       hostPort:\n- containerPort:\n       hostPort:\nRun Command:\nkubectl describe services –all-namespace\nSearch labels for any apiserver names spaces.\nPort:\n\nAny manifest and namespace PPS or services configuration not in compliance with PPSM CAL is a finding.\n\nReview the information systems documentation and interview the team, gain an understanding of the API Server architecture, and determine applicable PPS. If there are any ports, protocols, and services in the system documentation not in compliance with the CAL PPSM, this is a finding. Any PPS not set in the system documentation is a finding.\n\nReview findings against the most recent PPSM CAL:\nhttps://cyber.mil/ppsm/cal/\n\nVerify API Server network boundary with the PPS associated with the CAL Assurance Categories. Any PPS not in compliance with the CAL Assurance Category requirements is a finding.","fix":"Amend any system documentation requiring revision. Update Kubernetes API Server manifest and namespace PPS configuration to comply with PPSM CAL."},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45685r712584_chk","severity":"medium","gid":"V-242410","rid":"SV-242410r712586_rule","stig_id":"CNTR-K8-000920","gtitle":"SRG-APP-000142-CTR-000325","fix_id":"F-45643r712585_fix","documentable":null,"cci":["CCI-000382"],"nist":["CM-7 b"]}},{"id":"SV-242411","code":"control 'SV-242411' do\n  title 'The Kubernetes Scheduler must enforce ports, protocols, and services (PPS) that adhere to the Ports, Protocols, and Services Management Category Assurance List (PPSM CAL).'\n  desc 'Kubernetes Scheduler PPS must be controlled and conform to the PPSM CAL. Those ports, protocols, and services that fall outside the PPSM CAL must be blocked. Instructions on the PPSM can be found in DoD Instruction 8551.01 Policy.'\n  desc 'check', 'Change to the /etc/kubernetes/manifests/ directory on the Kubernetes Master Node. Run the command:\ngrep kube-scheduler.manifest -I -insecure-port\n                grep kube-scheduler.manifest -I -secure-port\n-edit manifest file:\nVIM <Manifest Name>\nReview  livenessProbe:\nHttpGet:\nPort:\nReview ports:\n- containerPort:\n       hostPort:\n- containerPort:\n       hostPort:\nRun Command:\nkubectl describe services –all-namespace\nSearch labels for any scheduler names spaces.\nPort:\n\nAny manifest and namespace PPS configuration not in compliance with PPSM CAL is a finding.\n\nReview the information systems documentation and interview the team, gain an understanding of the Scheduler architecture, and determine applicable PPS. Any PPS in the system documentation not in compliance with the CAL PPSM is a finding. Any PPSs not set in the system documentation is a finding.\n\nReview findings against the most recent PPSM CAL:\nhttps://cyber.mil/ppsm/cal/\n\nVerify Scheduler network boundary with the PPS associated with the CAL Assurance Categories. Any PPS not in compliance with the CAL Assurance Category requirements is a finding.'\n  desc 'fix', 'Amend any system documentation requiring revision. Update Kubernetes Scheduler manifest and namespace PPS configuration to comply with the PPSM CAL.'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45686r712587_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242411'\n  tag rid: 'SV-242411r712589_rule'\n  tag stig_id: 'CNTR-K8-000930'\n  tag gtitle: 'SRG-APP-000142-CTR-000325'\n  tag fix_id: 'F-45644r712588_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000382']\n  tag nist: ['CM-7 b']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242411.rb"},"title":"The Kubernetes Scheduler must enforce ports, protocols, and services (PPS) that adhere to the Ports, Protocols, and Services Management Category Assurance List (PPSM CAL).","desc":"Kubernetes Scheduler PPS must be controlled and conform to the PPSM CAL. Those ports, protocols, and services that fall outside the PPSM CAL must be blocked. Instructions on the PPSM can be found in DoD Instruction 8551.01 Policy.","descriptions":{"default":"Kubernetes Scheduler PPS must be controlled and conform to the PPSM CAL. Those ports, protocols, and services that fall outside the PPSM CAL must be blocked. Instructions on the PPSM can be found in DoD Instruction 8551.01 Policy.","check":"Change to the /etc/kubernetes/manifests/ directory on the Kubernetes Master Node. Run the command:\ngrep kube-scheduler.manifest -I -insecure-port\n                grep kube-scheduler.manifest -I -secure-port\n-edit manifest file:\nVIM <Manifest Name>\nReview  livenessProbe:\nHttpGet:\nPort:\nReview ports:\n- containerPort:\n       hostPort:\n- containerPort:\n       hostPort:\nRun Command:\nkubectl describe services –all-namespace\nSearch labels for any scheduler names spaces.\nPort:\n\nAny manifest and namespace PPS configuration not in compliance with PPSM CAL is a finding.\n\nReview the information systems documentation and interview the team, gain an understanding of the Scheduler architecture, and determine applicable PPS. Any PPS in the system documentation not in compliance with the CAL PPSM is a finding. Any PPSs not set in the system documentation is a finding.\n\nReview findings against the most recent PPSM CAL:\nhttps://cyber.mil/ppsm/cal/\n\nVerify Scheduler network boundary with the PPS associated with the CAL Assurance Categories. Any PPS not in compliance with the CAL Assurance Category requirements is a finding.","fix":"Amend any system documentation requiring revision. Update Kubernetes Scheduler manifest and namespace PPS configuration to comply with the PPSM CAL."},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45686r712587_chk","severity":"medium","gid":"V-242411","rid":"SV-242411r712589_rule","stig_id":"CNTR-K8-000930","gtitle":"SRG-APP-000142-CTR-000325","fix_id":"F-45644r712588_fix","documentable":null,"cci":["CCI-000382"],"nist":["CM-7 b"]}},{"id":"SV-242412","code":"control 'SV-242412' do\n  title 'The Kubernetes Controllers must enforce ports, protocols, and services (PPS) that adhere to the Ports, Protocols, and Services Management Category Assurance List (PPSM CAL).'\n  desc 'Kubernetes Controller ports, protocols, and services must be controlled and conform to the PPSM CAL. Those PPS that fall outside the PPSM CAL must be blocked. Instructions on the PPSM can be found in DoD Instruction 8551.01 Policy.'\n  desc 'check', 'Change to the /etc/kubernetes/manifests/ directory on the Kubernetes Master Node. Run the command:\ngrep kube-scheduler.manifest -I -insecure-port\n              grep kube-scheduler.manifest -I -secure-port\n-edit manifest file:\nVIM <Manifest Name:\nReview  livenessProbe:\nHttpGet:\nPort:\nReview ports:\n- containerPort:\n       hostPort:\n- containerPort:\n       hostPort:\nRun Command:\nkubectl describe services –all-namespace\nSearch labels for any controller names spaces.\nPort:\n\nAny manifest and namespace PPS or services configuration not in compliance with PPSM CAL is a finding.\n\nReview the information systems documentation and interview the team, gain an understanding of the Controller architecture, and determine applicable PPS. Any PPS in the system documentation not in compliance with the CAL PPSM is a finding. Any PPS not set in the system documentation is a finding.\n\nReview findings against the most recent PPSM CAL:\nhttps://cyber.mil/ppsm/cal/\n\nVerify Controller network boundary with the PPS associated with the Controller for Assurance Categories. Any PPS not in compliance with the CAL Assurance Category requirements is a finding.'\n  desc 'fix', 'Amend any system documentation requiring revision. Update Kubernetes Controller manifest and namespace PPS configuration to comply with PPSM CAL.'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45687r712590_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242412'\n  tag rid: 'SV-242412r712592_rule'\n  tag stig_id: 'CNTR-K8-000940'\n  tag gtitle: 'SRG-APP-000142-CTR-000330'\n  tag fix_id: 'F-45645r712591_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000382']\n  tag nist: ['CM-7 b']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242412.rb"},"title":"The Kubernetes Controllers must enforce ports, protocols, and services (PPS) that adhere to the Ports, Protocols, and Services Management Category Assurance List (PPSM CAL).","desc":"Kubernetes Controller ports, protocols, and services must be controlled and conform to the PPSM CAL. Those PPS that fall outside the PPSM CAL must be blocked. Instructions on the PPSM can be found in DoD Instruction 8551.01 Policy.","descriptions":{"default":"Kubernetes Controller ports, protocols, and services must be controlled and conform to the PPSM CAL. Those PPS that fall outside the PPSM CAL must be blocked. Instructions on the PPSM can be found in DoD Instruction 8551.01 Policy.","check":"Change to the /etc/kubernetes/manifests/ directory on the Kubernetes Master Node. Run the command:\ngrep kube-scheduler.manifest -I -insecure-port\n              grep kube-scheduler.manifest -I -secure-port\n-edit manifest file:\nVIM <Manifest Name:\nReview  livenessProbe:\nHttpGet:\nPort:\nReview ports:\n- containerPort:\n       hostPort:\n- containerPort:\n       hostPort:\nRun Command:\nkubectl describe services –all-namespace\nSearch labels for any controller names spaces.\nPort:\n\nAny manifest and namespace PPS or services configuration not in compliance with PPSM CAL is a finding.\n\nReview the information systems documentation and interview the team, gain an understanding of the Controller architecture, and determine applicable PPS. Any PPS in the system documentation not in compliance with the CAL PPSM is a finding. Any PPS not set in the system documentation is a finding.\n\nReview findings against the most recent PPSM CAL:\nhttps://cyber.mil/ppsm/cal/\n\nVerify Controller network boundary with the PPS associated with the Controller for Assurance Categories. Any PPS not in compliance with the CAL Assurance Category requirements is a finding.","fix":"Amend any system documentation requiring revision. Update Kubernetes Controller manifest and namespace PPS configuration to comply with PPSM CAL."},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45687r712590_chk","severity":"medium","gid":"V-242412","rid":"SV-242412r712592_rule","stig_id":"CNTR-K8-000940","gtitle":"SRG-APP-000142-CTR-000330","fix_id":"F-45645r712591_fix","documentable":null,"cci":["CCI-000382"],"nist":["CM-7 b"]}},{"id":"SV-242413","code":"control 'SV-242413' do\n  title 'The Kubernetes etcd must enforce ports, protocols, and services (PPS) that adhere to the Ports, Protocols, and Services Management Category Assurance List (PPSM CAL).'\n  desc 'Kubernetes etcd PPS must be controlled and conform to the PPSM CAL. Those PPS that fall outside the PPSM CAL must be blocked. Instructions on the PPSM can be found in DoD Instruction 8551.01 Policy.'\n  desc 'check', 'Change to the /etc/kubernetes/manifests/ directory on the Kubernetes Master Node. Run the command:\ngrep kube-apiserver.manifest -I -etcd-servers *\n-edit etcd-main.manifest file:\nVIM <Manifest Name:\nReview  livenessProbe:\nHttpGet:\nPort:\nReview ports:\n- containerPort:\n       hostPort:\n- containerPort:\n       hostPort:\nRun Command:\nkubectl describe services –all-namespace\nSearch labels for any apiserver names spaces.\nPort:\n\nAny manifest and namespace PPS configuration not in compliance with PPSM CAL is a finding.\n\nReview the information systems documentation and interview the team, gain an understanding of the etcd architecture, and determine applicable PPS. Any PPS in the system documentation not in compliance with the CAL PPSM is a finding. Any PPS not set in the system documentation is a finding.\n\nReview findings against the most recent PPSM CAL:\nhttps://cyber.mil/ppsm/cal/\n\nVerify etcd network boundary with the PPS associated with the CAL Assurance Categories. Any PPS not in compliance with the CAL Assurance Category requirements is a finding.'\n  desc 'fix', 'Amend any system documentation requiring revision. Update Kubernetes etcd manifest and namespace PPS configuration to comply with PPSM CAL.'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45688r712593_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242413'\n  tag rid: 'SV-242413r712595_rule'\n  tag stig_id: 'CNTR-K8-000950'\n  tag gtitle: 'SRG-APP-000142-CTR-000325'\n  tag fix_id: 'F-45646r712594_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000382']\n  tag nist: ['CM-7 b']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242413.rb"},"title":"The Kubernetes etcd must enforce ports, protocols, and services (PPS) that adhere to the Ports, Protocols, and Services Management Category Assurance List (PPSM CAL).","desc":"Kubernetes etcd PPS must be controlled and conform to the PPSM CAL. Those PPS that fall outside the PPSM CAL must be blocked. Instructions on the PPSM can be found in DoD Instruction 8551.01 Policy.","descriptions":{"default":"Kubernetes etcd PPS must be controlled and conform to the PPSM CAL. Those PPS that fall outside the PPSM CAL must be blocked. Instructions on the PPSM can be found in DoD Instruction 8551.01 Policy.","check":"Change to the /etc/kubernetes/manifests/ directory on the Kubernetes Master Node. Run the command:\ngrep kube-apiserver.manifest -I -etcd-servers *\n-edit etcd-main.manifest file:\nVIM <Manifest Name:\nReview  livenessProbe:\nHttpGet:\nPort:\nReview ports:\n- containerPort:\n       hostPort:\n- containerPort:\n       hostPort:\nRun Command:\nkubectl describe services –all-namespace\nSearch labels for any apiserver names spaces.\nPort:\n\nAny manifest and namespace PPS configuration not in compliance with PPSM CAL is a finding.\n\nReview the information systems documentation and interview the team, gain an understanding of the etcd architecture, and determine applicable PPS. Any PPS in the system documentation not in compliance with the CAL PPSM is a finding. Any PPS not set in the system documentation is a finding.\n\nReview findings against the most recent PPSM CAL:\nhttps://cyber.mil/ppsm/cal/\n\nVerify etcd network boundary with the PPS associated with the CAL Assurance Categories. Any PPS not in compliance with the CAL Assurance Category requirements is a finding.","fix":"Amend any system documentation requiring revision. Update Kubernetes etcd manifest and namespace PPS configuration to comply with PPSM CAL."},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45688r712593_chk","severity":"medium","gid":"V-242413","rid":"SV-242413r712595_rule","stig_id":"CNTR-K8-000950","gtitle":"SRG-APP-000142-CTR-000325","fix_id":"F-45646r712594_fix","documentable":null,"cci":["CCI-000382"],"nist":["CM-7 b"]}},{"id":"SV-242414","code":"control 'SV-242414' do\n  title 'The Kubernetes cluster must use non-privileged host ports for user pods.'\n  desc 'Privileged ports are those ports below 1024 and that require system privileges for their use. If containers can use these ports, the container must be run as a privileged user. Kubernetes must stop containers that try to map to these ports directly. Allowing non-privileged ports to be mapped to the container-privileged port is the allowable method when a certain port is needed. An example is mapping port 8080 externally to port 80 in the container.'\n  desc 'check', 'On the Master node, run the command:\n\nkubectl get pods --all-namespaces\n\nThe list returned is all pods running within the Kubernetes cluster. For those pods running within the user namespaces (System namespaces are kube-system, kube-node-lease and kube-public), run the command:\n\nkubectl get pod podname -o yaml | grep -i port\n\nNote: In the above command, \"podname\" is the name of the pod. For the command to work correctly, the current context must be changed to the namespace for the pod. The command to do this is:\n\nkubectl config set-context --current --namespace=namespace-name\n(Note: \"namespace-name\" is the name of the namespace.)\n\nReview the ports that are returned for the pod.\n\nIf any host-privileged ports are returned for any of the pods, this is a finding.'\n  desc 'fix', 'For any of the pods that are using host-privileged ports, reconfigure the pod to use a service to map a host non-privileged port to the pod port or reconfigure the image to use non-privileged ports.'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45689r717031_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242414'\n  tag rid: 'SV-242414r717030_rule'\n  tag stig_id: 'CNTR-K8-000960'\n  tag gtitle: 'SRG-APP-000142-CTR-000330'\n  tag fix_id: 'F-45647r717032_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000382']\n  tag nist: ['CM-7 b']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242414.rb"},"title":"The Kubernetes cluster must use non-privileged host ports for user pods.","desc":"Privileged ports are those ports below 1024 and that require system privileges for their use. If containers can use these ports, the container must be run as a privileged user. Kubernetes must stop containers that try to map to these ports directly. Allowing non-privileged ports to be mapped to the container-privileged port is the allowable method when a certain port is needed. An example is mapping port 8080 externally to port 80 in the container.","descriptions":{"default":"Privileged ports are those ports below 1024 and that require system privileges for their use. If containers can use these ports, the container must be run as a privileged user. Kubernetes must stop containers that try to map to these ports directly. Allowing non-privileged ports to be mapped to the container-privileged port is the allowable method when a certain port is needed. An example is mapping port 8080 externally to port 80 in the container.","check":"On the Master node, run the command:\n\nkubectl get pods --all-namespaces\n\nThe list returned is all pods running within the Kubernetes cluster. For those pods running within the user namespaces (System namespaces are kube-system, kube-node-lease and kube-public), run the command:\n\nkubectl get pod podname -o yaml | grep -i port\n\nNote: In the above command, \"podname\" is the name of the pod. For the command to work correctly, the current context must be changed to the namespace for the pod. The command to do this is:\n\nkubectl config set-context --current --namespace=namespace-name\n(Note: \"namespace-name\" is the name of the namespace.)\n\nReview the ports that are returned for the pod.\n\nIf any host-privileged ports are returned for any of the pods, this is a finding.","fix":"For any of the pods that are using host-privileged ports, reconfigure the pod to use a service to map a host non-privileged port to the pod port or reconfigure the image to use non-privileged ports."},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45689r717031_chk","severity":"medium","gid":"V-242414","rid":"SV-242414r717030_rule","stig_id":"CNTR-K8-000960","gtitle":"SRG-APP-000142-CTR-000330","fix_id":"F-45647r717032_fix","documentable":null,"cci":["CCI-000382"],"nist":["CM-7 b"]}},{"id":"SV-242415","code":"control 'SV-242415' do\n  title 'Secrets in Kubernetes must not be stored as environment variables.'\n  desc 'Secrets, such as passwords, keys, tokens, and certificates should not be stored as environment variables. These environment variables are accessible inside Kubernetes by the \"Get Pod\" API call, and by any system, such as CI/CD pipeline, which has access to the definition file of the container. Secrets must be mounted from files or stored within password vaults.'\n  desc 'check', %q(On the Kubernetes Master node, run the following command:\n\nkubectl get all -o jsonpath='{range .items[?(@..secretKeyRef)]} {.kind} {.metadata.name} {\"\\n\"}{end}' -A\n\nIf any of the values returned reference environment variables, this is a finding.)\n  desc 'fix', 'Any secrets stored as environment variables must be moved to the secret files with the proper protections and enforcements or placed within a password vault.'\n  impact 0.7\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45690r712599_chk'\n  tag severity: 'high'\n  tag gid: 'V-242415'\n  tag rid: 'SV-242415r712601_rule'\n  tag stig_id: 'CNTR-K8-001160'\n  tag gtitle: 'SRG-APP-000171-CTR-000435'\n  tag fix_id: 'F-45648r712600_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000196']\n  tag nist: ['IA-5 (1) (c)']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242415.rb"},"title":"Secrets in Kubernetes must not be stored as environment variables.","desc":"Secrets, such as passwords, keys, tokens, and certificates should not be stored as environment variables. These environment variables are accessible inside Kubernetes by the \"Get Pod\" API call, and by any system, such as CI/CD pipeline, which has access to the definition file of the container. Secrets must be mounted from files or stored within password vaults.","descriptions":{"default":"Secrets, such as passwords, keys, tokens, and certificates should not be stored as environment variables. These environment variables are accessible inside Kubernetes by the \"Get Pod\" API call, and by any system, such as CI/CD pipeline, which has access to the definition file of the container. Secrets must be mounted from files or stored within password vaults.","check":"On the Kubernetes Master node, run the following command:\n\nkubectl get all -o jsonpath='{range .items[?(@..secretKeyRef)]} {.kind} {.metadata.name} {\"\\n\"}{end}' -A\n\nIf any of the values returned reference environment variables, this is a finding.","fix":"Any secrets stored as environment variables must be moved to the secret files with the proper protections and enforcements or placed within a password vault."},"impact":0.7,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45690r712599_chk","severity":"high","gid":"V-242415","rid":"SV-242415r712601_rule","stig_id":"CNTR-K8-001160","gtitle":"SRG-APP-000171-CTR-000435","fix_id":"F-45648r712600_fix","documentable":null,"cci":["CCI-000196"],"nist":["IA-5 (1) (c)"]}},{"id":"SV-242416","code":"control 'SV-242416' do\n  title 'Kubernetes Kubelet must not disable timeouts.'\n  desc 'Idle connections from the Kubelet can be use by unauthorized users to perform malicious activity to the nodes, pods, containers, and cluster within the Kubernetes Control Plane. Setting the streaming connection idle timeout defines the maximum time an idle session is permitted prior to disconnect. Setting the value to \"0\" never disconnects any idle sessions. Idle timeouts must never be set to \"0\" and should be defined at a minimum of \"5 minutes\".'\n  desc 'check', 'Change to the /etc/sysconfig/ directory on the Kubernetes Master Node. Run the command:\n\ngrep -i streaming-connection-idle-timeout kubelet  \n\nIf the setting streaming-connection-idle-timeout is set to \"0\" or the parameter is not configured in the Kubernetes Kubelet, this is a finding.'\n  desc 'fix', 'Edit the Kubernetes Kubelet file in the /etc/sysconfig directory on the Kubernetes Master Node. Set the argument \"--streaming-connection-idle-timeout\" to a value other than \"0\". Reset Kubelet service using the following command:\n\nservice kubelet restart'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45691r712602_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242416'\n  tag rid: 'SV-242416r712604_rule'\n  tag stig_id: 'CNTR-K8-001300'\n  tag gtitle: 'SRG-APP-000516-CTR-001325'\n  tag fix_id: 'F-45649r712603_fix'\n  tag 'documentable'\n  tag cci: ['CCI-001133']\n  tag nist: ['SC-10']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242416.rb"},"title":"Kubernetes Kubelet must not disable timeouts.","desc":"Idle connections from the Kubelet can be use by unauthorized users to perform malicious activity to the nodes, pods, containers, and cluster within the Kubernetes Control Plane. Setting the streaming connection idle timeout defines the maximum time an idle session is permitted prior to disconnect. Setting the value to \"0\" never disconnects any idle sessions. Idle timeouts must never be set to \"0\" and should be defined at a minimum of \"5 minutes\".","descriptions":{"default":"Idle connections from the Kubelet can be use by unauthorized users to perform malicious activity to the nodes, pods, containers, and cluster within the Kubernetes Control Plane. Setting the streaming connection idle timeout defines the maximum time an idle session is permitted prior to disconnect. Setting the value to \"0\" never disconnects any idle sessions. Idle timeouts must never be set to \"0\" and should be defined at a minimum of \"5 minutes\".","check":"Change to the /etc/sysconfig/ directory on the Kubernetes Master Node. Run the command:\n\ngrep -i streaming-connection-idle-timeout kubelet  \n\nIf the setting streaming-connection-idle-timeout is set to \"0\" or the parameter is not configured in the Kubernetes Kubelet, this is a finding.","fix":"Edit the Kubernetes Kubelet file in the /etc/sysconfig directory on the Kubernetes Master Node. Set the argument \"--streaming-connection-idle-timeout\" to a value other than \"0\". Reset Kubelet service using the following command:\n\nservice kubelet restart"},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45691r712602_chk","severity":"medium","gid":"V-242416","rid":"SV-242416r712604_rule","stig_id":"CNTR-K8-001300","gtitle":"SRG-APP-000516-CTR-001325","fix_id":"F-45649r712603_fix","documentable":null,"cci":["CCI-001133"],"nist":["SC-10"]}},{"id":"SV-242417","code":"control 'SV-242417' do\n  title 'Kubernetes must separate user functionality.'\n  desc 'Separating user functionality from management functionality is a requirement for all the components within the Kubernetes Control Plane. Without the separation, users may have access to management functions that can degrade the Kubernetes architecture and the services being offered, and can offer a method to bypass testing and validation of functions before introduced into a production environment.'\n  desc 'check', 'On the Master node, run the command:\n\nkubectl get pods --all-namespaces\n\nReview the namespaces and pods that are returned. Kubernetes system namespaces are kube-node-lease, kube-public, and kube-system.\n\nIf any user pods are present in the Kubernetes system namespaces, this is a finding.'\n  desc 'fix', 'Move any user pods that are present in the Kubernetes system namespaces to user specific namespaces.'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45692r712605_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242417'\n  tag rid: 'SV-242417r712607_rule'\n  tag stig_id: 'CNTR-K8-001360'\n  tag gtitle: 'SRG-APP-000211-CTR-000530'\n  tag fix_id: 'F-45650r712606_fix'\n  tag 'documentable'\n  tag cci: ['CCI-001082']\n  tag nist: ['SC-2']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242417.rb"},"title":"Kubernetes must separate user functionality.","desc":"Separating user functionality from management functionality is a requirement for all the components within the Kubernetes Control Plane. Without the separation, users may have access to management functions that can degrade the Kubernetes architecture and the services being offered, and can offer a method to bypass testing and validation of functions before introduced into a production environment.","descriptions":{"default":"Separating user functionality from management functionality is a requirement for all the components within the Kubernetes Control Plane. Without the separation, users may have access to management functions that can degrade the Kubernetes architecture and the services being offered, and can offer a method to bypass testing and validation of functions before introduced into a production environment.","check":"On the Master node, run the command:\n\nkubectl get pods --all-namespaces\n\nReview the namespaces and pods that are returned. Kubernetes system namespaces are kube-node-lease, kube-public, and kube-system.\n\nIf any user pods are present in the Kubernetes system namespaces, this is a finding.","fix":"Move any user pods that are present in the Kubernetes system namespaces to user specific namespaces."},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45692r712605_chk","severity":"medium","gid":"V-242417","rid":"SV-242417r712607_rule","stig_id":"CNTR-K8-001360","gtitle":"SRG-APP-000211-CTR-000530","fix_id":"F-45650r712606_fix","documentable":null,"cci":["CCI-001082"],"nist":["SC-2"]}},{"id":"SV-242418","code":"control 'SV-242418' do\n  title 'The Kubernetes API server must use approved cipher suites.'\n  desc 'The Kubernetes API server communicates to the kubelet service on the nodes to deploy, update, and delete resources. If an attacker were able to get between this communication and modify the request, the Kubernetes cluster could be compromised. Using approved cypher suites for the communication ensures the protection of the transmitted information, confidentiality, and integrity so that the attacker cannot read or alter this communication.'\n  desc 'check', 'Change to the /etc/kubernetes/manifests/ directory on the Kubernetes Master Node. Run the command:\n\ngrep -i tls-cipher-suites *\n\nIf the setting feature tls-cipher-suites is not set in the Kubernetes API server manifest file or contains no value or does not contain TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM _SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM _SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM _SHA384, this is a finding.'\n  desc 'fix', 'Edit the Kubernetes API Server manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Set the value of tls-cipher-suites to:\nTLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM _SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM _SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM _SHA384'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45693r712608_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242418'\n  tag rid: 'SV-242418r712610_rule'\n  tag stig_id: 'CNTR-K8-001400'\n  tag gtitle: 'SRG-APP-000219-CTR-000550'\n  tag fix_id: 'F-45651r717025_fix'\n  tag 'documentable'\n  tag cci: ['CCI-001184']\n  tag nist: ['SC-23']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242418.rb"},"title":"The Kubernetes API server must use approved cipher suites.","desc":"The Kubernetes API server communicates to the kubelet service on the nodes to deploy, update, and delete resources. If an attacker were able to get between this communication and modify the request, the Kubernetes cluster could be compromised. Using approved cypher suites for the communication ensures the protection of the transmitted information, confidentiality, and integrity so that the attacker cannot read or alter this communication.","descriptions":{"default":"The Kubernetes API server communicates to the kubelet service on the nodes to deploy, update, and delete resources. If an attacker were able to get between this communication and modify the request, the Kubernetes cluster could be compromised. Using approved cypher suites for the communication ensures the protection of the transmitted information, confidentiality, and integrity so that the attacker cannot read or alter this communication.","check":"Change to the /etc/kubernetes/manifests/ directory on the Kubernetes Master Node. Run the command:\n\ngrep -i tls-cipher-suites *\n\nIf the setting feature tls-cipher-suites is not set in the Kubernetes API server manifest file or contains no value or does not contain TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM _SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM _SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM _SHA384, this is a finding.","fix":"Edit the Kubernetes API Server manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Set the value of tls-cipher-suites to:\nTLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM _SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM _SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM _SHA384"},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45693r712608_chk","severity":"medium","gid":"V-242418","rid":"SV-242418r712610_rule","stig_id":"CNTR-K8-001400","gtitle":"SRG-APP-000219-CTR-000550","fix_id":"F-45651r717025_fix","documentable":null,"cci":["CCI-001184"],"nist":["SC-23"]}},{"id":"SV-242419","code":"control 'SV-242419' do\n  title 'Kubernetes API Server must have the SSL Certificate Authority set.'\n  desc 'Kubernetes control plane and external communication is managed by API Server. The main implementation of the API Server is to manage hardware resources for pods and containers using horizontal or vertical scaling. Anyone who can access the API Server can effectively control the Kubernetes architecture. Using authenticity protection, the communication can be protected against man-in-the-middle attacks/session hijacking and the insertion of false information into sessions.\n\nThe communication session is protected by utilizing transport encryption protocols, such as TLS. TLS provides the Kubernetes API Server with a means to be able to authenticate sessions and encrypt traffic. \n\nTo enable encrypted communication for API Server, the parameter etcd-cafile must be set. This parameter gives the location of the SSL Certificate Authority file used to secure API Server communication.'\n  desc 'check', 'Change to the /etc/kubernetes/manifests/ directory on the Kubernetes Master Node. Run the command:\n\ngrep -i client-ca-file *\n\nIf the setting feature client-ca-file is not set in the Kubernetes API server manifest file or contains no value, this is a finding.'\n  desc 'fix', 'Edit the Kubernetes API Server manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Set the value of client-ca-file to path containing Approved Organizational Certificate.'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45694r712611_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242419'\n  tag rid: 'SV-242419r712613_rule'\n  tag stig_id: 'CNTR-K8-001410'\n  tag gtitle: 'SRG-APP-000219-CTR-000550'\n  tag fix_id: 'F-45652r712612_fix'\n  tag 'documentable'\n  tag cci: ['CCI-001184']\n  tag nist: ['SC-23']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242419.rb"},"title":"Kubernetes API Server must have the SSL Certificate Authority set.","desc":"Kubernetes control plane and external communication is managed by API Server. The main implementation of the API Server is to manage hardware resources for pods and containers using horizontal or vertical scaling. Anyone who can access the API Server can effectively control the Kubernetes architecture. Using authenticity protection, the communication can be protected against man-in-the-middle attacks/session hijacking and the insertion of false information into sessions.\n\nThe communication session is protected by utilizing transport encryption protocols, such as TLS. TLS provides the Kubernetes API Server with a means to be able to authenticate sessions and encrypt traffic. \n\nTo enable encrypted communication for API Server, the parameter etcd-cafile must be set. This parameter gives the location of the SSL Certificate Authority file used to secure API Server communication.","descriptions":{"default":"Kubernetes control plane and external communication is managed by API Server. The main implementation of the API Server is to manage hardware resources for pods and containers using horizontal or vertical scaling. Anyone who can access the API Server can effectively control the Kubernetes architecture. Using authenticity protection, the communication can be protected against man-in-the-middle attacks/session hijacking and the insertion of false information into sessions.\n\nThe communication session is protected by utilizing transport encryption protocols, such as TLS. TLS provides the Kubernetes API Server with a means to be able to authenticate sessions and encrypt traffic. \n\nTo enable encrypted communication for API Server, the parameter etcd-cafile must be set. This parameter gives the location of the SSL Certificate Authority file used to secure API Server communication.","check":"Change to the /etc/kubernetes/manifests/ directory on the Kubernetes Master Node. Run the command:\n\ngrep -i client-ca-file *\n\nIf the setting feature client-ca-file is not set in the Kubernetes API server manifest file or contains no value, this is a finding.","fix":"Edit the Kubernetes API Server manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Set the value of client-ca-file to path containing Approved Organizational Certificate."},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45694r712611_chk","severity":"medium","gid":"V-242419","rid":"SV-242419r712613_rule","stig_id":"CNTR-K8-001410","gtitle":"SRG-APP-000219-CTR-000550","fix_id":"F-45652r712612_fix","documentable":null,"cci":["CCI-001184"],"nist":["SC-23"]}},{"id":"SV-242420","code":"control 'SV-242420' do\n  title 'Kubernetes Kubelet must have the SSL Certificate Authority set.'\n  desc 'Kubernetes container and pod configuration are maintained by Kubelet. Kubelet agents register nodes with the API Server, mount volume storage, and perform health checks for containers and pods. Anyone who gains access to Kubelet agents can effectively control applications within the pods and containers. Using authenticity protection, the communication can be protected against man-in-the-middle attacks/session hijacking and the insertion of false information into sessions.\n\nThe communication session is protected by utilizing transport encryption protocols, such as TLS. TLS provides the Kubernetes API Server with a means to be able to authenticate sessions and encrypt traffic.\n\nTo enable encrypted communication for Kubelet, the parameter etcd-cafile must be set. This parameter gives the location of the SSL Certificate Authority file used to secure Kubelet communication.'\n  desc 'check', 'Change to the /etc/sysconfig/ directory on the Kubernetes Master Node. Run the command:\n\ngrep -i client-ca-file kubelet\n\nIf the setting client-ca-file is not set in the Kubernetes API server manifest file or contains no value, this is a finding.'\n  desc 'fix', 'Edit the Kubernetes Kubelet file in the /etc/sysconfig/ directory on the Kubernetes Master Node. Set the value of client-ca-file to path containing Approved Organizational Certificate. \n\nReset Kubelet service using the following command:\nservice kubelet restart'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45695r712614_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242420'\n  tag rid: 'SV-242420r712616_rule'\n  tag stig_id: 'CNTR-K8-001420'\n  tag gtitle: 'SRG-APP-000219-CTR-000550'\n  tag fix_id: 'F-45653r717026_fix'\n  tag 'documentable'\n  tag cci: ['CCI-001184']\n  tag nist: ['SC-23']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242420.rb"},"title":"Kubernetes Kubelet must have the SSL Certificate Authority set.","desc":"Kubernetes container and pod configuration are maintained by Kubelet. Kubelet agents register nodes with the API Server, mount volume storage, and perform health checks for containers and pods. Anyone who gains access to Kubelet agents can effectively control applications within the pods and containers. Using authenticity protection, the communication can be protected against man-in-the-middle attacks/session hijacking and the insertion of false information into sessions.\n\nThe communication session is protected by utilizing transport encryption protocols, such as TLS. TLS provides the Kubernetes API Server with a means to be able to authenticate sessions and encrypt traffic.\n\nTo enable encrypted communication for Kubelet, the parameter etcd-cafile must be set. This parameter gives the location of the SSL Certificate Authority file used to secure Kubelet communication.","descriptions":{"default":"Kubernetes container and pod configuration are maintained by Kubelet. Kubelet agents register nodes with the API Server, mount volume storage, and perform health checks for containers and pods. Anyone who gains access to Kubelet agents can effectively control applications within the pods and containers. Using authenticity protection, the communication can be protected against man-in-the-middle attacks/session hijacking and the insertion of false information into sessions.\n\nThe communication session is protected by utilizing transport encryption protocols, such as TLS. TLS provides the Kubernetes API Server with a means to be able to authenticate sessions and encrypt traffic.\n\nTo enable encrypted communication for Kubelet, the parameter etcd-cafile must be set. This parameter gives the location of the SSL Certificate Authority file used to secure Kubelet communication.","check":"Change to the /etc/sysconfig/ directory on the Kubernetes Master Node. Run the command:\n\ngrep -i client-ca-file kubelet\n\nIf the setting client-ca-file is not set in the Kubernetes API server manifest file or contains no value, this is a finding.","fix":"Edit the Kubernetes Kubelet file in the /etc/sysconfig/ directory on the Kubernetes Master Node. Set the value of client-ca-file to path containing Approved Organizational Certificate. \n\nReset Kubelet service using the following command:\nservice kubelet restart"},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45695r712614_chk","severity":"medium","gid":"V-242420","rid":"SV-242420r712616_rule","stig_id":"CNTR-K8-001420","gtitle":"SRG-APP-000219-CTR-000550","fix_id":"F-45653r717026_fix","documentable":null,"cci":["CCI-001184"],"nist":["SC-23"]}},{"id":"SV-242421","code":"control 'SV-242421' do\n  title 'Kubernetes Controller Manager must have the SSL Certificate Authority set.'\n  desc 'The Kubernetes Controller Manager is responsible for creating service accounts and tokens for the API Server, maintaining the correct number of pods for every replication controller and provides notifications when nodes are offline.  \n\nAnyone who gains access to the Controller Manager can generate backdoor accounts, take possession of, or diminish system performance without detection by disabling system notification. Using authenticity protection, the communication can be protected against man-in-the-middle attacks/session hijacking and the insertion of false information into sessions.\n\nThe communication session is protected by utilizing transport encryption protocols, such as TLS. TLS provides the Kubernetes Controller Manager with a means to be able to authenticate sessions and encrypt traffic.'\n  desc 'check', 'Change to the /etc/kubernetes/manifests/ directory on the Kubernetes Master Node. Run the command:\n\ngrep -i root-ca-file *\n\nIf the setting client-ca-file is not set in the Kubernetes Controller Manager manifest file or contains no value, this is a finding.'\n  desc 'fix', 'Edit the Kubernetes Controller Manager manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Set the value of root-ca-file to path containing Approved Organizational Certificate.'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45696r712617_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242421'\n  tag rid: 'SV-242421r717033_rule'\n  tag stig_id: 'CNTR-K8-001430'\n  tag gtitle: 'SRG-APP-000219-CTR-000550'\n  tag fix_id: 'F-45654r712618_fix'\n  tag 'documentable'\n  tag cci: ['CCI-001184']\n  tag nist: ['SC-23']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242421.rb"},"title":"Kubernetes Controller Manager must have the SSL Certificate Authority set.","desc":"The Kubernetes Controller Manager is responsible for creating service accounts and tokens for the API Server, maintaining the correct number of pods for every replication controller and provides notifications when nodes are offline.  \n\nAnyone who gains access to the Controller Manager can generate backdoor accounts, take possession of, or diminish system performance without detection by disabling system notification. Using authenticity protection, the communication can be protected against man-in-the-middle attacks/session hijacking and the insertion of false information into sessions.\n\nThe communication session is protected by utilizing transport encryption protocols, such as TLS. TLS provides the Kubernetes Controller Manager with a means to be able to authenticate sessions and encrypt traffic.","descriptions":{"default":"The Kubernetes Controller Manager is responsible for creating service accounts and tokens for the API Server, maintaining the correct number of pods for every replication controller and provides notifications when nodes are offline.  \n\nAnyone who gains access to the Controller Manager can generate backdoor accounts, take possession of, or diminish system performance without detection by disabling system notification. Using authenticity protection, the communication can be protected against man-in-the-middle attacks/session hijacking and the insertion of false information into sessions.\n\nThe communication session is protected by utilizing transport encryption protocols, such as TLS. TLS provides the Kubernetes Controller Manager with a means to be able to authenticate sessions and encrypt traffic.","check":"Change to the /etc/kubernetes/manifests/ directory on the Kubernetes Master Node. Run the command:\n\ngrep -i root-ca-file *\n\nIf the setting client-ca-file is not set in the Kubernetes Controller Manager manifest file or contains no value, this is a finding.","fix":"Edit the Kubernetes Controller Manager manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Set the value of root-ca-file to path containing Approved Organizational Certificate."},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45696r712617_chk","severity":"medium","gid":"V-242421","rid":"SV-242421r717033_rule","stig_id":"CNTR-K8-001430","gtitle":"SRG-APP-000219-CTR-000550","fix_id":"F-45654r712618_fix","documentable":null,"cci":["CCI-001184"],"nist":["SC-23"]}},{"id":"SV-242422","code":"control 'SV-242422' do\n  title 'Kubernetes API Server must have a certificate for communication.'\n  desc 'Kubernetes control plane and external communication is managed by API Server. The main implementation of the API Server is to manage hardware resources for pods and container using horizontal or vertical scaling. Anyone who can access the API Server can effectively control the Kubernetes architecture. Using authenticity protection, the communication can be protected against man-in-the-middle attacks/session hijacking and the insertion of false information into sessions.\n\nThe communication session is protected by utilizing transport encryption protocols, such as TLS. TLS provides the Kubernetes API Server with a means to be able to authenticate sessions and encrypt traffic. \n\nTo enable encrypted communication for API Server, the parameter etcd-cafile must be set. This parameter gives the location of the SSL Certificate Authority file used to secure API Server communication.'\n  desc 'check', 'Change to the /etc/kubernetes/manifests/ directory on the Kubernetes Master Node. Run the command:\n\ngrep -i tls-cert-file *\ngrep -i tls-private-key-file *\n\nIf the setting tls-cert-file and private-key-file is not set in the Kubernetes API server manifest file or contains no value, this is a finding.'\n  desc 'fix', 'Edit the Kubernetes API Server manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Set the value of tls-cert-file and tls-private-key-file to path containing Approved Organizational Certificate.'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45697r712620_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242422'\n  tag rid: 'SV-242422r712622_rule'\n  tag stig_id: 'CNTR-K8-001440'\n  tag gtitle: 'SRG-APP-000219-CTR-000550'\n  tag fix_id: 'F-45655r712621_fix'\n  tag 'documentable'\n  tag cci: ['CCI-001184']\n  tag nist: ['SC-23']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242422.rb"},"title":"Kubernetes API Server must have a certificate for communication.","desc":"Kubernetes control plane and external communication is managed by API Server. The main implementation of the API Server is to manage hardware resources for pods and container using horizontal or vertical scaling. Anyone who can access the API Server can effectively control the Kubernetes architecture. Using authenticity protection, the communication can be protected against man-in-the-middle attacks/session hijacking and the insertion of false information into sessions.\n\nThe communication session is protected by utilizing transport encryption protocols, such as TLS. TLS provides the Kubernetes API Server with a means to be able to authenticate sessions and encrypt traffic. \n\nTo enable encrypted communication for API Server, the parameter etcd-cafile must be set. This parameter gives the location of the SSL Certificate Authority file used to secure API Server communication.","descriptions":{"default":"Kubernetes control plane and external communication is managed by API Server. The main implementation of the API Server is to manage hardware resources for pods and container using horizontal or vertical scaling. Anyone who can access the API Server can effectively control the Kubernetes architecture. Using authenticity protection, the communication can be protected against man-in-the-middle attacks/session hijacking and the insertion of false information into sessions.\n\nThe communication session is protected by utilizing transport encryption protocols, such as TLS. TLS provides the Kubernetes API Server with a means to be able to authenticate sessions and encrypt traffic. \n\nTo enable encrypted communication for API Server, the parameter etcd-cafile must be set. This parameter gives the location of the SSL Certificate Authority file used to secure API Server communication.","check":"Change to the /etc/kubernetes/manifests/ directory on the Kubernetes Master Node. Run the command:\n\ngrep -i tls-cert-file *\ngrep -i tls-private-key-file *\n\nIf the setting tls-cert-file and private-key-file is not set in the Kubernetes API server manifest file or contains no value, this is a finding.","fix":"Edit the Kubernetes API Server manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Set the value of tls-cert-file and tls-private-key-file to path containing Approved Organizational Certificate."},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45697r712620_chk","severity":"medium","gid":"V-242422","rid":"SV-242422r712622_rule","stig_id":"CNTR-K8-001440","gtitle":"SRG-APP-000219-CTR-000550","fix_id":"F-45655r712621_fix","documentable":null,"cci":["CCI-001184"],"nist":["SC-23"]}},{"id":"SV-242423","code":"control 'SV-242423' do\n  title 'Kubernetes etcd must enable client authentication to secure service.'\n  desc 'Kubernetes container and pod configuration are maintained by Kubelet. Kubelet agents register nodes with the API Server, mount volume storage, and perform health checks for containers and pods. Anyone who gains access to Kubelet agents can effectively control applications within the pods and containers. Using authenticity protection, the communication can be protected against man-in-the-middle attacks/session hijacking and the insertion of false information into sessions.\n\nThe communication session is protected by utilizing transport encryption protocols, such as TLS. TLS provides the Kubernetes API Server with a means to be able to authenticate sessions and encrypt traffic.\n\nTo enable encrypted communication for Kubelet, the parameter etcd-cafile must be set. This parameter gives the location of the SSL Certificate Authority file used to secure Kubelet communication.'\n  desc 'check', 'Change to the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Run the command:\n\ngrep -i client-cert-auth * \n\nIf the setting client-cert-auth is not configured in the Kubernetes etcd manifest file or set to \"false\", this is a finding.'\n  desc 'fix', 'Edit the Kubernetes API Server manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Set the value of \"--client-cert-auth\" to \"true\" for the etcd.'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45698r712623_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242423'\n  tag rid: 'SV-242423r712625_rule'\n  tag stig_id: 'CNTR-K8-001450'\n  tag gtitle: 'SRG-APP-000219-CTR-000550'\n  tag fix_id: 'F-45656r712624_fix'\n  tag 'documentable'\n  tag cci: ['CCI-001184']\n  tag nist: ['SC-23']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242423.rb"},"title":"Kubernetes etcd must enable client authentication to secure service.","desc":"Kubernetes container and pod configuration are maintained by Kubelet. Kubelet agents register nodes with the API Server, mount volume storage, and perform health checks for containers and pods. Anyone who gains access to Kubelet agents can effectively control applications within the pods and containers. Using authenticity protection, the communication can be protected against man-in-the-middle attacks/session hijacking and the insertion of false information into sessions.\n\nThe communication session is protected by utilizing transport encryption protocols, such as TLS. TLS provides the Kubernetes API Server with a means to be able to authenticate sessions and encrypt traffic.\n\nTo enable encrypted communication for Kubelet, the parameter etcd-cafile must be set. This parameter gives the location of the SSL Certificate Authority file used to secure Kubelet communication.","descriptions":{"default":"Kubernetes container and pod configuration are maintained by Kubelet. Kubelet agents register nodes with the API Server, mount volume storage, and perform health checks for containers and pods. Anyone who gains access to Kubelet agents can effectively control applications within the pods and containers. Using authenticity protection, the communication can be protected against man-in-the-middle attacks/session hijacking and the insertion of false information into sessions.\n\nThe communication session is protected by utilizing transport encryption protocols, such as TLS. TLS provides the Kubernetes API Server with a means to be able to authenticate sessions and encrypt traffic.\n\nTo enable encrypted communication for Kubelet, the parameter etcd-cafile must be set. This parameter gives the location of the SSL Certificate Authority file used to secure Kubelet communication.","check":"Change to the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Run the command:\n\ngrep -i client-cert-auth * \n\nIf the setting client-cert-auth is not configured in the Kubernetes etcd manifest file or set to \"false\", this is a finding.","fix":"Edit the Kubernetes API Server manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Set the value of \"--client-cert-auth\" to \"true\" for the etcd."},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45698r712623_chk","severity":"medium","gid":"V-242423","rid":"SV-242423r712625_rule","stig_id":"CNTR-K8-001450","gtitle":"SRG-APP-000219-CTR-000550","fix_id":"F-45656r712624_fix","documentable":null,"cci":["CCI-001184"],"nist":["SC-23"]}},{"id":"SV-242424","code":"control 'SV-242424' do\n  title 'Kubernetes Kubelet must enable tls-private-key-file for client authentication to secure service.'\n  desc 'Kubernetes container and pod configuration are maintained by Kubelet. Kubelet agents register nodes with the API Server, mount volume storage, and perform health checks for containers and pods. Anyone who gains access to Kubelet agents can effectively control applications within the pods and containers. Using authenticity protection, the communication can be protected against man-in-the-middle attacks/session hijacking and the insertion of false information into sessions.\n\nThe communication session is protected by utilizing transport encryption protocols, such as TLS. TLS provides the Kubernetes API Server with a means to be able to authenticate sessions and encrypt traffic.\n\nTo enable encrypted communication for Kubelet, the parameter etcd-cafile must be set. This parameter gives the location of the SSL Certificate Authority file used to secure Kubelet communication.'\n  desc 'check', 'Change to the /etc/sysconfig/ directory on the Kubernetes Master Node. Run the commands:\n\ngrep -i tls-private-key-file kubelet\n\nIf the setting \"tls-private-key-file\" is not configured in the Kubernetes Kubelet, this is a finding.'\n  desc 'fix', 'Edit the Kubernetes Kuberlet file in the /etc/sysconfig directory on the Kubernetes Master Node. Set the argument tls-private-key-file to an Approved Organization Certificate. Reset Kubelet service using the following command:\n\nservice kubelet restart'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45699r712626_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242424'\n  tag rid: 'SV-242424r712628_rule'\n  tag stig_id: 'CNTR-K8-001460'\n  tag gtitle: 'SRG-APP-000219-CTR-000550'\n  tag fix_id: 'F-45657r712627_fix'\n  tag 'documentable'\n  tag cci: ['CCI-001184']\n  tag nist: ['SC-23']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242424.rb"},"title":"Kubernetes Kubelet must enable tls-private-key-file for client authentication to secure service.","desc":"Kubernetes container and pod configuration are maintained by Kubelet. Kubelet agents register nodes with the API Server, mount volume storage, and perform health checks for containers and pods. Anyone who gains access to Kubelet agents can effectively control applications within the pods and containers. Using authenticity protection, the communication can be protected against man-in-the-middle attacks/session hijacking and the insertion of false information into sessions.\n\nThe communication session is protected by utilizing transport encryption protocols, such as TLS. TLS provides the Kubernetes API Server with a means to be able to authenticate sessions and encrypt traffic.\n\nTo enable encrypted communication for Kubelet, the parameter etcd-cafile must be set. This parameter gives the location of the SSL Certificate Authority file used to secure Kubelet communication.","descriptions":{"default":"Kubernetes container and pod configuration are maintained by Kubelet. Kubelet agents register nodes with the API Server, mount volume storage, and perform health checks for containers and pods. Anyone who gains access to Kubelet agents can effectively control applications within the pods and containers. Using authenticity protection, the communication can be protected against man-in-the-middle attacks/session hijacking and the insertion of false information into sessions.\n\nThe communication session is protected by utilizing transport encryption protocols, such as TLS. TLS provides the Kubernetes API Server with a means to be able to authenticate sessions and encrypt traffic.\n\nTo enable encrypted communication for Kubelet, the parameter etcd-cafile must be set. This parameter gives the location of the SSL Certificate Authority file used to secure Kubelet communication.","check":"Change to the /etc/sysconfig/ directory on the Kubernetes Master Node. Run the commands:\n\ngrep -i tls-private-key-file kubelet\n\nIf the setting \"tls-private-key-file\" is not configured in the Kubernetes Kubelet, this is a finding.","fix":"Edit the Kubernetes Kuberlet file in the /etc/sysconfig directory on the Kubernetes Master Node. Set the argument tls-private-key-file to an Approved Organization Certificate. Reset Kubelet service using the following command:\n\nservice kubelet restart"},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45699r712626_chk","severity":"medium","gid":"V-242424","rid":"SV-242424r712628_rule","stig_id":"CNTR-K8-001460","gtitle":"SRG-APP-000219-CTR-000550","fix_id":"F-45657r712627_fix","documentable":null,"cci":["CCI-001184"],"nist":["SC-23"]}},{"id":"SV-242425","code":"control 'SV-242425' do\n  title 'Kubernetes Kubelet must enable tls-cert-file for client authentication to secure service.'\n  desc 'Kubernetes container and pod configuration are maintained by Kubelet. Kubelet agents register nodes with the API Server, mount volume storage, and perform health checks for containers and pods. Anyone who gains access to Kubelet agents can effectively control applications within the pods and containers. Using authenticity protection, the communication can be protected against man-in-the-middle attacks/session hijacking and the insertion of false information into sessions.\n\nThe communication session is protected by utilizing transport encryption protocols, such as TLS. TLS provides the Kubernetes API Server with a means to be able to authenticate sessions and encrypt traffic.\n\nTo enable encrypted communication for Kubelet, the parameter etcd-cafile must be set. This parameter gives the location of the SSL Certificate Authority file used to secure Kubelet communication.'\n  desc 'check', 'Change to the /etc/sysconfig/ directory on the Kubernetes Master Node. Run the commands:\n\ngrep -i tls-cert-file kubelet  \n\nIf the setting \"tls-cert-file\" is not configured in the Kubernetes Kubelet, this is a finding.'\n  desc 'fix', 'Edit the Kubernetes Kuberlet file in the /etc/sysconfig directory on the Kubernetes Master Node. Set the argument \"tls-cert-file\" to an Approved Organization Certificate. Reset Kubelet service using the following command:\n\nservice kubelet restart'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45700r712629_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242425'\n  tag rid: 'SV-242425r712631_rule'\n  tag stig_id: 'CNTR-K8-001470'\n  tag gtitle: 'SRG-APP-000219-CTR-000550'\n  tag fix_id: 'F-45658r712630_fix'\n  tag 'documentable'\n  tag cci: ['CCI-001184']\n  tag nist: ['SC-23']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242425.rb"},"title":"Kubernetes Kubelet must enable tls-cert-file for client authentication to secure service.","desc":"Kubernetes container and pod configuration are maintained by Kubelet. Kubelet agents register nodes with the API Server, mount volume storage, and perform health checks for containers and pods. Anyone who gains access to Kubelet agents can effectively control applications within the pods and containers. Using authenticity protection, the communication can be protected against man-in-the-middle attacks/session hijacking and the insertion of false information into sessions.\n\nThe communication session is protected by utilizing transport encryption protocols, such as TLS. TLS provides the Kubernetes API Server with a means to be able to authenticate sessions and encrypt traffic.\n\nTo enable encrypted communication for Kubelet, the parameter etcd-cafile must be set. This parameter gives the location of the SSL Certificate Authority file used to secure Kubelet communication.","descriptions":{"default":"Kubernetes container and pod configuration are maintained by Kubelet. Kubelet agents register nodes with the API Server, mount volume storage, and perform health checks for containers and pods. Anyone who gains access to Kubelet agents can effectively control applications within the pods and containers. Using authenticity protection, the communication can be protected against man-in-the-middle attacks/session hijacking and the insertion of false information into sessions.\n\nThe communication session is protected by utilizing transport encryption protocols, such as TLS. TLS provides the Kubernetes API Server with a means to be able to authenticate sessions and encrypt traffic.\n\nTo enable encrypted communication for Kubelet, the parameter etcd-cafile must be set. This parameter gives the location of the SSL Certificate Authority file used to secure Kubelet communication.","check":"Change to the /etc/sysconfig/ directory on the Kubernetes Master Node. Run the commands:\n\ngrep -i tls-cert-file kubelet  \n\nIf the setting \"tls-cert-file\" is not configured in the Kubernetes Kubelet, this is a finding.","fix":"Edit the Kubernetes Kuberlet file in the /etc/sysconfig directory on the Kubernetes Master Node. Set the argument \"tls-cert-file\" to an Approved Organization Certificate. Reset Kubelet service using the following command:\n\nservice kubelet restart"},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45700r712629_chk","severity":"medium","gid":"V-242425","rid":"SV-242425r712631_rule","stig_id":"CNTR-K8-001470","gtitle":"SRG-APP-000219-CTR-000550","fix_id":"F-45658r712630_fix","documentable":null,"cci":["CCI-001184"],"nist":["SC-23"]}},{"id":"SV-242426","code":"control 'SV-242426' do\n  title 'Kubernetes etcd must enable client authentication to secure service.'\n  desc 'Kubernetes container and pod configuration are maintained by Kubelet. Kubelet agents register nodes with the API Server, mount volume storage, and perform health checks for containers and pods. Anyone who gains access to Kubelet agents can effectively control applications within the pods and containers. Using authenticity protection, the communication can be protected against man-in-the-middle attacks/session hijacking and the insertion of false information into sessions.\n\nThe communication session is protected by utilizing transport encryption protocols, such as TLS. TLS provides the Kubernetes API Server with a means to be able to authenticate sessions and encrypt traffic.\n\nTo enable encrypted communication for Kubelet, the parameter etcd-cafile must be set. This parameter gives the location of the SSL Certificate Authority file used to secure Kubelet communication.'\n  desc 'check', 'Change to the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Run the command:\n\ngrep -i client-cert-auth * \n\nIf the setting \"client-cert-auth\" is not configured in the Kubernetes etcd manifest file or set to \"false\", this is a finding.'\n  desc 'fix', 'Edit the Kubernetes etcd manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Set the value of \"--client-cert-auth\" to \"true\" for the etcd.'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45701r712632_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242426'\n  tag rid: 'SV-242426r712634_rule'\n  tag stig_id: 'CNTR-K8-001480'\n  tag gtitle: 'SRG-APP-000219-CTR-000550'\n  tag fix_id: 'F-45659r712633_fix'\n  tag 'documentable'\n  tag cci: ['CCI-001184']\n  tag nist: ['SC-23']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242426.rb"},"title":"Kubernetes etcd must enable client authentication to secure service.","desc":"Kubernetes container and pod configuration are maintained by Kubelet. Kubelet agents register nodes with the API Server, mount volume storage, and perform health checks for containers and pods. Anyone who gains access to Kubelet agents can effectively control applications within the pods and containers. Using authenticity protection, the communication can be protected against man-in-the-middle attacks/session hijacking and the insertion of false information into sessions.\n\nThe communication session is protected by utilizing transport encryption protocols, such as TLS. TLS provides the Kubernetes API Server with a means to be able to authenticate sessions and encrypt traffic.\n\nTo enable encrypted communication for Kubelet, the parameter etcd-cafile must be set. This parameter gives the location of the SSL Certificate Authority file used to secure Kubelet communication.","descriptions":{"default":"Kubernetes container and pod configuration are maintained by Kubelet. Kubelet agents register nodes with the API Server, mount volume storage, and perform health checks for containers and pods. Anyone who gains access to Kubelet agents can effectively control applications within the pods and containers. Using authenticity protection, the communication can be protected against man-in-the-middle attacks/session hijacking and the insertion of false information into sessions.\n\nThe communication session is protected by utilizing transport encryption protocols, such as TLS. TLS provides the Kubernetes API Server with a means to be able to authenticate sessions and encrypt traffic.\n\nTo enable encrypted communication for Kubelet, the parameter etcd-cafile must be set. This parameter gives the location of the SSL Certificate Authority file used to secure Kubelet communication.","check":"Change to the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Run the command:\n\ngrep -i client-cert-auth * \n\nIf the setting \"client-cert-auth\" is not configured in the Kubernetes etcd manifest file or set to \"false\", this is a finding.","fix":"Edit the Kubernetes etcd manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Set the value of \"--client-cert-auth\" to \"true\" for the etcd."},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45701r712632_chk","severity":"medium","gid":"V-242426","rid":"SV-242426r712634_rule","stig_id":"CNTR-K8-001480","gtitle":"SRG-APP-000219-CTR-000550","fix_id":"F-45659r712633_fix","documentable":null,"cci":["CCI-001184"],"nist":["SC-23"]}},{"id":"SV-242427","code":"control 'SV-242427' do\n  title 'Kubernetes etcd must have a key file for secure communication.'\n  desc 'Kubernetes stores configuration and state information in a distributed key-value store called etcd. Anyone who can write to etcd can effectively control the Kubernetes cluster. Even just reading the contents of etcd could easily provide helpful hints to a would-be attacker. Using authenticity protection, the communication can be protected against man-in-the-middle attacks/session hijacking and the insertion of false information into sessions.\n\nThe communication session is protected by utilizing transport encryption protocols, such as TLS. TLS provides the Kubernetes API Server and etcd with a means to be able to authenticate sessions and encrypt traffic. \n\nTo enable encrypted communication for etcd, the parameter etcd-keyfile must be set. This parameter gives the location of the key file used to secure etcd communication.'\n  desc 'check', 'Change to the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Run the command:\n\ngrep -i etcd-keyfile * \n\nIf the setting \"etcd-keyfile\" is not configured in the Kubernetes etcd manifest file, this is a finding.'\n  desc 'fix', 'Edit the Kubernetes API Server manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Set the value of \"--etcd-keyfile\" to the Approved Organizational Certificate.'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45702r712635_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242427'\n  tag rid: 'SV-242427r712637_rule'\n  tag stig_id: 'CNTR-K8-001490'\n  tag gtitle: 'SRG-APP-000219-CTR-000550'\n  tag fix_id: 'F-45660r712636_fix'\n  tag 'documentable'\n  tag cci: ['CCI-001184']\n  tag nist: ['SC-23']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242427.rb"},"title":"Kubernetes etcd must have a key file for secure communication.","desc":"Kubernetes stores configuration and state information in a distributed key-value store called etcd. Anyone who can write to etcd can effectively control the Kubernetes cluster. Even just reading the contents of etcd could easily provide helpful hints to a would-be attacker. Using authenticity protection, the communication can be protected against man-in-the-middle attacks/session hijacking and the insertion of false information into sessions.\n\nThe communication session is protected by utilizing transport encryption protocols, such as TLS. TLS provides the Kubernetes API Server and etcd with a means to be able to authenticate sessions and encrypt traffic. \n\nTo enable encrypted communication for etcd, the parameter etcd-keyfile must be set. This parameter gives the location of the key file used to secure etcd communication.","descriptions":{"default":"Kubernetes stores configuration and state information in a distributed key-value store called etcd. Anyone who can write to etcd can effectively control the Kubernetes cluster. Even just reading the contents of etcd could easily provide helpful hints to a would-be attacker. Using authenticity protection, the communication can be protected against man-in-the-middle attacks/session hijacking and the insertion of false information into sessions.\n\nThe communication session is protected by utilizing transport encryption protocols, such as TLS. TLS provides the Kubernetes API Server and etcd with a means to be able to authenticate sessions and encrypt traffic. \n\nTo enable encrypted communication for etcd, the parameter etcd-keyfile must be set. This parameter gives the location of the key file used to secure etcd communication.","check":"Change to the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Run the command:\n\ngrep -i etcd-keyfile * \n\nIf the setting \"etcd-keyfile\" is not configured in the Kubernetes etcd manifest file, this is a finding.","fix":"Edit the Kubernetes API Server manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Set the value of \"--etcd-keyfile\" to the Approved Organizational Certificate."},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45702r712635_chk","severity":"medium","gid":"V-242427","rid":"SV-242427r712637_rule","stig_id":"CNTR-K8-001490","gtitle":"SRG-APP-000219-CTR-000550","fix_id":"F-45660r712636_fix","documentable":null,"cci":["CCI-001184"],"nist":["SC-23"]}},{"id":"SV-242428","code":"control 'SV-242428' do\n  title 'Kubernetes etcd must have a certificate for communication.'\n  desc 'Kubernetes stores configuration and state information in a distributed key-value store called etcd. Anyone who can write to etcd can effectively control a Kubernetes cluster. Even just reading the contents of etcd could easily provide helpful hints to a would-be attacker. Using authenticity protection, the communication can be protected against man-in-the-middle attacks/session hijacking and the insertion of false information into sessions.\n\nThe communication session is protected by utilizing transport encryption protocols, such as TLS. TLS provides the Kubernetes API Server and etcd with a means to be able to authenticate sessions and encrypt traffic. \n\nTo enable encrypted communication for etcd, the parameter etcd-certfile must be set. This parameter gives the location of the SSL certification file used to secure etcd communication.'\n  desc 'check', 'Change to the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Run the command:\n\ngrep -i etcd-certfile * \n\nIf the setting \"etcd-certfile\" is not configured in the Kubernetes etcd manifest file, this is a finding.'\n  desc 'fix', 'Edit the Kubernetes etcd manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Set the value of \"--etcd-certfile\" to the Approved Organizational Certificate.'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45703r712638_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242428'\n  tag rid: 'SV-242428r712640_rule'\n  tag stig_id: 'CNTR-K8-001500'\n  tag gtitle: 'SRG-APP-000219-CTR-000550'\n  tag fix_id: 'F-45661r712639_fix'\n  tag 'documentable'\n  tag cci: ['CCI-001184']\n  tag nist: ['SC-23']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242428.rb"},"title":"Kubernetes etcd must have a certificate for communication.","desc":"Kubernetes stores configuration and state information in a distributed key-value store called etcd. Anyone who can write to etcd can effectively control a Kubernetes cluster. Even just reading the contents of etcd could easily provide helpful hints to a would-be attacker. Using authenticity protection, the communication can be protected against man-in-the-middle attacks/session hijacking and the insertion of false information into sessions.\n\nThe communication session is protected by utilizing transport encryption protocols, such as TLS. TLS provides the Kubernetes API Server and etcd with a means to be able to authenticate sessions and encrypt traffic. \n\nTo enable encrypted communication for etcd, the parameter etcd-certfile must be set. This parameter gives the location of the SSL certification file used to secure etcd communication.","descriptions":{"default":"Kubernetes stores configuration and state information in a distributed key-value store called etcd. Anyone who can write to etcd can effectively control a Kubernetes cluster. Even just reading the contents of etcd could easily provide helpful hints to a would-be attacker. Using authenticity protection, the communication can be protected against man-in-the-middle attacks/session hijacking and the insertion of false information into sessions.\n\nThe communication session is protected by utilizing transport encryption protocols, such as TLS. TLS provides the Kubernetes API Server and etcd with a means to be able to authenticate sessions and encrypt traffic. \n\nTo enable encrypted communication for etcd, the parameter etcd-certfile must be set. This parameter gives the location of the SSL certification file used to secure etcd communication.","check":"Change to the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Run the command:\n\ngrep -i etcd-certfile * \n\nIf the setting \"etcd-certfile\" is not configured in the Kubernetes etcd manifest file, this is a finding.","fix":"Edit the Kubernetes etcd manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Set the value of \"--etcd-certfile\" to the Approved Organizational Certificate."},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45703r712638_chk","severity":"medium","gid":"V-242428","rid":"SV-242428r712640_rule","stig_id":"CNTR-K8-001500","gtitle":"SRG-APP-000219-CTR-000550","fix_id":"F-45661r712639_fix","documentable":null,"cci":["CCI-001184"],"nist":["SC-23"]}},{"id":"SV-242429","code":"control 'SV-242429' do\n  title 'Kubernetes etcd must have the SSL Certificate Authority set.'\n  desc 'Kubernetes stores configuration and state information in a distributed key-value store called etcd. Anyone who can write to etcd can effectively control a Kubernetes cluster. Even just reading the contents of etcd could easily provide helpful hints to a would-be attacker. Using authenticity protection, the communication can be protected against man-in-the-middle attacks/session hijacking and the insertion of false information into sessions.\n\nThe communication session is protected by utilizing transport encryption protocols, such as TLS. TLS provides the Kubernetes API Server and etcd with a means to be able to authenticate sessions and encrypt traffic. \n\nTo enable encrypted communication for etcd, the parameter etcd-cafile must be set. This parameter gives the location of the SSL Certificate Authority file used to secure etcd communication.'\n  desc 'check', 'Change to the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Run the command:\n\ngrep -i etcd-cafile * \n\nIf the setting \"etcd-cafile\" is not configured in the Kubernetes API Server manifest file, this is a finding.'\n  desc 'fix', 'Edit the Kubernetes API Server manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Set the value of \"--etcd-cafile\" to the Certificate Authority for etcd.'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45704r712641_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242429'\n  tag rid: 'SV-242429r712643_rule'\n  tag stig_id: 'CNTR-K8-001510'\n  tag gtitle: 'SRG-APP-000219-CTR-000550'\n  tag fix_id: 'F-45662r712642_fix'\n  tag 'documentable'\n  tag cci: ['CCI-001184']\n  tag nist: ['SC-23']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242429.rb"},"title":"Kubernetes etcd must have the SSL Certificate Authority set.","desc":"Kubernetes stores configuration and state information in a distributed key-value store called etcd. Anyone who can write to etcd can effectively control a Kubernetes cluster. Even just reading the contents of etcd could easily provide helpful hints to a would-be attacker. Using authenticity protection, the communication can be protected against man-in-the-middle attacks/session hijacking and the insertion of false information into sessions.\n\nThe communication session is protected by utilizing transport encryption protocols, such as TLS. TLS provides the Kubernetes API Server and etcd with a means to be able to authenticate sessions and encrypt traffic. \n\nTo enable encrypted communication for etcd, the parameter etcd-cafile must be set. This parameter gives the location of the SSL Certificate Authority file used to secure etcd communication.","descriptions":{"default":"Kubernetes stores configuration and state information in a distributed key-value store called etcd. Anyone who can write to etcd can effectively control a Kubernetes cluster. Even just reading the contents of etcd could easily provide helpful hints to a would-be attacker. Using authenticity protection, the communication can be protected against man-in-the-middle attacks/session hijacking and the insertion of false information into sessions.\n\nThe communication session is protected by utilizing transport encryption protocols, such as TLS. TLS provides the Kubernetes API Server and etcd with a means to be able to authenticate sessions and encrypt traffic. \n\nTo enable encrypted communication for etcd, the parameter etcd-cafile must be set. This parameter gives the location of the SSL Certificate Authority file used to secure etcd communication.","check":"Change to the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Run the command:\n\ngrep -i etcd-cafile * \n\nIf the setting \"etcd-cafile\" is not configured in the Kubernetes API Server manifest file, this is a finding.","fix":"Edit the Kubernetes API Server manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Set the value of \"--etcd-cafile\" to the Certificate Authority for etcd."},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45704r712641_chk","severity":"medium","gid":"V-242429","rid":"SV-242429r712643_rule","stig_id":"CNTR-K8-001510","gtitle":"SRG-APP-000219-CTR-000550","fix_id":"F-45662r712642_fix","documentable":null,"cci":["CCI-001184"],"nist":["SC-23"]}},{"id":"SV-242430","code":"control 'SV-242430' do\n  title 'Kubernetes etcd must have a certificate for communication.'\n  desc 'Kubernetes stores configuration and state information in a distributed key-value store called etcd. Anyone who can write to etcd can effectively control your Kubernetes cluster. Even just reading the contents of etcd could easily provide helpful hints to a would-be attacker. Using authenticity protection, the communication can be protected against man-in-the-middle attacks/session hijacking and the insertion of false information into sessions.\n\nThe communication session is protected by utilizing transport encryption protocols, such as TLS. TLS provides the Kubernetes API Server and etcd with a means to be able to authenticate sessions and encrypt traffic. \n\nTo enable encrypted communication for etcd, the parameter etcd-certfile must be set. This parameter gives the location of the SSL certification file used to secure etcd communication.'\n  desc 'check', 'Change to the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Run the command:\n\ngrep -i etcd-certfile * \n\nIf the setting \"etcd-certfile\" is not set in the Kubernetes API Server manifest file, this is a finding.'\n  desc 'fix', 'Edit the Kubernetes API Server manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Set the value of \"--etcd-certfile\" to the certificate to be used for communication with etcd.'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45705r712644_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242430'\n  tag rid: 'SV-242430r712646_rule'\n  tag stig_id: 'CNTR-K8-001520'\n  tag gtitle: 'SRG-APP-000219-CTR-000550'\n  tag fix_id: 'F-45663r712645_fix'\n  tag 'documentable'\n  tag cci: ['CCI-001184']\n  tag nist: ['SC-23']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242430.rb"},"title":"Kubernetes etcd must have a certificate for communication.","desc":"Kubernetes stores configuration and state information in a distributed key-value store called etcd. Anyone who can write to etcd can effectively control your Kubernetes cluster. Even just reading the contents of etcd could easily provide helpful hints to a would-be attacker. Using authenticity protection, the communication can be protected against man-in-the-middle attacks/session hijacking and the insertion of false information into sessions.\n\nThe communication session is protected by utilizing transport encryption protocols, such as TLS. TLS provides the Kubernetes API Server and etcd with a means to be able to authenticate sessions and encrypt traffic. \n\nTo enable encrypted communication for etcd, the parameter etcd-certfile must be set. This parameter gives the location of the SSL certification file used to secure etcd communication.","descriptions":{"default":"Kubernetes stores configuration and state information in a distributed key-value store called etcd. Anyone who can write to etcd can effectively control your Kubernetes cluster. Even just reading the contents of etcd could easily provide helpful hints to a would-be attacker. Using authenticity protection, the communication can be protected against man-in-the-middle attacks/session hijacking and the insertion of false information into sessions.\n\nThe communication session is protected by utilizing transport encryption protocols, such as TLS. TLS provides the Kubernetes API Server and etcd with a means to be able to authenticate sessions and encrypt traffic. \n\nTo enable encrypted communication for etcd, the parameter etcd-certfile must be set. This parameter gives the location of the SSL certification file used to secure etcd communication.","check":"Change to the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Run the command:\n\ngrep -i etcd-certfile * \n\nIf the setting \"etcd-certfile\" is not set in the Kubernetes API Server manifest file, this is a finding.","fix":"Edit the Kubernetes API Server manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Set the value of \"--etcd-certfile\" to the certificate to be used for communication with etcd."},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45705r712644_chk","severity":"medium","gid":"V-242430","rid":"SV-242430r712646_rule","stig_id":"CNTR-K8-001520","gtitle":"SRG-APP-000219-CTR-000550","fix_id":"F-45663r712645_fix","documentable":null,"cci":["CCI-001184"],"nist":["SC-23"]}},{"id":"SV-242431","code":"control 'SV-242431' do\n  title 'Kubernetes etcd must have a key file for secure communication.'\n  desc 'Kubernetes stores configuration and state information in a distributed key-value store called etcd. Anyone who can write to etcd can effectively control a Kubernetes cluster. Even just reading the contents of etcd could easily provide helpful hints to a would-be attacker. Using authenticity protection, the communication can be protected against man-in-the-middle attacks/session hijacking and the insertion of false information into sessions.\n\nThe communication session is protected by utilizing transport encryption protocols, such as TLS. TLS provides the Kubernetes API Server and etcd with a means to be able to authenticate sessions and encrypt traffic. \n\nTo enable encrypted communication for etcd, the parameter etcd-keyfile must be set. This parameter gives the location of the key file used to secure etcd communication.'\n  desc 'check', 'Change to the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Run the command:\n\ngrep -i etcd-keyfile * \n\nIf the setting \"etcd-keyfile\" is not configured in the Kubernetes API Server manifest file, this is a finding.'\n  desc 'fix', 'Edit the Kubernetes API Server manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Set the value of \"--etcd-keyfile\" to the certificate to be used for communication with etcd.'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45706r712647_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242431'\n  tag rid: 'SV-242431r712649_rule'\n  tag stig_id: 'CNTR-K8-001530'\n  tag gtitle: 'SRG-APP-000219-CTR-000550'\n  tag fix_id: 'F-45664r712648_fix'\n  tag 'documentable'\n  tag cci: ['CCI-001184']\n  tag nist: ['SC-23']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242431.rb"},"title":"Kubernetes etcd must have a key file for secure communication.","desc":"Kubernetes stores configuration and state information in a distributed key-value store called etcd. Anyone who can write to etcd can effectively control a Kubernetes cluster. Even just reading the contents of etcd could easily provide helpful hints to a would-be attacker. Using authenticity protection, the communication can be protected against man-in-the-middle attacks/session hijacking and the insertion of false information into sessions.\n\nThe communication session is protected by utilizing transport encryption protocols, such as TLS. TLS provides the Kubernetes API Server and etcd with a means to be able to authenticate sessions and encrypt traffic. \n\nTo enable encrypted communication for etcd, the parameter etcd-keyfile must be set. This parameter gives the location of the key file used to secure etcd communication.","descriptions":{"default":"Kubernetes stores configuration and state information in a distributed key-value store called etcd. Anyone who can write to etcd can effectively control a Kubernetes cluster. Even just reading the contents of etcd could easily provide helpful hints to a would-be attacker. Using authenticity protection, the communication can be protected against man-in-the-middle attacks/session hijacking and the insertion of false information into sessions.\n\nThe communication session is protected by utilizing transport encryption protocols, such as TLS. TLS provides the Kubernetes API Server and etcd with a means to be able to authenticate sessions and encrypt traffic. \n\nTo enable encrypted communication for etcd, the parameter etcd-keyfile must be set. This parameter gives the location of the key file used to secure etcd communication.","check":"Change to the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Run the command:\n\ngrep -i etcd-keyfile * \n\nIf the setting \"etcd-keyfile\" is not configured in the Kubernetes API Server manifest file, this is a finding.","fix":"Edit the Kubernetes API Server manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Set the value of \"--etcd-keyfile\" to the certificate to be used for communication with etcd."},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45706r712647_chk","severity":"medium","gid":"V-242431","rid":"SV-242431r712649_rule","stig_id":"CNTR-K8-001530","gtitle":"SRG-APP-000219-CTR-000550","fix_id":"F-45664r712648_fix","documentable":null,"cci":["CCI-001184"],"nist":["SC-23"]}},{"id":"SV-242432","code":"control 'SV-242432' do\n  title 'Kubernetes etcd must have peer-cert-file set for secure communication.'\n  desc 'Kubernetes stores configuration and state information in a distributed key-value store called etcd. Anyone who can write to etcd can effectively control the Kubernetes cluster. Even just reading the contents of etcd could easily provide helpful hints to a would-be attacker. Using authenticity protection, the communication can be protected against man-in-the-middle attacks/session hijacking and the insertion of false information into sessions.\n\nThe communication session is protected by utilizing transport encryption protocols, such as TLS. TLS provides the Kubernetes API Server and etcd with a means to be able to authenticate sessions and encrypt traffic. \n\nTo enable encrypted communication for etcd, the parameter etcd-certfile must be set. This parameter gives the location of the SSL certification file used to secure etcd communication.'\n  desc 'check', 'Change to the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Run the command:\n\ngrep -i peer-cert-file * \n\nIf the setting \"peer-cert-file\" is not configured in the Kubernetes etcd manifest file, this is a finding.'\n  desc 'fix', 'Edit the Kubernetes etcd manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Set the value of \"--peer-cert-file\" to the certificate to be used for communication with etcd.'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45707r712650_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242432'\n  tag rid: 'SV-242432r712652_rule'\n  tag stig_id: 'CNTR-K8-001540'\n  tag gtitle: 'SRG-APP-000219-CTR-000550'\n  tag fix_id: 'F-45665r712651_fix'\n  tag 'documentable'\n  tag cci: ['CCI-001184']\n  tag nist: ['SC-23']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242432.rb"},"title":"Kubernetes etcd must have peer-cert-file set for secure communication.","desc":"Kubernetes stores configuration and state information in a distributed key-value store called etcd. Anyone who can write to etcd can effectively control the Kubernetes cluster. Even just reading the contents of etcd could easily provide helpful hints to a would-be attacker. Using authenticity protection, the communication can be protected against man-in-the-middle attacks/session hijacking and the insertion of false information into sessions.\n\nThe communication session is protected by utilizing transport encryption protocols, such as TLS. TLS provides the Kubernetes API Server and etcd with a means to be able to authenticate sessions and encrypt traffic. \n\nTo enable encrypted communication for etcd, the parameter etcd-certfile must be set. This parameter gives the location of the SSL certification file used to secure etcd communication.","descriptions":{"default":"Kubernetes stores configuration and state information in a distributed key-value store called etcd. Anyone who can write to etcd can effectively control the Kubernetes cluster. Even just reading the contents of etcd could easily provide helpful hints to a would-be attacker. Using authenticity protection, the communication can be protected against man-in-the-middle attacks/session hijacking and the insertion of false information into sessions.\n\nThe communication session is protected by utilizing transport encryption protocols, such as TLS. TLS provides the Kubernetes API Server and etcd with a means to be able to authenticate sessions and encrypt traffic. \n\nTo enable encrypted communication for etcd, the parameter etcd-certfile must be set. This parameter gives the location of the SSL certification file used to secure etcd communication.","check":"Change to the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Run the command:\n\ngrep -i peer-cert-file * \n\nIf the setting \"peer-cert-file\" is not configured in the Kubernetes etcd manifest file, this is a finding.","fix":"Edit the Kubernetes etcd manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Set the value of \"--peer-cert-file\" to the certificate to be used for communication with etcd."},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45707r712650_chk","severity":"medium","gid":"V-242432","rid":"SV-242432r712652_rule","stig_id":"CNTR-K8-001540","gtitle":"SRG-APP-000219-CTR-000550","fix_id":"F-45665r712651_fix","documentable":null,"cci":["CCI-001184"],"nist":["SC-23"]}},{"id":"SV-242433","code":"control 'SV-242433' do\n  title 'Kubernetes etcd must have a peer-key-file set for secure communication.'\n  desc 'Kubernetes stores configuration and state information in a distributed key-value store called etcd. Anyone who can write to etcd can effectively control a Kubernetes cluster. Even just reading the contents of etcd could easily provide helpful hints to a would-be attacker. Using authenticity protection, the communication can be protected against man-in-the-middle attacks/session hijacking and the insertion of false information into sessions.\n\nThe communication session is protected by utilizing transport encryption protocols, such as TLS. TLS provides the Kubernetes API Server and etcd with a means to be able to authenticate sessions and encrypt traffic. \n\nTo enable encrypted communication for etcd, the parameter etcd-certfile must be set. This parameter gives the location of the SSL certification file used to secure etcd communication.'\n  desc 'check', 'Change to the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Run the command:\n\ngrep -i peer-key-file *\n\nIf the setting \"peer-key-file\" is not set in the Kubernetes etcd manifest file, this is a finding.'\n  desc 'fix', 'Edit the Kubernetes etcd manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Set the value of \"--peer-key-file\" to the certificate to be used for communication with etcd.'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45708r712653_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242433'\n  tag rid: 'SV-242433r712655_rule'\n  tag stig_id: 'CNTR-K8-001550'\n  tag gtitle: 'SRG-APP-000219-CTR-000550'\n  tag fix_id: 'F-45666r712654_fix'\n  tag 'documentable'\n  tag cci: ['CCI-001184']\n  tag nist: ['SC-23']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242433.rb"},"title":"Kubernetes etcd must have a peer-key-file set for secure communication.","desc":"Kubernetes stores configuration and state information in a distributed key-value store called etcd. Anyone who can write to etcd can effectively control a Kubernetes cluster. Even just reading the contents of etcd could easily provide helpful hints to a would-be attacker. Using authenticity protection, the communication can be protected against man-in-the-middle attacks/session hijacking and the insertion of false information into sessions.\n\nThe communication session is protected by utilizing transport encryption protocols, such as TLS. TLS provides the Kubernetes API Server and etcd with a means to be able to authenticate sessions and encrypt traffic. \n\nTo enable encrypted communication for etcd, the parameter etcd-certfile must be set. This parameter gives the location of the SSL certification file used to secure etcd communication.","descriptions":{"default":"Kubernetes stores configuration and state information in a distributed key-value store called etcd. Anyone who can write to etcd can effectively control a Kubernetes cluster. Even just reading the contents of etcd could easily provide helpful hints to a would-be attacker. Using authenticity protection, the communication can be protected against man-in-the-middle attacks/session hijacking and the insertion of false information into sessions.\n\nThe communication session is protected by utilizing transport encryption protocols, such as TLS. TLS provides the Kubernetes API Server and etcd with a means to be able to authenticate sessions and encrypt traffic. \n\nTo enable encrypted communication for etcd, the parameter etcd-certfile must be set. This parameter gives the location of the SSL certification file used to secure etcd communication.","check":"Change to the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Run the command:\n\ngrep -i peer-key-file *\n\nIf the setting \"peer-key-file\" is not set in the Kubernetes etcd manifest file, this is a finding.","fix":"Edit the Kubernetes etcd manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Set the value of \"--peer-key-file\" to the certificate to be used for communication with etcd."},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45708r712653_chk","severity":"medium","gid":"V-242433","rid":"SV-242433r712655_rule","stig_id":"CNTR-K8-001550","gtitle":"SRG-APP-000219-CTR-000550","fix_id":"F-45666r712654_fix","documentable":null,"cci":["CCI-001184"],"nist":["SC-23"]}},{"id":"SV-242434","code":"control 'SV-242434' do\n  title 'Kubernetes Kubelet must enable kernel protection.'\n  desc 'System kernel is responsible for memory, disk, and task management. The kernel provides a gateway between the system hardware and software. Kubernetes requires kernel access to allocate resources to the Control Plane. Threat actors that penetrate the system kernel can inject malicious code or hijack the Kubernetes architecture. It is vital to implement protections through Kubernetes components to reduce the attack surface.'\n  desc 'check', 'Change to the /etc/sysconfig/ directory on the Kubernetes Master Node. Run the command:\n\ngrep -i protect-kernel-defaults kubelet  \n\nIf the setting \"protect-kernel-defaults\" is set to false or not set in the Kubernetes Kubelet, this is a finding.'\n  desc 'fix', 'Edit the Kubernetes Kuberlet file in the /etc/sysconfig directory on the Kubernetes Master Node. Set the argument \"--protect-kernel-defaults\" to \"true\". \n\nReset Kubelet service using the following command:\n\nservice kubelet restart'\n  impact 0.7\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45709r712656_chk'\n  tag severity: 'high'\n  tag gid: 'V-242434'\n  tag rid: 'SV-242434r712658_rule'\n  tag stig_id: 'CNTR-K8-001620'\n  tag gtitle: 'SRG-APP-000233-CTR-000585'\n  tag fix_id: 'F-45667r712657_fix'\n  tag 'documentable'\n  tag cci: ['CCI-001084']\n  tag nist: ['SC-3']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242434.rb"},"title":"Kubernetes Kubelet must enable kernel protection.","desc":"System kernel is responsible for memory, disk, and task management. The kernel provides a gateway between the system hardware and software. Kubernetes requires kernel access to allocate resources to the Control Plane. Threat actors that penetrate the system kernel can inject malicious code or hijack the Kubernetes architecture. It is vital to implement protections through Kubernetes components to reduce the attack surface.","descriptions":{"default":"System kernel is responsible for memory, disk, and task management. The kernel provides a gateway between the system hardware and software. Kubernetes requires kernel access to allocate resources to the Control Plane. Threat actors that penetrate the system kernel can inject malicious code or hijack the Kubernetes architecture. It is vital to implement protections through Kubernetes components to reduce the attack surface.","check":"Change to the /etc/sysconfig/ directory on the Kubernetes Master Node. Run the command:\n\ngrep -i protect-kernel-defaults kubelet  \n\nIf the setting \"protect-kernel-defaults\" is set to false or not set in the Kubernetes Kubelet, this is a finding.","fix":"Edit the Kubernetes Kuberlet file in the /etc/sysconfig directory on the Kubernetes Master Node. Set the argument \"--protect-kernel-defaults\" to \"true\". \n\nReset Kubelet service using the following command:\n\nservice kubelet restart"},"impact":0.7,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45709r712656_chk","severity":"high","gid":"V-242434","rid":"SV-242434r712658_rule","stig_id":"CNTR-K8-001620","gtitle":"SRG-APP-000233-CTR-000585","fix_id":"F-45667r712657_fix","documentable":null,"cci":["CCI-001084"],"nist":["SC-3"]}},{"id":"SV-242435","code":"control 'SV-242435' do\n  title 'Kubernetes must prevent non-privileged users from executing privileged functions to include disabling, circumventing, or altering implemented security safeguards/countermeasures or the installation of patches and updates.'\n  desc 'Kubernetes uses the API Server to control communication to the other services that makeup Kubernetes. The use of authorizations and not the default of \"AlwaysAllow\" enables the Kubernetes functions control to only the groups that need them.\n\nTo control access the API server must have one of the following options set for the authorization mode:\n    --authorization-mode=ABAC Attribute-Based Access Control (ABAC) mode allows a user to configure policies using local files.\n    --authorization-mode=RBAC Role-based access control (RBAC) mode allows a user to create and store policies using the Kubernetes API.\n    --authorization-mode=Webhook\n \nWebHook is an HTTP callback mode that allows a user to manage authorization using a remote REST endpoint.\n    --authorization-mode=Node\n\nNode authorization is a special-purpose authorization mode that specifically authorizes API requests made by kubelets.\n    --authorization-mode=AlwaysDeny \n\nThis flag blocks all requests. Use this flag only for testing.\n\n'\n  desc 'check', 'Change to the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Run the command:\n\ngrep -i authorization-mode * \n\nIf the setting authorization-mode is set to \"AlwaysAllow\" in the Kubernetes API Server manifest file or is not configured, this is a finding.'\n  desc 'fix', 'Edit the Kubernetes API Server manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Set the argument \"--authorization-mode\" to any valid authorization mode other than AlwaysAllow.'\n  impact 0.7\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45710r712659_chk'\n  tag severity: 'high'\n  tag gid: 'V-242435'\n  tag rid: 'SV-242435r712661_rule'\n  tag stig_id: 'CNTR-K8-001990'\n  tag gtitle: 'SRG-APP-000340-CTR-000770'\n  tag fix_id: 'F-45668r712660_fix'\n  tag satisfies: ['SRG-APP-000340-CTR-000770', 'SRG-APP-000033-CTR-000095', 'SRG-APP-000378-CTR-000880']\n  tag 'documentable'\n  tag cci: ['CCI-000213', 'CCI-001812', 'CCI-002235']\n  tag nist: ['AC-3', 'CM-11 (2)', 'AC-6 (10)']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242435.rb"},"title":"Kubernetes must prevent non-privileged users from executing privileged functions to include disabling, circumventing, or altering implemented security safeguards/countermeasures or the installation of patches and updates.","desc":"Kubernetes uses the API Server to control communication to the other services that makeup Kubernetes. The use of authorizations and not the default of \"AlwaysAllow\" enables the Kubernetes functions control to only the groups that need them.\n\nTo control access the API server must have one of the following options set for the authorization mode:\n    --authorization-mode=ABAC Attribute-Based Access Control (ABAC) mode allows a user to configure policies using local files.\n    --authorization-mode=RBAC Role-based access control (RBAC) mode allows a user to create and store policies using the Kubernetes API.\n    --authorization-mode=Webhook\n \nWebHook is an HTTP callback mode that allows a user to manage authorization using a remote REST endpoint.\n    --authorization-mode=Node\n\nNode authorization is a special-purpose authorization mode that specifically authorizes API requests made by kubelets.\n    --authorization-mode=AlwaysDeny \n\nThis flag blocks all requests. Use this flag only for testing.\n\n","descriptions":{"default":"Kubernetes uses the API Server to control communication to the other services that makeup Kubernetes. The use of authorizations and not the default of \"AlwaysAllow\" enables the Kubernetes functions control to only the groups that need them.\n\nTo control access the API server must have one of the following options set for the authorization mode:\n    --authorization-mode=ABAC Attribute-Based Access Control (ABAC) mode allows a user to configure policies using local files.\n    --authorization-mode=RBAC Role-based access control (RBAC) mode allows a user to create and store policies using the Kubernetes API.\n    --authorization-mode=Webhook\n \nWebHook is an HTTP callback mode that allows a user to manage authorization using a remote REST endpoint.\n    --authorization-mode=Node\n\nNode authorization is a special-purpose authorization mode that specifically authorizes API requests made by kubelets.\n    --authorization-mode=AlwaysDeny \n\nThis flag blocks all requests. Use this flag only for testing.\n\n","check":"Change to the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Run the command:\n\ngrep -i authorization-mode * \n\nIf the setting authorization-mode is set to \"AlwaysAllow\" in the Kubernetes API Server manifest file or is not configured, this is a finding.","fix":"Edit the Kubernetes API Server manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Set the argument \"--authorization-mode\" to any valid authorization mode other than AlwaysAllow."},"impact":0.7,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45710r712659_chk","severity":"high","gid":"V-242435","rid":"SV-242435r712661_rule","stig_id":"CNTR-K8-001990","gtitle":"SRG-APP-000340-CTR-000770","fix_id":"F-45668r712660_fix","satisfies":["SRG-APP-000340-CTR-000770","SRG-APP-000033-CTR-000095","SRG-APP-000378-CTR-000880"],"documentable":null,"cci":["CCI-000213","CCI-001812","CCI-002235"],"nist":["AC-3","CM-11 (2)","AC-6 (10)"]}},{"id":"SV-242436","code":"control 'SV-242436' do\n  title 'The Kubernetes API server must have the ValidatingAdmissionWebhook enabled.'\n  desc 'Enabling the admissions webhook allows for Kubernetes to apply policies against objects that are to be created, read, updated, or deleted. By applying a pod security policy, control can be given to not allow images to be instantiated that run as the root user. If pods run as the root user, the pod then has root privileges to the host system and all the resources it has. An attacker can use this to attack the Kubernetes cluster. By implementing a policy that does not allow root or privileged pods, the pod users are limited in what the pod can do and access.'\n  desc 'check', 'Change to the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Run the command:\n\ngrep -i ValidatingAdmissionWebhook * \n\nIf a line is not returned that includes enable-admission-plugins and ValidatingAdmissionWebhook, this is a finding.'\n  desc 'fix', 'Edit the Kubernetes API Server manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Set the argument \"--enable-admission-plugins\" to include \"ValidatingAdmissionWebhook\".  Each enabled plugin is separated by commas.\n\nNote: It is best to implement policies first and then enable the webhook, otherwise a denial of service may occur.'\n  impact 0.7\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45711r712662_chk'\n  tag severity: 'high'\n  tag gid: 'V-242436'\n  tag rid: 'SV-242436r712664_rule'\n  tag stig_id: 'CNTR-K8-002000'\n  tag gtitle: 'SRG-APP-000342-CTR-000775'\n  tag fix_id: 'F-45669r717027_fix'\n  tag 'documentable'\n  tag cci: ['CCI-002233']\n  tag nist: ['AC-6 (8)']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242436.rb"},"title":"The Kubernetes API server must have the ValidatingAdmissionWebhook enabled.","desc":"Enabling the admissions webhook allows for Kubernetes to apply policies against objects that are to be created, read, updated, or deleted. By applying a pod security policy, control can be given to not allow images to be instantiated that run as the root user. If pods run as the root user, the pod then has root privileges to the host system and all the resources it has. An attacker can use this to attack the Kubernetes cluster. By implementing a policy that does not allow root or privileged pods, the pod users are limited in what the pod can do and access.","descriptions":{"default":"Enabling the admissions webhook allows for Kubernetes to apply policies against objects that are to be created, read, updated, or deleted. By applying a pod security policy, control can be given to not allow images to be instantiated that run as the root user. If pods run as the root user, the pod then has root privileges to the host system and all the resources it has. An attacker can use this to attack the Kubernetes cluster. By implementing a policy that does not allow root or privileged pods, the pod users are limited in what the pod can do and access.","check":"Change to the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Run the command:\n\ngrep -i ValidatingAdmissionWebhook * \n\nIf a line is not returned that includes enable-admission-plugins and ValidatingAdmissionWebhook, this is a finding.","fix":"Edit the Kubernetes API Server manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Set the argument \"--enable-admission-plugins\" to include \"ValidatingAdmissionWebhook\".  Each enabled plugin is separated by commas.\n\nNote: It is best to implement policies first and then enable the webhook, otherwise a denial of service may occur."},"impact":0.7,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45711r712662_chk","severity":"high","gid":"V-242436","rid":"SV-242436r712664_rule","stig_id":"CNTR-K8-002000","gtitle":"SRG-APP-000342-CTR-000775","fix_id":"F-45669r717027_fix","documentable":null,"cci":["CCI-002233"],"nist":["AC-6 (8)"]}},{"id":"SV-242437","code":"control 'SV-242437' do\n  title 'Kubernetes must have a pod security policy set.'\n  desc 'Enabling the admissions webhook allows for Kubernetes to apply policies against objects that are to be created, read, updated, or deleted. By applying a pod security policy, control can be given to not allow images to be instantiated that run as the root user. If pods run as the root user, the pod then has root privileges to the host system and all the resources it has. An attacker can use this to attack the Kubernetes cluster. By implementing a policy that does not allow root or privileged pods, the pod users are limited in what the pod can do and access.'\n  desc 'check', 'On the Master Node, run the command:\n\nkubectl get podsecuritypolicy\n\nIf there is no pod security policy configured, this is a finding. \n\nFor any pod security policies listed, edit the policy with the command:\n\nkubectl edit podsecuritypolicy policyname\n(Note: \"policyname\" is the name of the policy.)\n\nReview the runAsUser, supplementalGroups and fsGroup sections of the policy.\n\nIf any of these sections are missing, this is a finding.\n\nIf the rule within the runAsUser section is not set to \"MustRunAsNonRoot\", this is a finding.\n\nIf the ranges within the supplementalGroups section has min set to \"0\" or min is missing, this is a finding.\n\nIf the ranges within the fsGroup section has a min set to \"0\" or the min is missing, this is a finding.'\n  desc 'fix', \"From the Master node, save the following policy to a file called restricted.yml.\n\napiVersion: policy/v1beta1\nkind: PodSecurityPolicy\nmetadata:\n  name: restricted\n  annotations:\n    seccomp.security.alpha.kubernetes.io/allowedProfileNames: 'docker/default,\n    apparmor.security.beta.kubernetes.io/allowedProfileNames: 'runtime/default'\n    seccomp.security.alpha.kubernetes.io/defaultProfileName:  'runtime/default'\n    apparmor.security.beta.kubernetes.io/defaultProfileName:  'runtime/default'\nspec:\n  privileged: false\n  # Required to prevent escalations to root.\n  allowPrivilegeEscalation: false\n  # This is redundant with non-root + disallow privilege escalation,\n  # but we can provide it for defense in depth.\n  requiredDropCapabilities:\n    - ALL\n  # Allow core volume types.\n  volumes:\n    - 'configMap'\n    - 'emptyDir'\n    - 'projected'\n    - 'secret'\n    - 'downwardAPI'\n    # Assume that persistentVolumes set up by the cluster admin are safe to use.\n    - 'persistentVolumeClaim'\n  hostNetwork: false\n  hostIPC: false\n  hostPID: false\n  runAsUser:\n    # Require the container to run without root privileges.\n    rule: 'MustRunAsNonRoot'\n  seLinux:\n    # This policy assumes the nodes are using AppArmor rather than SELinux.\n    rule: 'RunAsAny'\n  supplementalGroups:\n    rule: 'MustRunAs'\n    ranges:\n      # Forbid adding the root group.\n      - min: 1\n        max: 65535\n  fsGroup:\n    rule: 'MustRunAs'\n    ranges:\n      # Forbid adding the root group.\n      - min: 1\n        max: 65535\n  readOnlyRootFilesystem: false\n\nTo implement the policy, run the command:\n\nkubectl create -f restricted.yml\"\n  impact 0.7\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45712r712665_chk'\n  tag severity: 'high'\n  tag gid: 'V-242437'\n  tag rid: 'SV-242437r712667_rule'\n  tag stig_id: 'CNTR-K8-002010'\n  tag gtitle: 'SRG-APP-000342-CTR-000775'\n  tag fix_id: 'F-45670r717028_fix'\n  tag 'documentable'\n  tag cci: ['CCI-002233']\n  tag nist: ['AC-6 (8)']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242437.rb"},"title":"Kubernetes must have a pod security policy set.","desc":"Enabling the admissions webhook allows for Kubernetes to apply policies against objects that are to be created, read, updated, or deleted. By applying a pod security policy, control can be given to not allow images to be instantiated that run as the root user. If pods run as the root user, the pod then has root privileges to the host system and all the resources it has. An attacker can use this to attack the Kubernetes cluster. By implementing a policy that does not allow root or privileged pods, the pod users are limited in what the pod can do and access.","descriptions":{"default":"Enabling the admissions webhook allows for Kubernetes to apply policies against objects that are to be created, read, updated, or deleted. By applying a pod security policy, control can be given to not allow images to be instantiated that run as the root user. If pods run as the root user, the pod then has root privileges to the host system and all the resources it has. An attacker can use this to attack the Kubernetes cluster. By implementing a policy that does not allow root or privileged pods, the pod users are limited in what the pod can do and access.","check":"On the Master Node, run the command:\n\nkubectl get podsecuritypolicy\n\nIf there is no pod security policy configured, this is a finding. \n\nFor any pod security policies listed, edit the policy with the command:\n\nkubectl edit podsecuritypolicy policyname\n(Note: \"policyname\" is the name of the policy.)\n\nReview the runAsUser, supplementalGroups and fsGroup sections of the policy.\n\nIf any of these sections are missing, this is a finding.\n\nIf the rule within the runAsUser section is not set to \"MustRunAsNonRoot\", this is a finding.\n\nIf the ranges within the supplementalGroups section has min set to \"0\" or min is missing, this is a finding.\n\nIf the ranges within the fsGroup section has a min set to \"0\" or the min is missing, this is a finding.","fix":"From the Master node, save the following policy to a file called restricted.yml.\n\napiVersion: policy/v1beta1\nkind: PodSecurityPolicy\nmetadata:\n  name: restricted\n  annotations:\n    seccomp.security.alpha.kubernetes.io/allowedProfileNames: 'docker/default,\n    apparmor.security.beta.kubernetes.io/allowedProfileNames: 'runtime/default'\n    seccomp.security.alpha.kubernetes.io/defaultProfileName:  'runtime/default'\n    apparmor.security.beta.kubernetes.io/defaultProfileName:  'runtime/default'\nspec:\n  privileged: false\n  # Required to prevent escalations to root.\n  allowPrivilegeEscalation: false\n  # This is redundant with non-root + disallow privilege escalation,\n  # but we can provide it for defense in depth.\n  requiredDropCapabilities:\n    - ALL\n  # Allow core volume types.\n  volumes:\n    - 'configMap'\n    - 'emptyDir'\n    - 'projected'\n    - 'secret'\n    - 'downwardAPI'\n    # Assume that persistentVolumes set up by the cluster admin are safe to use.\n    - 'persistentVolumeClaim'\n  hostNetwork: false\n  hostIPC: false\n  hostPID: false\n  runAsUser:\n    # Require the container to run without root privileges.\n    rule: 'MustRunAsNonRoot'\n  seLinux:\n    # This policy assumes the nodes are using AppArmor rather than SELinux.\n    rule: 'RunAsAny'\n  supplementalGroups:\n    rule: 'MustRunAs'\n    ranges:\n      # Forbid adding the root group.\n      - min: 1\n        max: 65535\n  fsGroup:\n    rule: 'MustRunAs'\n    ranges:\n      # Forbid adding the root group.\n      - min: 1\n        max: 65535\n  readOnlyRootFilesystem: false\n\nTo implement the policy, run the command:\n\nkubectl create -f restricted.yml"},"impact":0.7,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45712r712665_chk","severity":"high","gid":"V-242437","rid":"SV-242437r712667_rule","stig_id":"CNTR-K8-002010","gtitle":"SRG-APP-000342-CTR-000775","fix_id":"F-45670r717028_fix","documentable":null,"cci":["CCI-002233"],"nist":["AC-6 (8)"]}},{"id":"SV-242438","code":"control 'SV-242438' do\n  title 'Kubernetes API Server must configure timeouts to limit attack surface.'\n  desc 'Kubernetes API Server request timeouts sets the duration a request stays open before timing out. Since the API Server is the central component in the Kubernetes Control Plane, it is vital to protect this service. If request timeouts were not set, malicious attacks or unwanted activities might affect multiple deployments across different applications or environments. This might deplete all resources from the Kubernetes infrastructure causing the information system to go offline. The request-timeout value must never be set to \"0\". This disables the request-timeout feature. By default, the request-timeout is set to \"1 minute\".'\n  desc 'check', 'Change to the /etc/kubernetes/manifests/ directory on the Kubernetes Master Node. Run the command:\n\ngrep -I request-timeout * \n\nIf Kubernetes API Server manifest file does not exist, this is a finding. \n\nIf the setting request-timeout is set to \"0\" in the Kubernetes API Server manifest file, or is not configured this is a finding.'\n  desc 'fix', 'Edit the Kubernetes API Server manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Set the value of request-timeout greater than \"0\".'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45713r712668_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242438'\n  tag rid: 'SV-242438r712670_rule'\n  tag stig_id: 'CNTR-K8-002600'\n  tag gtitle: 'SRG-APP-000435-CTR-001070'\n  tag fix_id: 'F-45671r712669_fix'\n  tag 'documentable'\n  tag cci: ['CCI-002385']\n  tag nist: ['SC-5 a']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242438.rb"},"title":"Kubernetes API Server must configure timeouts to limit attack surface.","desc":"Kubernetes API Server request timeouts sets the duration a request stays open before timing out. Since the API Server is the central component in the Kubernetes Control Plane, it is vital to protect this service. If request timeouts were not set, malicious attacks or unwanted activities might affect multiple deployments across different applications or environments. This might deplete all resources from the Kubernetes infrastructure causing the information system to go offline. The request-timeout value must never be set to \"0\". This disables the request-timeout feature. By default, the request-timeout is set to \"1 minute\".","descriptions":{"default":"Kubernetes API Server request timeouts sets the duration a request stays open before timing out. Since the API Server is the central component in the Kubernetes Control Plane, it is vital to protect this service. If request timeouts were not set, malicious attacks or unwanted activities might affect multiple deployments across different applications or environments. This might deplete all resources from the Kubernetes infrastructure causing the information system to go offline. The request-timeout value must never be set to \"0\". This disables the request-timeout feature. By default, the request-timeout is set to \"1 minute\".","check":"Change to the /etc/kubernetes/manifests/ directory on the Kubernetes Master Node. Run the command:\n\ngrep -I request-timeout * \n\nIf Kubernetes API Server manifest file does not exist, this is a finding. \n\nIf the setting request-timeout is set to \"0\" in the Kubernetes API Server manifest file, or is not configured this is a finding.","fix":"Edit the Kubernetes API Server manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Set the value of request-timeout greater than \"0\"."},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45713r712668_chk","severity":"medium","gid":"V-242438","rid":"SV-242438r712670_rule","stig_id":"CNTR-K8-002600","gtitle":"SRG-APP-000435-CTR-001070","fix_id":"F-45671r712669_fix","documentable":null,"cci":["CCI-002385"],"nist":["SC-5 a"]}},{"id":"SV-242439","code":"control 'SV-242439' do\n  title 'Kubernetes API Server must disable basic authentication to protect information in transit.'\n  desc 'Kubernetes basic authentication sends and receives request containing username, uid, groups, and other fields over a clear text HTTP communication. Basic authentication does not provide any security mechanisms using encryption standards. PKI certificate-based authentication must be set over a secure channel to ensure confidentiality and integrity. Basic authentication must not be set in the manifest file.'\n  desc 'check', 'Change to the /etc/kubernetes/manifests/ directory on the Kubernetes Master Node. Run the command:\n\ngrep -i basic-auth-file * \n\nIf \"basic-auth-file\" is set in the Kubernetes API server manifest file, or is not configured this is a finding.'\n  desc 'fix', 'Edit the Kubernetes API Server manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Remove the setting \"--basic-auth-file\".'\n  impact 0.7\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45714r712671_chk'\n  tag severity: 'high'\n  tag gid: 'V-242439'\n  tag rid: 'SV-242439r712673_rule'\n  tag stig_id: 'CNTR-K8-002620'\n  tag gtitle: 'SRG-APP-000516-CTR-001325'\n  tag fix_id: 'F-45672r712672_fix'\n  tag 'documentable'\n  tag cci: ['CCI-002418']\n  tag nist: ['SC-8']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242439.rb"},"title":"Kubernetes API Server must disable basic authentication to protect information in transit.","desc":"Kubernetes basic authentication sends and receives request containing username, uid, groups, and other fields over a clear text HTTP communication. Basic authentication does not provide any security mechanisms using encryption standards. PKI certificate-based authentication must be set over a secure channel to ensure confidentiality and integrity. Basic authentication must not be set in the manifest file.","descriptions":{"default":"Kubernetes basic authentication sends and receives request containing username, uid, groups, and other fields over a clear text HTTP communication. Basic authentication does not provide any security mechanisms using encryption standards. PKI certificate-based authentication must be set over a secure channel to ensure confidentiality and integrity. Basic authentication must not be set in the manifest file.","check":"Change to the /etc/kubernetes/manifests/ directory on the Kubernetes Master Node. Run the command:\n\ngrep -i basic-auth-file * \n\nIf \"basic-auth-file\" is set in the Kubernetes API server manifest file, or is not configured this is a finding.","fix":"Edit the Kubernetes API Server manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Remove the setting \"--basic-auth-file\"."},"impact":0.7,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45714r712671_chk","severity":"high","gid":"V-242439","rid":"SV-242439r712673_rule","stig_id":"CNTR-K8-002620","gtitle":"SRG-APP-000516-CTR-001325","fix_id":"F-45672r712672_fix","documentable":null,"cci":["CCI-002418"],"nist":["SC-8"]}},{"id":"SV-242440","code":"control 'SV-242440' do\n  title 'Kubernetes API Server must disable token authentication to protect information in transit.'\n  desc 'Kubernetes token authentication uses password known as secrets in a plaintext file. This file contains sensitive information such as token, username and user uid. This token is used by service accounts within pods to authenticate with the API Server. This information is very valuable for attackers with malicious intent if the service account is privileged having access to the token. With this token a threat actor can impersonate the service account gaining access to the Rest API service.'\n  desc 'check', 'Change to the /etc/kubernetes/manifests/ directory on the Kubernetes Master Node. Run the command:\n\ngrep -i token-auth-file * \n\nIf \"token-auth-file\" is set in the Kubernetes API server manifest file, this is a finding.'\n  desc 'fix', 'Edit the Kubernetes API Server manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Remove parameter \"--token-auth-file\".'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45715r712674_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242440'\n  tag rid: 'SV-242440r712676_rule'\n  tag stig_id: 'CNTR-K8-002630'\n  tag gtitle: 'SRG-APP-000516-CTR-001325'\n  tag fix_id: 'F-45673r712675_fix'\n  tag 'documentable'\n  tag cci: ['CCI-002418']\n  tag nist: ['SC-8']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242440.rb"},"title":"Kubernetes API Server must disable token authentication to protect information in transit.","desc":"Kubernetes token authentication uses password known as secrets in a plaintext file. This file contains sensitive information such as token, username and user uid. This token is used by service accounts within pods to authenticate with the API Server. This information is very valuable for attackers with malicious intent if the service account is privileged having access to the token. With this token a threat actor can impersonate the service account gaining access to the Rest API service.","descriptions":{"default":"Kubernetes token authentication uses password known as secrets in a plaintext file. This file contains sensitive information such as token, username and user uid. This token is used by service accounts within pods to authenticate with the API Server. This information is very valuable for attackers with malicious intent if the service account is privileged having access to the token. With this token a threat actor can impersonate the service account gaining access to the Rest API service.","check":"Change to the /etc/kubernetes/manifests/ directory on the Kubernetes Master Node. Run the command:\n\ngrep -i token-auth-file * \n\nIf \"token-auth-file\" is set in the Kubernetes API server manifest file, this is a finding.","fix":"Edit the Kubernetes API Server manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Remove parameter \"--token-auth-file\"."},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45715r712674_chk","severity":"medium","gid":"V-242440","rid":"SV-242440r712676_rule","stig_id":"CNTR-K8-002630","gtitle":"SRG-APP-000516-CTR-001325","fix_id":"F-45673r712675_fix","documentable":null,"cci":["CCI-002418"],"nist":["SC-8"]}},{"id":"SV-242441","code":"control 'SV-242441' do\n  title 'Kubernetes endpoints must use approved organizational certificate and key pair to protect information in transit.'\n  desc 'Kubernetes control plane and external communication is managed by API Server. The main implementation of the API Server is to manage hardware resources for pods and container using horizontal or vertical scaling. Anyone who can gain access to the API Server can effectively control your Kubernetes architecture. Using authenticity protection, the communication can be protected against man-in-the-middle attacks/session hijacking and the insertion of false information into sessions.\n\nThe communication session is protected by utilizing transport encryption protocols, such as TLS. TLS provides the Kubernetes API Server with a means to be able to authenticate sessions and encrypt traffic.\n\nBy default, the API Server does not authenticate to the kubelet HTTPs endpoint. To enable secure communication for API Server, the parameter -kubelet-client-certificate and kubelet-client-key must be set. This parameter gives the location of the certificate and key pair used to secure API Server communication.'\n  desc 'check', 'Change to the /etc/kubernetes/manifests/ directory on the Kubernetes Master Node. Run the command:\n\ngrep -i kubelet-client-certificate *\ngrep -I kubelet-client-key * \n\nIf the setting \"--kubelet-client-certificate\" is not configured in the Kubernetes API server manifest file or contains no value, this is a finding.\n\nIf the setting \"--kubelet-client-key\" is not configured in the Kubernetes API server manifest file or contains no value, this is a finding.'\n  desc 'fix', 'Edit the Kubernetes API Server manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Set the value of \"--kubelet-client-certificate\" and \"--kubelet-client-key\" to an Approved Organizational Certificate and key pair.'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45716r712677_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242441'\n  tag rid: 'SV-242441r712679_rule'\n  tag stig_id: 'CNTR-K8-002640'\n  tag gtitle: 'SRG-APP-000516-CTR-001325'\n  tag fix_id: 'F-45674r712678_fix'\n  tag 'documentable'\n  tag cci: ['CCI-002418']\n  tag nist: ['SC-8']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242441.rb"},"title":"Kubernetes endpoints must use approved organizational certificate and key pair to protect information in transit.","desc":"Kubernetes control plane and external communication is managed by API Server. The main implementation of the API Server is to manage hardware resources for pods and container using horizontal or vertical scaling. Anyone who can gain access to the API Server can effectively control your Kubernetes architecture. Using authenticity protection, the communication can be protected against man-in-the-middle attacks/session hijacking and the insertion of false information into sessions.\n\nThe communication session is protected by utilizing transport encryption protocols, such as TLS. TLS provides the Kubernetes API Server with a means to be able to authenticate sessions and encrypt traffic.\n\nBy default, the API Server does not authenticate to the kubelet HTTPs endpoint. To enable secure communication for API Server, the parameter -kubelet-client-certificate and kubelet-client-key must be set. This parameter gives the location of the certificate and key pair used to secure API Server communication.","descriptions":{"default":"Kubernetes control plane and external communication is managed by API Server. The main implementation of the API Server is to manage hardware resources for pods and container using horizontal or vertical scaling. Anyone who can gain access to the API Server can effectively control your Kubernetes architecture. Using authenticity protection, the communication can be protected against man-in-the-middle attacks/session hijacking and the insertion of false information into sessions.\n\nThe communication session is protected by utilizing transport encryption protocols, such as TLS. TLS provides the Kubernetes API Server with a means to be able to authenticate sessions and encrypt traffic.\n\nBy default, the API Server does not authenticate to the kubelet HTTPs endpoint. To enable secure communication for API Server, the parameter -kubelet-client-certificate and kubelet-client-key must be set. This parameter gives the location of the certificate and key pair used to secure API Server communication.","check":"Change to the /etc/kubernetes/manifests/ directory on the Kubernetes Master Node. Run the command:\n\ngrep -i kubelet-client-certificate *\ngrep -I kubelet-client-key * \n\nIf the setting \"--kubelet-client-certificate\" is not configured in the Kubernetes API server manifest file or contains no value, this is a finding.\n\nIf the setting \"--kubelet-client-key\" is not configured in the Kubernetes API server manifest file or contains no value, this is a finding.","fix":"Edit the Kubernetes API Server manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Set the value of \"--kubelet-client-certificate\" and \"--kubelet-client-key\" to an Approved Organizational Certificate and key pair."},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45716r712677_chk","severity":"medium","gid":"V-242441","rid":"SV-242441r712679_rule","stig_id":"CNTR-K8-002640","gtitle":"SRG-APP-000516-CTR-001325","fix_id":"F-45674r712678_fix","documentable":null,"cci":["CCI-002418"],"nist":["SC-8"]}},{"id":"SV-242442","code":"control 'SV-242442' do\n  title 'Kubernetes must remove old components after updated versions have been installed.'\n  desc 'Previous versions of Kubernetes components that are not removed after updates have been installed may be exploited by adversaries by allowing the vulnerabilities to still exist within the cluster. It is important for Kubernetes to remove old pods when newer pods are created using new images to always be at the desired security state.'\n  desc 'check', %q(To view all pods and the images used to create the pods, from the Master node, run the following command:\n\nkubectl get pods --all-namespaces -o jsonpath=\"{..image}\" | \\\ntr -s '[[:space:]]' '\\n' | \\\nsort | \\\nuniq -c\n\nReview the images used for pods running within Kubernetes.\n\nIf there are multiple versions of the same image, this is a finding.)\n  desc 'fix', 'Remove any old pods that are using older images. On the Master node, run the command:\n\nkubectl delete pod podname\n(Note: \"podname\" is the name of the pod to delete.)'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45717r712680_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242442'\n  tag rid: 'SV-242442r712682_rule'\n  tag stig_id: 'CNTR-K8-002700'\n  tag gtitle: 'SRG-APP-000454-CTR-001110'\n  tag fix_id: 'F-45675r712681_fix'\n  tag 'documentable'\n  tag cci: ['CCI-002617']\n  tag nist: ['SI-2 (6)']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242442.rb"},"title":"Kubernetes must remove old components after updated versions have been installed.","desc":"Previous versions of Kubernetes components that are not removed after updates have been installed may be exploited by adversaries by allowing the vulnerabilities to still exist within the cluster. It is important for Kubernetes to remove old pods when newer pods are created using new images to always be at the desired security state.","descriptions":{"default":"Previous versions of Kubernetes components that are not removed after updates have been installed may be exploited by adversaries by allowing the vulnerabilities to still exist within the cluster. It is important for Kubernetes to remove old pods when newer pods are created using new images to always be at the desired security state.","check":"To view all pods and the images used to create the pods, from the Master node, run the following command:\n\nkubectl get pods --all-namespaces -o jsonpath=\"{..image}\" | \\\ntr -s '[[:space:]]' '\\n' | \\\nsort | \\\nuniq -c\n\nReview the images used for pods running within Kubernetes.\n\nIf there are multiple versions of the same image, this is a finding.","fix":"Remove any old pods that are using older images. On the Master node, run the command:\n\nkubectl delete pod podname\n(Note: \"podname\" is the name of the pod to delete.)"},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45717r712680_chk","severity":"medium","gid":"V-242442","rid":"SV-242442r712682_rule","stig_id":"CNTR-K8-002700","gtitle":"SRG-APP-000454-CTR-001110","fix_id":"F-45675r712681_fix","documentable":null,"cci":["CCI-002617"],"nist":["SI-2 (6)"]}},{"id":"SV-242443","code":"control 'SV-242443' do\n  title 'Kubernetes must contain the latest updates as authorized by IAVMs, CTOs, DTMs, and STIGs.'\n  desc 'Kubernetes software must stay up to date with the latest patches, service packs, and hot fixes. Not updating the Kubernetes control plane will expose the organization to vulnerabilities.\n\nFlaws discovered during security assessments, continuous monitoring, incident response activities, or information system error handling must also be addressed expeditiously. \n\nOrganization-defined time periods for updating security-relevant container platform components may vary based on a variety of factors including, for example, the security category of the information system or the criticality of the update (i.e., severity of the vulnerability related to the discovered flaw). \n\nThis requirement will apply to software patch management solutions that are used to install patches across the enclave and also to applications themselves that are not part of that patch management solution. For example, many browsers today provide the capability to install their own patch software. Patch criticality, as well as system criticality will vary. Therefore, the tactical situations regarding the patch management process will also vary. This means that the time period utilized must be a configurable parameter. Time frames for application of security-relevant software updates may be dependent upon the IAVM process.\n\nThe container platform components will be configured to check for and install security-relevant software updates within an identified time period from the availability of the update. The container platform registry will ensure the images are current. The specific time period will be defined by an authoritative source (e.g., IAVM, CTOs, DTMs, and STIGs).'\n  desc 'check', 'Authenticate on the Kubernetes Master Node. Run the command:\n\nkubectl version --short\n\nIf kubectl version has a setting not supporting Kubernetes skew policy, this is a finding.\n\nNote: Kubernetes Skew Policy can be found at: https://kubernetes.io/docs/setup/release/version-skew-policy/#supported-versions'\n  desc 'fix', 'Upgrade Kubernetes to the supported version. Institute and adhere to the policies and procedures to ensure that patches are consistently applied within the time allowed.'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45718r712683_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242443'\n  tag rid: 'SV-242443r712685_rule'\n  tag stig_id: 'CNTR-K8-002720'\n  tag gtitle: 'SRG-APP-000456-CTR-001125'\n  tag fix_id: 'F-45676r712684_fix'\n  tag 'documentable'\n  tag cci: ['CCI-002605']\n  tag nist: ['SI-2 c']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242443.rb"},"title":"Kubernetes must contain the latest updates as authorized by IAVMs, CTOs, DTMs, and STIGs.","desc":"Kubernetes software must stay up to date with the latest patches, service packs, and hot fixes. Not updating the Kubernetes control plane will expose the organization to vulnerabilities.\n\nFlaws discovered during security assessments, continuous monitoring, incident response activities, or information system error handling must also be addressed expeditiously. \n\nOrganization-defined time periods for updating security-relevant container platform components may vary based on a variety of factors including, for example, the security category of the information system or the criticality of the update (i.e., severity of the vulnerability related to the discovered flaw). \n\nThis requirement will apply to software patch management solutions that are used to install patches across the enclave and also to applications themselves that are not part of that patch management solution. For example, many browsers today provide the capability to install their own patch software. Patch criticality, as well as system criticality will vary. Therefore, the tactical situations regarding the patch management process will also vary. This means that the time period utilized must be a configurable parameter. Time frames for application of security-relevant software updates may be dependent upon the IAVM process.\n\nThe container platform components will be configured to check for and install security-relevant software updates within an identified time period from the availability of the update. The container platform registry will ensure the images are current. The specific time period will be defined by an authoritative source (e.g., IAVM, CTOs, DTMs, and STIGs).","descriptions":{"default":"Kubernetes software must stay up to date with the latest patches, service packs, and hot fixes. Not updating the Kubernetes control plane will expose the organization to vulnerabilities.\n\nFlaws discovered during security assessments, continuous monitoring, incident response activities, or information system error handling must also be addressed expeditiously. \n\nOrganization-defined time periods for updating security-relevant container platform components may vary based on a variety of factors including, for example, the security category of the information system or the criticality of the update (i.e., severity of the vulnerability related to the discovered flaw). \n\nThis requirement will apply to software patch management solutions that are used to install patches across the enclave and also to applications themselves that are not part of that patch management solution. For example, many browsers today provide the capability to install their own patch software. Patch criticality, as well as system criticality will vary. Therefore, the tactical situations regarding the patch management process will also vary. This means that the time period utilized must be a configurable parameter. Time frames for application of security-relevant software updates may be dependent upon the IAVM process.\n\nThe container platform components will be configured to check for and install security-relevant software updates within an identified time period from the availability of the update. The container platform registry will ensure the images are current. The specific time period will be defined by an authoritative source (e.g., IAVM, CTOs, DTMs, and STIGs).","check":"Authenticate on the Kubernetes Master Node. Run the command:\n\nkubectl version --short\n\nIf kubectl version has a setting not supporting Kubernetes skew policy, this is a finding.\n\nNote: Kubernetes Skew Policy can be found at: https://kubernetes.io/docs/setup/release/version-skew-policy/#supported-versions","fix":"Upgrade Kubernetes to the supported version. Institute and adhere to the policies and procedures to ensure that patches are consistently applied within the time allowed."},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45718r712683_chk","severity":"medium","gid":"V-242443","rid":"SV-242443r712685_rule","stig_id":"CNTR-K8-002720","gtitle":"SRG-APP-000456-CTR-001125","fix_id":"F-45676r712684_fix","documentable":null,"cci":["CCI-002605"],"nist":["SI-2 c"]}},{"id":"SV-242444","code":"control 'SV-242444' do\n  title 'The Kubernetes component manifests must be owned by root.'\n  desc 'The Kubernetes manifests are those files that contain the arguments and settings for the Master Node services. These services are etcd, the api server, controller, proxy, and scheduler. If these files can be changed, the scheduler will be implementing the changes immediately. Many of the security settings within the document are implemented through these manifests.'\n  desc 'check', 'Review the ownership of the Kubernetes manifests files by using the command:\n\nstat -c %U:%G /etc/kubernetes/manifests/* | grep -v root:root\n\nIf the command returns any non root:root file permissions, this is a finding.'\n  desc 'fix', 'Change the ownership of the manifest files to root: root by executing the command:\n\nchown root:root /etc/kubernetes/manifests/*'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45719r712686_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242444'\n  tag rid: 'SV-242444r712688_rule'\n  tag stig_id: 'CNTR-K8-003110'\n  tag gtitle: 'SRG-APP-000516-CTR-001325'\n  tag fix_id: 'F-45677r712687_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000366']\n  tag nist: ['CM-6 b']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242444.rb"},"title":"The Kubernetes component manifests must be owned by root.","desc":"The Kubernetes manifests are those files that contain the arguments and settings for the Master Node services. These services are etcd, the api server, controller, proxy, and scheduler. If these files can be changed, the scheduler will be implementing the changes immediately. Many of the security settings within the document are implemented through these manifests.","descriptions":{"default":"The Kubernetes manifests are those files that contain the arguments and settings for the Master Node services. These services are etcd, the api server, controller, proxy, and scheduler. If these files can be changed, the scheduler will be implementing the changes immediately. Many of the security settings within the document are implemented through these manifests.","check":"Review the ownership of the Kubernetes manifests files by using the command:\n\nstat -c %U:%G /etc/kubernetes/manifests/* | grep -v root:root\n\nIf the command returns any non root:root file permissions, this is a finding.","fix":"Change the ownership of the manifest files to root: root by executing the command:\n\nchown root:root /etc/kubernetes/manifests/*"},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45719r712686_chk","severity":"medium","gid":"V-242444","rid":"SV-242444r712688_rule","stig_id":"CNTR-K8-003110","gtitle":"SRG-APP-000516-CTR-001325","fix_id":"F-45677r712687_fix","documentable":null,"cci":["CCI-000366"],"nist":["CM-6 b"]}},{"id":"SV-242445","code":"control 'SV-242445' do\n  title 'The Kubernetes component etcd must be owned by etcd.'\n  desc 'The Kubernetes etcd key-value store provides a way to store data to the Master Node. If these files can be changed, data to API object and the master node would be compromised. The scheduler will implement the changes immediately. Many of the security settings within the document are implemented through this file.'\n  desc 'check', 'Review the ownership of the Kubernetes etcd files by using the command:\n\nstat -c %U:%G /var/lib/etcd/* | grep -v etcd:etcd\n\nIf the command returns any non etcd:etcd file permissions, this is a finding.'\n  desc 'fix', 'Change the ownership of the manifest files to etcd:etcd by executing the command:\n\nchown etcd:etcd /var/lib/etcd/*'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45720r712689_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242445'\n  tag rid: 'SV-242445r712691_rule'\n  tag stig_id: 'CNTR-K8-003120'\n  tag gtitle: 'SRG-APP-000516-CTR-001325'\n  tag fix_id: 'F-45678r712690_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000366']\n  tag nist: ['CM-6 b']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242445.rb"},"title":"The Kubernetes component etcd must be owned by etcd.","desc":"The Kubernetes etcd key-value store provides a way to store data to the Master Node. If these files can be changed, data to API object and the master node would be compromised. The scheduler will implement the changes immediately. Many of the security settings within the document are implemented through this file.","descriptions":{"default":"The Kubernetes etcd key-value store provides a way to store data to the Master Node. If these files can be changed, data to API object and the master node would be compromised. The scheduler will implement the changes immediately. Many of the security settings within the document are implemented through this file.","check":"Review the ownership of the Kubernetes etcd files by using the command:\n\nstat -c %U:%G /var/lib/etcd/* | grep -v etcd:etcd\n\nIf the command returns any non etcd:etcd file permissions, this is a finding.","fix":"Change the ownership of the manifest files to etcd:etcd by executing the command:\n\nchown etcd:etcd /var/lib/etcd/*"},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45720r712689_chk","severity":"medium","gid":"V-242445","rid":"SV-242445r712691_rule","stig_id":"CNTR-K8-003120","gtitle":"SRG-APP-000516-CTR-001325","fix_id":"F-45678r712690_fix","documentable":null,"cci":["CCI-000366"],"nist":["CM-6 b"]}},{"id":"SV-242446","code":"control 'SV-242446' do\n  title 'The Kubernetes conf files must be owned by root.'\n  desc 'The Kubernetes conf files contain the arguments and settings for the Master Node services. These services are controller and scheduler. If these files can be changed, the scheduler will be implementing the changes immediately. Many of the security settings within the document are implemented through this file.'\n  desc 'check', 'Review the Kubernetes conf files by using the command:\n\nstat -c %U:%G /etc/kubernetes/admin.conf | grep -v root:root\nstat -c %U:%G /etc/kubernetes/scheduler.conf | grep -v root:root\nstat -c %U:%G /etc/kubernetes/controller-manager.conf | grep -v root:root\n\nIf the command returns any non root:root file permissions, this is a finding.'\n  desc 'fix', 'Change the ownership of the conf files to root: root by executing the command:\n\nchown root:root /etc/kubernetes/admin.conf \nchown root:root /etc/kubernetes/scheduler.conf \nchown root:root /etc/kubernetes/controller-manager.conf'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45721r712692_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242446'\n  tag rid: 'SV-242446r712694_rule'\n  tag stig_id: 'CNTR-K8-003130'\n  tag gtitle: 'SRG-APP-000516-CTR-001325'\n  tag fix_id: 'F-45679r712693_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000366']\n  tag nist: ['CM-6 b']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242446.rb"},"title":"The Kubernetes conf files must be owned by root.","desc":"The Kubernetes conf files contain the arguments and settings for the Master Node services. These services are controller and scheduler. If these files can be changed, the scheduler will be implementing the changes immediately. Many of the security settings within the document are implemented through this file.","descriptions":{"default":"The Kubernetes conf files contain the arguments and settings for the Master Node services. These services are controller and scheduler. If these files can be changed, the scheduler will be implementing the changes immediately. Many of the security settings within the document are implemented through this file.","check":"Review the Kubernetes conf files by using the command:\n\nstat -c %U:%G /etc/kubernetes/admin.conf | grep -v root:root\nstat -c %U:%G /etc/kubernetes/scheduler.conf | grep -v root:root\nstat -c %U:%G /etc/kubernetes/controller-manager.conf | grep -v root:root\n\nIf the command returns any non root:root file permissions, this is a finding.","fix":"Change the ownership of the conf files to root: root by executing the command:\n\nchown root:root /etc/kubernetes/admin.conf \nchown root:root /etc/kubernetes/scheduler.conf \nchown root:root /etc/kubernetes/controller-manager.conf"},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45721r712692_chk","severity":"medium","gid":"V-242446","rid":"SV-242446r712694_rule","stig_id":"CNTR-K8-003130","gtitle":"SRG-APP-000516-CTR-001325","fix_id":"F-45679r712693_fix","documentable":null,"cci":["CCI-000366"],"nist":["CM-6 b"]}},{"id":"SV-242447","code":"control 'SV-242447' do\n  title 'The Kubernetes Kube Proxy must have file permissions set to 644 or more restrictive.'\n  desc 'The Kubernetes kube proxy kubeconfig contain the argument and setting for the Master Nodes. These settings contain network rules for restricting network communication between pods, clusters, and networks. If these files can be changed, data traversing between the Kubernetes Control Panel components would be compromised. Many of the security settings within the document are implemented through this file.'\n  desc 'check', 'Check if Kube-Proxy is running and obtain --kubeconfig parameter use the following command:\nps -ef | grep kube-proxy\n\nIf Kube-Proxy exists:\nReview the permissions of the Kubernetes Kube Proxy by using the command:\nstat -c %a <location from --kubeconfig>\n\nIf the file has permissions more permissive than \"644\", this is a finding.'\n  desc 'fix', 'Change the permissions of the Kube Proxy to \"644\" by executing the command:\n\nchown 644 <location from kubeconfig>.'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45722r712695_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242447'\n  tag rid: 'SV-242447r712697_rule'\n  tag stig_id: 'CNTR-K8-003140'\n  tag gtitle: 'SRG-APP-000516-CTR-001325'\n  tag fix_id: 'F-45680r712696_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000366']\n  tag nist: ['CM-6 b']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242447.rb"},"title":"The Kubernetes Kube Proxy must have file permissions set to 644 or more restrictive.","desc":"The Kubernetes kube proxy kubeconfig contain the argument and setting for the Master Nodes. These settings contain network rules for restricting network communication between pods, clusters, and networks. If these files can be changed, data traversing between the Kubernetes Control Panel components would be compromised. Many of the security settings within the document are implemented through this file.","descriptions":{"default":"The Kubernetes kube proxy kubeconfig contain the argument and setting for the Master Nodes. These settings contain network rules for restricting network communication between pods, clusters, and networks. If these files can be changed, data traversing between the Kubernetes Control Panel components would be compromised. Many of the security settings within the document are implemented through this file.","check":"Check if Kube-Proxy is running and obtain --kubeconfig parameter use the following command:\nps -ef | grep kube-proxy\n\nIf Kube-Proxy exists:\nReview the permissions of the Kubernetes Kube Proxy by using the command:\nstat -c %a <location from --kubeconfig>\n\nIf the file has permissions more permissive than \"644\", this is a finding.","fix":"Change the permissions of the Kube Proxy to \"644\" by executing the command:\n\nchown 644 <location from kubeconfig>."},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45722r712695_chk","severity":"medium","gid":"V-242447","rid":"SV-242447r712697_rule","stig_id":"CNTR-K8-003140","gtitle":"SRG-APP-000516-CTR-001325","fix_id":"F-45680r712696_fix","documentable":null,"cci":["CCI-000366"],"nist":["CM-6 b"]}},{"id":"SV-242448","code":"control 'SV-242448' do\n  title 'The Kubernetes Kube Proxy must be owned by root.'\n  desc 'The Kubernetes kube proxy kubeconfig contain the argument and setting for the Master Nodes. These settings contain network rules for restricting network communication between pods, clusters, and networks. If these files can be changed, data traversing between the Kubernetes Control Panel components would be compromised. Many of the security settings within the document are implemented through this file.'\n  desc 'check', 'Check if Kube-Proxy is running use the following command:\nps -ef | grep kube-proxy\n\nIf Kube-Proxy exists:\nReview the permissions of the Kubernetes Kube Proxy by using the command:\nstat -c   %U:%G <location from --kubeconfig>| grep -v root:root\n\nIf the command returns any non root:root file permissions, this is a finding.'\n  desc 'fix', 'Change the ownership of the Kube Proxy to root:root by executing the command:\n\nchown root:root <location from kubeconfig>.'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45723r712698_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242448'\n  tag rid: 'SV-242448r712700_rule'\n  tag stig_id: 'CNTR-K8-003150'\n  tag gtitle: 'SRG-APP-000516-CTR-001325'\n  tag fix_id: 'F-45681r712699_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000366']\n  tag nist: ['CM-6 b']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242448.rb"},"title":"The Kubernetes Kube Proxy must be owned by root.","desc":"The Kubernetes kube proxy kubeconfig contain the argument and setting for the Master Nodes. These settings contain network rules for restricting network communication between pods, clusters, and networks. If these files can be changed, data traversing between the Kubernetes Control Panel components would be compromised. Many of the security settings within the document are implemented through this file.","descriptions":{"default":"The Kubernetes kube proxy kubeconfig contain the argument and setting for the Master Nodes. These settings contain network rules for restricting network communication between pods, clusters, and networks. If these files can be changed, data traversing between the Kubernetes Control Panel components would be compromised. Many of the security settings within the document are implemented through this file.","check":"Check if Kube-Proxy is running use the following command:\nps -ef | grep kube-proxy\n\nIf Kube-Proxy exists:\nReview the permissions of the Kubernetes Kube Proxy by using the command:\nstat -c   %U:%G <location from --kubeconfig>| grep -v root:root\n\nIf the command returns any non root:root file permissions, this is a finding.","fix":"Change the ownership of the Kube Proxy to root:root by executing the command:\n\nchown root:root <location from kubeconfig>."},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45723r712698_chk","severity":"medium","gid":"V-242448","rid":"SV-242448r712700_rule","stig_id":"CNTR-K8-003150","gtitle":"SRG-APP-000516-CTR-001325","fix_id":"F-45681r712699_fix","documentable":null,"cci":["CCI-000366"],"nist":["CM-6 b"]}},{"id":"SV-242449","code":"control 'SV-242449' do\n  title 'The Kubernetes Kubelet certificate authority file must have file permissions set to 644 or more restrictive.'\n  desc 'The Kubernetes kubelet certificate authority file contains settings for the Kubernetes Node TLS certificate authority. Any request presenting a client certificate signed by one of the authorities in the client-ca-file is authenticated with an identity corresponding to the CommonName of the client certificate. If this file can be changed, the Kubernetes architecture could be compromised. The scheduler will implement the changes immediately. Many of the security settings within the document are implemented through this file.'\n  desc 'check', 'Change to the /etc/sysconfig/ directory on the Kubernetes Master Node. Run command:\n\nmore kubelet\n--client-ca-file argument \nNote certificate location\n\nIf the ca-file argument location file has permissions more permissive than \"644\", this is a finding.'\n  desc 'fix', 'Change the permissions of the --client-ca-file to \"644\" by executing the command:\n\nchown 644 <kubelet --client--ca-file argument location>.'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45724r712701_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242449'\n  tag rid: 'SV-242449r712703_rule'\n  tag stig_id: 'CNTR-K8-003160'\n  tag gtitle: 'SRG-APP-000516-CTR-001325'\n  tag fix_id: 'F-45682r712702_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000366']\n  tag nist: ['CM-6 b']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242449.rb"},"title":"The Kubernetes Kubelet certificate authority file must have file permissions set to 644 or more restrictive.","desc":"The Kubernetes kubelet certificate authority file contains settings for the Kubernetes Node TLS certificate authority. Any request presenting a client certificate signed by one of the authorities in the client-ca-file is authenticated with an identity corresponding to the CommonName of the client certificate. If this file can be changed, the Kubernetes architecture could be compromised. The scheduler will implement the changes immediately. Many of the security settings within the document are implemented through this file.","descriptions":{"default":"The Kubernetes kubelet certificate authority file contains settings for the Kubernetes Node TLS certificate authority. Any request presenting a client certificate signed by one of the authorities in the client-ca-file is authenticated with an identity corresponding to the CommonName of the client certificate. If this file can be changed, the Kubernetes architecture could be compromised. The scheduler will implement the changes immediately. Many of the security settings within the document are implemented through this file.","check":"Change to the /etc/sysconfig/ directory on the Kubernetes Master Node. Run command:\n\nmore kubelet\n--client-ca-file argument \nNote certificate location\n\nIf the ca-file argument location file has permissions more permissive than \"644\", this is a finding.","fix":"Change the permissions of the --client-ca-file to \"644\" by executing the command:\n\nchown 644 <kubelet --client--ca-file argument location>."},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45724r712701_chk","severity":"medium","gid":"V-242449","rid":"SV-242449r712703_rule","stig_id":"CNTR-K8-003160","gtitle":"SRG-APP-000516-CTR-001325","fix_id":"F-45682r712702_fix","documentable":null,"cci":["CCI-000366"],"nist":["CM-6 b"]}},{"id":"SV-242450","code":"control 'SV-242450' do\n  title 'The Kubernetes Kubelet certificate authority must be owned by root.'\n  desc 'The Kubernetes kube proxy kubeconfig contain the argument and setting for the Master Nodes. These settings contain network rules for restricting network communication between pods, clusters, and networks. If these files can be changed, data traversing between the Kubernetes Control Panel components would be compromised. Many of the security settings within the document are implemented through this file.'\n  desc 'check', 'Check if Kube-Proxy is running and obtain --kubeconfig parameter use the following command:\nps -ef | grep kube-proxy\n\nIf Kube-Proxy exists:\nReview the permissions of the Kubernetes Kube Proxy by using the command:\nstat -c %a <location from --kubeconfig>\n\nIf the command returns any non root:root file permissions, this is a finding.'\n  desc 'fix', 'Change the permissions of the Kube Proxy to \"root\" by executing the command:\n\nchown root:root <location from kubeconfig>.'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45725r712704_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242450'\n  tag rid: 'SV-242450r712706_rule'\n  tag stig_id: 'CNTR-K8-003170'\n  tag gtitle: 'SRG-APP-000516-CTR-001325'\n  tag fix_id: 'F-45683r712705_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000366']\n  tag nist: ['CM-6 b']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242450.rb"},"title":"The Kubernetes Kubelet certificate authority must be owned by root.","desc":"The Kubernetes kube proxy kubeconfig contain the argument and setting for the Master Nodes. These settings contain network rules for restricting network communication between pods, clusters, and networks. If these files can be changed, data traversing between the Kubernetes Control Panel components would be compromised. Many of the security settings within the document are implemented through this file.","descriptions":{"default":"The Kubernetes kube proxy kubeconfig contain the argument and setting for the Master Nodes. These settings contain network rules for restricting network communication between pods, clusters, and networks. If these files can be changed, data traversing between the Kubernetes Control Panel components would be compromised. Many of the security settings within the document are implemented through this file.","check":"Check if Kube-Proxy is running and obtain --kubeconfig parameter use the following command:\nps -ef | grep kube-proxy\n\nIf Kube-Proxy exists:\nReview the permissions of the Kubernetes Kube Proxy by using the command:\nstat -c %a <location from --kubeconfig>\n\nIf the command returns any non root:root file permissions, this is a finding.","fix":"Change the permissions of the Kube Proxy to \"root\" by executing the command:\n\nchown root:root <location from kubeconfig>."},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45725r712704_chk","severity":"medium","gid":"V-242450","rid":"SV-242450r712706_rule","stig_id":"CNTR-K8-003170","gtitle":"SRG-APP-000516-CTR-001325","fix_id":"F-45683r712705_fix","documentable":null,"cci":["CCI-000366"],"nist":["CM-6 b"]}},{"id":"SV-242451","code":"control 'SV-242451' do\n  title 'The Kubernetes component PKI must be owned by root.'\n  desc 'The Kubernetes PKI directory contains all certificates (.crt files) supporting secure network communications in the Kubernetes Control Plane. If these files can be modified, data traversing within the architecture components would become unsecure and compromised. Many of the security settings within the document are implemented through this file.'\n  desc 'check', 'Review the PKI files in Kubernetes by using the command:\n\nls -laR /etc/kubernetes/pki/\n\nIf the command returns any non root:root file permissions, this is a finding.'\n  desc 'fix', 'Change the ownership of the PKI to root: root by executing the command:\n\nchown -R root:root /etc/kubernetes/pki/'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45726r712707_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242451'\n  tag rid: 'SV-242451r712709_rule'\n  tag stig_id: 'CNTR-K8-003180'\n  tag gtitle: 'SRG-APP-000516-CTR-001325'\n  tag fix_id: 'F-45684r712708_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000366']\n  tag nist: ['CM-6 b']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242451.rb"},"title":"The Kubernetes component PKI must be owned by root.","desc":"The Kubernetes PKI directory contains all certificates (.crt files) supporting secure network communications in the Kubernetes Control Plane. If these files can be modified, data traversing within the architecture components would become unsecure and compromised. Many of the security settings within the document are implemented through this file.","descriptions":{"default":"The Kubernetes PKI directory contains all certificates (.crt files) supporting secure network communications in the Kubernetes Control Plane. If these files can be modified, data traversing within the architecture components would become unsecure and compromised. Many of the security settings within the document are implemented through this file.","check":"Review the PKI files in Kubernetes by using the command:\n\nls -laR /etc/kubernetes/pki/\n\nIf the command returns any non root:root file permissions, this is a finding.","fix":"Change the ownership of the PKI to root: root by executing the command:\n\nchown -R root:root /etc/kubernetes/pki/"},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45726r712707_chk","severity":"medium","gid":"V-242451","rid":"SV-242451r712709_rule","stig_id":"CNTR-K8-003180","gtitle":"SRG-APP-000516-CTR-001325","fix_id":"F-45684r712708_fix","documentable":null,"cci":["CCI-000366"],"nist":["CM-6 b"]}},{"id":"SV-242452","code":"control 'SV-242452' do\n  title 'The Kubernetes kubelet config must have file permissions set to 644 or more restrictive.'\n  desc 'The Kubernetes kubelet agent registers nodes with the API Server, mounts volume storage for pods, and performs health checks to containers within pods. If these files can be modified, the information system would be unaware of pod or container degradation. Many of the security settings within the document are implemented through this file.'\n  desc 'check', 'Review the permissions of the Kubernetes Kubelet conf by using the command:\n\nstat -c %a  /etc/kubernetes/kubelet.conf\n\nIf any of the files are have permissions more permissive than \"644\", this is a finding.'\n  desc 'fix', 'Change the permissions of the Kubelet to \"644\" by executing the command:\n\nchown 644 /etc/kubernetes/kubelet.conf'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45727r712710_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242452'\n  tag rid: 'SV-242452r712712_rule'\n  tag stig_id: 'CNTR-K8-003190'\n  tag gtitle: 'SRG-APP-000516-CTR-001325'\n  tag fix_id: 'F-45685r712711_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000366']\n  tag nist: ['CM-6 b']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242452.rb"},"title":"The Kubernetes kubelet config must have file permissions set to 644 or more restrictive.","desc":"The Kubernetes kubelet agent registers nodes with the API Server, mounts volume storage for pods, and performs health checks to containers within pods. If these files can be modified, the information system would be unaware of pod or container degradation. Many of the security settings within the document are implemented through this file.","descriptions":{"default":"The Kubernetes kubelet agent registers nodes with the API Server, mounts volume storage for pods, and performs health checks to containers within pods. If these files can be modified, the information system would be unaware of pod or container degradation. Many of the security settings within the document are implemented through this file.","check":"Review the permissions of the Kubernetes Kubelet conf by using the command:\n\nstat -c %a  /etc/kubernetes/kubelet.conf\n\nIf any of the files are have permissions more permissive than \"644\", this is a finding.","fix":"Change the permissions of the Kubelet to \"644\" by executing the command:\n\nchown 644 /etc/kubernetes/kubelet.conf"},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45727r712710_chk","severity":"medium","gid":"V-242452","rid":"SV-242452r712712_rule","stig_id":"CNTR-K8-003190","gtitle":"SRG-APP-000516-CTR-001325","fix_id":"F-45685r712711_fix","documentable":null,"cci":["CCI-000366"],"nist":["CM-6 b"]}},{"id":"SV-242453","code":"control 'SV-242453' do\n  title 'The Kubernetes kubelet config must be owned by root.'\n  desc 'The Kubernetes kubelet agent registers nodes with the API server and performs health checks to containers within pods. If these files can be modified, the information system would be unaware of pod or container degradation. Many of the security settings within the document are implemented through this file.'\n  desc 'check', 'Review the Kubernetes Kubelet conf files by using the command:\n\nstat -c %U:%G /etc/kubernetes/kubelet.conf| grep -v root:root\n\nIf the command returns any non root:root file permissions, this is a finding.'\n  desc 'fix', 'Change the ownership of the kubelet.conf to root: root by executing the command:\n\nchown root:root /etc/kubernetes/kubelet.conf'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45728r712713_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242453'\n  tag rid: 'SV-242453r712715_rule'\n  tag stig_id: 'CNTR-K8-003200'\n  tag gtitle: 'SRG-APP-000516-CTR-001325'\n  tag fix_id: 'F-45686r712714_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000366']\n  tag nist: ['CM-6 b']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242453.rb"},"title":"The Kubernetes kubelet config must be owned by root.","desc":"The Kubernetes kubelet agent registers nodes with the API server and performs health checks to containers within pods. If these files can be modified, the information system would be unaware of pod or container degradation. Many of the security settings within the document are implemented through this file.","descriptions":{"default":"The Kubernetes kubelet agent registers nodes with the API server and performs health checks to containers within pods. If these files can be modified, the information system would be unaware of pod or container degradation. Many of the security settings within the document are implemented through this file.","check":"Review the Kubernetes Kubelet conf files by using the command:\n\nstat -c %U:%G /etc/kubernetes/kubelet.conf| grep -v root:root\n\nIf the command returns any non root:root file permissions, this is a finding.","fix":"Change the ownership of the kubelet.conf to root: root by executing the command:\n\nchown root:root /etc/kubernetes/kubelet.conf"},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45728r712713_chk","severity":"medium","gid":"V-242453","rid":"SV-242453r712715_rule","stig_id":"CNTR-K8-003200","gtitle":"SRG-APP-000516-CTR-001325","fix_id":"F-45686r712714_fix","documentable":null,"cci":["CCI-000366"],"nist":["CM-6 b"]}},{"id":"SV-242454","code":"control 'SV-242454' do\n  title 'The Kubernetes kubeadm must be owned by root.'\n  desc 'The Kubernetes kubeeadm.conf contains sensitive information regarding the cluster nodes configuration. If this file can be modified, the Kubernetes Platform Plane would be degraded or compromised for malicious intent. Many of the security settings within the document are implemented through this file.'\n  desc 'check', 'Review the Kubernetes kubeadm by using the command:\n\nstat -c %U:%G /usr/bin/kubeadm| grep -v root:root\n\nIf the command returns any non root:root file permissions, this is a finding.'\n  desc 'fix', 'Change the ownership of the kubeadm to root: root by executing the command:\n\nchown root:root /user/bin/kubeadm'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45729r712716_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242454'\n  tag rid: 'SV-242454r712718_rule'\n  tag stig_id: 'CNTR-K8-003210'\n  tag gtitle: 'SRG-APP-000516-CTR-001325'\n  tag fix_id: 'F-45687r712717_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000366']\n  tag nist: ['CM-6 b']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242454.rb"},"title":"The Kubernetes kubeadm must be owned by root.","desc":"The Kubernetes kubeeadm.conf contains sensitive information regarding the cluster nodes configuration. If this file can be modified, the Kubernetes Platform Plane would be degraded or compromised for malicious intent. Many of the security settings within the document are implemented through this file.","descriptions":{"default":"The Kubernetes kubeeadm.conf contains sensitive information regarding the cluster nodes configuration. If this file can be modified, the Kubernetes Platform Plane would be degraded or compromised for malicious intent. Many of the security settings within the document are implemented through this file.","check":"Review the Kubernetes kubeadm by using the command:\n\nstat -c %U:%G /usr/bin/kubeadm| grep -v root:root\n\nIf the command returns any non root:root file permissions, this is a finding.","fix":"Change the ownership of the kubeadm to root: root by executing the command:\n\nchown root:root /user/bin/kubeadm"},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45729r712716_chk","severity":"medium","gid":"V-242454","rid":"SV-242454r712718_rule","stig_id":"CNTR-K8-003210","gtitle":"SRG-APP-000516-CTR-001325","fix_id":"F-45687r712717_fix","documentable":null,"cci":["CCI-000366"],"nist":["CM-6 b"]}},{"id":"SV-242455","code":"control 'SV-242455' do\n  title 'The Kubernetes kubelet service must have file permissions set to 644 or more restrictive.'\n  desc 'The Kubernetes kubeadm.conf contains sensitive information regarding the cluster nodes configuration. If this file can be modified, the Kubernetes Platform Plane would be degraded or compromised for malicious intent. Many of the security settings within the document are implemented through this file.'\n  desc 'check', 'Review the permissions of the Kubernetes kubelet by using the command:\n\nstat -c %a /usr/bin/kubeadm\n\nIf any of the files have permissions more permissive than \"644\", this is a finding.'\n  desc 'fix', 'Change the permissions of Kubeadm to \"644\" by executing the command:\n\nchown 644 /usr/bin/kubeadm'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45730r712719_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242455'\n  tag rid: 'SV-242455r712721_rule'\n  tag stig_id: 'CNTR-K8-003220'\n  tag gtitle: 'SRG-APP-000516-CTR-001325'\n  tag fix_id: 'F-45688r712720_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000366']\n  tag nist: ['CM-6 b']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242455.rb"},"title":"The Kubernetes kubelet service must have file permissions set to 644 or more restrictive.","desc":"The Kubernetes kubeadm.conf contains sensitive information regarding the cluster nodes configuration. If this file can be modified, the Kubernetes Platform Plane would be degraded or compromised for malicious intent. Many of the security settings within the document are implemented through this file.","descriptions":{"default":"The Kubernetes kubeadm.conf contains sensitive information regarding the cluster nodes configuration. If this file can be modified, the Kubernetes Platform Plane would be degraded or compromised for malicious intent. Many of the security settings within the document are implemented through this file.","check":"Review the permissions of the Kubernetes kubelet by using the command:\n\nstat -c %a /usr/bin/kubeadm\n\nIf any of the files have permissions more permissive than \"644\", this is a finding.","fix":"Change the permissions of Kubeadm to \"644\" by executing the command:\n\nchown 644 /usr/bin/kubeadm"},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45730r712719_chk","severity":"medium","gid":"V-242455","rid":"SV-242455r712721_rule","stig_id":"CNTR-K8-003220","gtitle":"SRG-APP-000516-CTR-001325","fix_id":"F-45688r712720_fix","documentable":null,"cci":["CCI-000366"],"nist":["CM-6 b"]}},{"id":"SV-242456","code":"control 'SV-242456' do\n  title 'The Kubernetes kubelet config must have file permissions set to 644 or more restrictive.'\n  desc 'The Kubernetes kubelet agent registers nodes with the API server and performs health checks to containers within pods. If this file can be modified, the information system would be unaware of pod or container degradation.'\n  desc 'check', 'Review the permissions of the Kubernetes config.yaml by using the command:\n\nstat -c %a /var/lib/kubelet/config.yaml\n\nIf any of the files are have permissions more permissive than \"644\", this is a finding.'\n  desc 'fix', 'Change the permissions of the config.yaml to \"644\" by executing the command:\n\nchown 644 /var/lib/kubelet/config.yaml'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45731r712722_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242456'\n  tag rid: 'SV-242456r712724_rule'\n  tag stig_id: 'CNTR-K8-003230'\n  tag gtitle: 'SRG-APP-000516-CTR-001330'\n  tag fix_id: 'F-45689r712723_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000366']\n  tag nist: ['CM-6 b']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242456.rb"},"title":"The Kubernetes kubelet config must have file permissions set to 644 or more restrictive.","desc":"The Kubernetes kubelet agent registers nodes with the API server and performs health checks to containers within pods. If this file can be modified, the information system would be unaware of pod or container degradation.","descriptions":{"default":"The Kubernetes kubelet agent registers nodes with the API server and performs health checks to containers within pods. If this file can be modified, the information system would be unaware of pod or container degradation.","check":"Review the permissions of the Kubernetes config.yaml by using the command:\n\nstat -c %a /var/lib/kubelet/config.yaml\n\nIf any of the files are have permissions more permissive than \"644\", this is a finding.","fix":"Change the permissions of the config.yaml to \"644\" by executing the command:\n\nchown 644 /var/lib/kubelet/config.yaml"},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45731r712722_chk","severity":"medium","gid":"V-242456","rid":"SV-242456r712724_rule","stig_id":"CNTR-K8-003230","gtitle":"SRG-APP-000516-CTR-001330","fix_id":"F-45689r712723_fix","documentable":null,"cci":["CCI-000366"],"nist":["CM-6 b"]}},{"id":"SV-242457","code":"control 'SV-242457' do\n  title 'The Kubernetes kubelet config must be owned by root.'\n  desc 'The Kubernetes kubelet agent registers nodes with the API Server and performs health checks to containers within pods. If this file can be modified, the information system would be unaware of pod or container degradation.'\n  desc 'check', 'Review the Kubernetes Kubeadm kubelet conf file by using the command:\n\nstat -c %U:%G /var/lib/kubelet/config.yaml| grep -v root:root\n\nIf the command returns any non root:root file permissions, this is a finding.'\n  desc 'fix', 'Change the ownership of the kubelet config to \"root: root\" by executing the command:\n\nchown root:root /var/lib/kubelet/config.yaml'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45732r712725_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242457'\n  tag rid: 'SV-242457r712727_rule'\n  tag stig_id: 'CNTR-K8-003240'\n  tag gtitle: 'SRG-APP-000516-CTR-001330'\n  tag fix_id: 'F-45690r712726_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000366']\n  tag nist: ['CM-6 b']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242457.rb"},"title":"The Kubernetes kubelet config must be owned by root.","desc":"The Kubernetes kubelet agent registers nodes with the API Server and performs health checks to containers within pods. If this file can be modified, the information system would be unaware of pod or container degradation.","descriptions":{"default":"The Kubernetes kubelet agent registers nodes with the API Server and performs health checks to containers within pods. If this file can be modified, the information system would be unaware of pod or container degradation.","check":"Review the Kubernetes Kubeadm kubelet conf file by using the command:\n\nstat -c %U:%G /var/lib/kubelet/config.yaml| grep -v root:root\n\nIf the command returns any non root:root file permissions, this is a finding.","fix":"Change the ownership of the kubelet config to \"root: root\" by executing the command:\n\nchown root:root /var/lib/kubelet/config.yaml"},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45732r712725_chk","severity":"medium","gid":"V-242457","rid":"SV-242457r712727_rule","stig_id":"CNTR-K8-003240","gtitle":"SRG-APP-000516-CTR-001330","fix_id":"F-45690r712726_fix","documentable":null,"cci":["CCI-000366"],"nist":["CM-6 b"]}},{"id":"SV-242458","code":"control 'SV-242458' do\n  title 'The Kubernetes API Server must have file permissions set to 644 or more restrictive.'\n  desc 'The Kubernetes manifests are those files that contain the arguments and settings for the Master Node services. These services are etcd, the API Server, controller, proxy, and scheduler. If these files can be changed, the scheduler will be implementing the changes immediately. Many of the security settings within the document are implemented through these manifests.'\n  desc 'check', 'Review the permissions of the Kubernetes Kubelet by using the command:\n\nstat -c %a  /etc/kubernetes/manifests/*\n\nIf any of the files are have permissions more permissive than \"644\", this is a finding.'\n  desc 'fix', 'Change the permissions of the manifest files to \"root: root\" by executing the command:\n\nchown root:root /etc/kubernetes/manifests/*'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45733r712728_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242458'\n  tag rid: 'SV-242458r712730_rule'\n  tag stig_id: 'CNTR-K8-003250'\n  tag gtitle: 'SRG-APP-000516-CTR-001335'\n  tag fix_id: 'F-45691r712729_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000366']\n  tag nist: ['CM-6 b']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242458.rb"},"title":"The Kubernetes API Server must have file permissions set to 644 or more restrictive.","desc":"The Kubernetes manifests are those files that contain the arguments and settings for the Master Node services. These services are etcd, the API Server, controller, proxy, and scheduler. If these files can be changed, the scheduler will be implementing the changes immediately. Many of the security settings within the document are implemented through these manifests.","descriptions":{"default":"The Kubernetes manifests are those files that contain the arguments and settings for the Master Node services. These services are etcd, the API Server, controller, proxy, and scheduler. If these files can be changed, the scheduler will be implementing the changes immediately. Many of the security settings within the document are implemented through these manifests.","check":"Review the permissions of the Kubernetes Kubelet by using the command:\n\nstat -c %a  /etc/kubernetes/manifests/*\n\nIf any of the files are have permissions more permissive than \"644\", this is a finding.","fix":"Change the permissions of the manifest files to \"root: root\" by executing the command:\n\nchown root:root /etc/kubernetes/manifests/*"},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45733r712728_chk","severity":"medium","gid":"V-242458","rid":"SV-242458r712730_rule","stig_id":"CNTR-K8-003250","gtitle":"SRG-APP-000516-CTR-001335","fix_id":"F-45691r712729_fix","documentable":null,"cci":["CCI-000366"],"nist":["CM-6 b"]}},{"id":"SV-242459","code":"control 'SV-242459' do\n  title 'The Kubernetes etcd must have file permissions set to 644 or more restrictive.'\n  desc 'The Kubernetes etcd key-value store provides a way to store data to the Master Node. If these files can be changed, data to API object and master node would be compromised.'\n  desc 'check', 'Review the permissions of the Kubernetes etcd by using the command:\n\nstat -c %a  /var/lib/etcd/*\n\nIf any of the files are have permissions more permissive than \"644\", this is a finding.'\n  desc 'fix', 'Change the permissions of the manifest files to \"644\" by executing the command:\n\nchmod 644/var/lib/etcd/*'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45734r712731_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242459'\n  tag rid: 'SV-242459r712733_rule'\n  tag stig_id: 'CNTR-K8-003260'\n  tag gtitle: 'SRG-APP-000516-CTR-001335'\n  tag fix_id: 'F-45692r712732_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000366']\n  tag nist: ['CM-6 b']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242459.rb"},"title":"The Kubernetes etcd must have file permissions set to 644 or more restrictive.","desc":"The Kubernetes etcd key-value store provides a way to store data to the Master Node. If these files can be changed, data to API object and master node would be compromised.","descriptions":{"default":"The Kubernetes etcd key-value store provides a way to store data to the Master Node. If these files can be changed, data to API object and master node would be compromised.","check":"Review the permissions of the Kubernetes etcd by using the command:\n\nstat -c %a  /var/lib/etcd/*\n\nIf any of the files are have permissions more permissive than \"644\", this is a finding.","fix":"Change the permissions of the manifest files to \"644\" by executing the command:\n\nchmod 644/var/lib/etcd/*"},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45734r712731_chk","severity":"medium","gid":"V-242459","rid":"SV-242459r712733_rule","stig_id":"CNTR-K8-003260","gtitle":"SRG-APP-000516-CTR-001335","fix_id":"F-45692r712732_fix","documentable":null,"cci":["CCI-000366"],"nist":["CM-6 b"]}},{"id":"SV-242460","code":"control 'SV-242460' do\n  title 'The Kubernetes admin.conf must have file permissions set to 644 or more restrictive.'\n  desc 'The Kubernetes conf files contain the arguments and settings for the Master Node services. These services are controller and scheduler. If these files can be changed, the scheduler will be implementing the changes immediately.'\n  desc 'check', 'Review the permissions of the Kubernetes config files by using the command:\n\nstat -c %a /etc/kubernetes/admin.conf\nstat -c %a /etc/kubernetes/scheduler.conf\nstat -c %a /etc/kubernetes/controller-manager.conf\n\nIf any of the files are have permissions more permissive than \"644\", this is a finding.'\n  desc 'fix', 'Change the permissions of the conf files to \"644\" by executing the command:\n\nchmod 644 /etc/kubernetes/admin.conf \nchmod 644 /etc/kubernetes/scheduler.conf\nchmod 644 /etc/kubernetes/controller-manager.conf'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45735r712734_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242460'\n  tag rid: 'SV-242460r712736_rule'\n  tag stig_id: 'CNTR-K8-003270'\n  tag gtitle: 'SRG-APP-000516-CTR-001335'\n  tag fix_id: 'F-45693r712735_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000366']\n  tag nist: ['CM-6 b']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242460.rb"},"title":"The Kubernetes admin.conf must have file permissions set to 644 or more restrictive.","desc":"The Kubernetes conf files contain the arguments and settings for the Master Node services. These services are controller and scheduler. If these files can be changed, the scheduler will be implementing the changes immediately.","descriptions":{"default":"The Kubernetes conf files contain the arguments and settings for the Master Node services. These services are controller and scheduler. If these files can be changed, the scheduler will be implementing the changes immediately.","check":"Review the permissions of the Kubernetes config files by using the command:\n\nstat -c %a /etc/kubernetes/admin.conf\nstat -c %a /etc/kubernetes/scheduler.conf\nstat -c %a /etc/kubernetes/controller-manager.conf\n\nIf any of the files are have permissions more permissive than \"644\", this is a finding.","fix":"Change the permissions of the conf files to \"644\" by executing the command:\n\nchmod 644 /etc/kubernetes/admin.conf \nchmod 644 /etc/kubernetes/scheduler.conf\nchmod 644 /etc/kubernetes/controller-manager.conf"},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45735r712734_chk","severity":"medium","gid":"V-242460","rid":"SV-242460r712736_rule","stig_id":"CNTR-K8-003270","gtitle":"SRG-APP-000516-CTR-001335","fix_id":"F-45693r712735_fix","documentable":null,"cci":["CCI-000366"],"nist":["CM-6 b"]}},{"id":"SV-242461","code":"control 'SV-242461' do\n  title 'Kubernetes API Server audit logs must be enabled.'\n  desc 'Kubernetes API Server validates and configures pods and services for the API object. The REST operation provides frontend functionality to the cluster share state. Enabling audit logs provides a way to monitor and identify security risk events or misuse of information. Audit logs are necessary to provide evidence in the case the Kubernetes API Server is compromised requiring a Cyber Security Investigation.'\n  desc 'check', 'Change to the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Run the command:\n\ngrep -i audit-policy-file * \n\nIf the setting \"audit-policy-file\" is not set or is found in the Kubernetes API manifest file without valid content, this is a finding.'\n  desc 'fix', 'Edit the Kubernetes API Server manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Set the argument \"--audit-policy-file\" to \"log file directory\".'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45736r712737_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242461'\n  tag rid: 'SV-242461r712739_rule'\n  tag stig_id: 'CNTR-K8-003280'\n  tag gtitle: 'SRG-APP-000516-CTR-001335'\n  tag fix_id: 'F-45694r712738_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000366']\n  tag nist: ['CM-6 b']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242461.rb"},"title":"Kubernetes API Server audit logs must be enabled.","desc":"Kubernetes API Server validates and configures pods and services for the API object. The REST operation provides frontend functionality to the cluster share state. Enabling audit logs provides a way to monitor and identify security risk events or misuse of information. Audit logs are necessary to provide evidence in the case the Kubernetes API Server is compromised requiring a Cyber Security Investigation.","descriptions":{"default":"Kubernetes API Server validates and configures pods and services for the API object. The REST operation provides frontend functionality to the cluster share state. Enabling audit logs provides a way to monitor and identify security risk events or misuse of information. Audit logs are necessary to provide evidence in the case the Kubernetes API Server is compromised requiring a Cyber Security Investigation.","check":"Change to the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Run the command:\n\ngrep -i audit-policy-file * \n\nIf the setting \"audit-policy-file\" is not set or is found in the Kubernetes API manifest file without valid content, this is a finding.","fix":"Edit the Kubernetes API Server manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Set the argument \"--audit-policy-file\" to \"log file directory\"."},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45736r712737_chk","severity":"medium","gid":"V-242461","rid":"SV-242461r712739_rule","stig_id":"CNTR-K8-003280","gtitle":"SRG-APP-000516-CTR-001335","fix_id":"F-45694r712738_fix","documentable":null,"cci":["CCI-000366"],"nist":["CM-6 b"]}},{"id":"SV-242462","code":"control 'SV-242462' do\n  title 'The Kubernetes API Server must be set to audit log max size.'\n  desc 'The Kubernetes API Server must be set for enough storage to retain log information over the period required. When audit logs are large in size, the monitoring service for events becomes degraded. The function of the maximum log file size is to set these limits.'\n  desc 'check', 'Change to the /etc/kubernetes/manifests/ directory on the Kubernetes Master Node. Run the command:\n\ngrep -i audit-log-maxsize * \n\nIf the setting \"audit-log-maxsize\" is not set in the Kubernetes API Server manifest file or it is set to less than \"100\", this is a finding.'\n  desc 'fix', 'Edit the Kubernetes API Server manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Set the value of –\"--audit-log-maxsize\" to a minimum of \"100\".'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45737r712740_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242462'\n  tag rid: 'SV-242462r712742_rule'\n  tag stig_id: 'CNTR-K8-003290'\n  tag gtitle: 'SRG-APP-000516-CTR-001335'\n  tag fix_id: 'F-45695r712741_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000366']\n  tag nist: ['CM-6 b']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242462.rb"},"title":"The Kubernetes API Server must be set to audit log max size.","desc":"The Kubernetes API Server must be set for enough storage to retain log information over the period required. When audit logs are large in size, the monitoring service for events becomes degraded. The function of the maximum log file size is to set these limits.","descriptions":{"default":"The Kubernetes API Server must be set for enough storage to retain log information over the period required. When audit logs are large in size, the monitoring service for events becomes degraded. The function of the maximum log file size is to set these limits.","check":"Change to the /etc/kubernetes/manifests/ directory on the Kubernetes Master Node. Run the command:\n\ngrep -i audit-log-maxsize * \n\nIf the setting \"audit-log-maxsize\" is not set in the Kubernetes API Server manifest file or it is set to less than \"100\", this is a finding.","fix":"Edit the Kubernetes API Server manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Set the value of –\"--audit-log-maxsize\" to a minimum of \"100\"."},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45737r712740_chk","severity":"medium","gid":"V-242462","rid":"SV-242462r712742_rule","stig_id":"CNTR-K8-003290","gtitle":"SRG-APP-000516-CTR-001335","fix_id":"F-45695r712741_fix","documentable":null,"cci":["CCI-000366"],"nist":["CM-6 b"]}},{"id":"SV-242463","code":"control 'SV-242463' do\n  title 'The Kubernetes API Server must be set to audit log maximum backup.'\n  desc 'The Kubernetes API Server must set enough storage to retain logs for monitoring suspicious activity and system misconfiguration, and provide evidence for Cyber Security Investigations.'\n  desc 'check', 'Change to the /etc/kubernetes/manifests/ directory on the Kubernetes Master Node. Run the command:\n\ngrep -i audit-log-maxbackup * \n\nIf the setting \"audit-log-maxbackup\" is not set in the Kubernetes API Server manifest file or it is set less than \"10\", this is a finding.'\n  desc 'fix', 'Edit the Kubernetes API Server manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Set the value of \"--audit-log-maxbackup\" to a minimum of \"10\".'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45738r712743_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242463'\n  tag rid: 'SV-242463r712745_rule'\n  tag stig_id: 'CNTR-K8-003300'\n  tag gtitle: 'SRG-APP-000516-CTR-001335'\n  tag fix_id: 'F-45696r712744_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000366']\n  tag nist: ['CM-6 b']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242463.rb"},"title":"The Kubernetes API Server must be set to audit log maximum backup.","desc":"The Kubernetes API Server must set enough storage to retain logs for monitoring suspicious activity and system misconfiguration, and provide evidence for Cyber Security Investigations.","descriptions":{"default":"The Kubernetes API Server must set enough storage to retain logs for monitoring suspicious activity and system misconfiguration, and provide evidence for Cyber Security Investigations.","check":"Change to the /etc/kubernetes/manifests/ directory on the Kubernetes Master Node. Run the command:\n\ngrep -i audit-log-maxbackup * \n\nIf the setting \"audit-log-maxbackup\" is not set in the Kubernetes API Server manifest file or it is set less than \"10\", this is a finding.","fix":"Edit the Kubernetes API Server manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Set the value of \"--audit-log-maxbackup\" to a minimum of \"10\"."},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45738r712743_chk","severity":"medium","gid":"V-242463","rid":"SV-242463r712745_rule","stig_id":"CNTR-K8-003300","gtitle":"SRG-APP-000516-CTR-001335","fix_id":"F-45696r712744_fix","documentable":null,"cci":["CCI-000366"],"nist":["CM-6 b"]}},{"id":"SV-242464","code":"control 'SV-242464' do\n  title 'The Kubernetes API Server audit log retention must be set.'\n  desc 'The Kubernetes API Server must set enough storage to retain logs for monitoring suspicious activity and system misconfiguration, and provide evidence for Cyber Security Investigations.'\n  desc 'check', 'Change to the /etc/kubernetes/manifests/ directory on the Kubernetes Master Node. Run the command:\n\ngrep -i audit-log-maxage * \n\nIf the setting \"audit-log-path\" is not set in the Kubernetes API Server manifest file or it is set less than \"30\", this is a finding.'\n  desc 'fix', 'Edit the Kubernetes API Server manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Set the value of \"--audit-log-maxage\" to a minimum of \"30\".'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45739r712746_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242464'\n  tag rid: 'SV-242464r712748_rule'\n  tag stig_id: 'CNTR-K8-003310'\n  tag gtitle: 'SRG-APP-000516-CTR-001335'\n  tag fix_id: 'F-45697r712747_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000366']\n  tag nist: ['CM-6 b']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242464.rb"},"title":"The Kubernetes API Server audit log retention must be set.","desc":"The Kubernetes API Server must set enough storage to retain logs for monitoring suspicious activity and system misconfiguration, and provide evidence for Cyber Security Investigations.","descriptions":{"default":"The Kubernetes API Server must set enough storage to retain logs for monitoring suspicious activity and system misconfiguration, and provide evidence for Cyber Security Investigations.","check":"Change to the /etc/kubernetes/manifests/ directory on the Kubernetes Master Node. Run the command:\n\ngrep -i audit-log-maxage * \n\nIf the setting \"audit-log-path\" is not set in the Kubernetes API Server manifest file or it is set less than \"30\", this is a finding.","fix":"Edit the Kubernetes API Server manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Set the value of \"--audit-log-maxage\" to a minimum of \"30\"."},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45739r712746_chk","severity":"medium","gid":"V-242464","rid":"SV-242464r712748_rule","stig_id":"CNTR-K8-003310","gtitle":"SRG-APP-000516-CTR-001335","fix_id":"F-45697r712747_fix","documentable":null,"cci":["CCI-000366"],"nist":["CM-6 b"]}},{"id":"SV-242465","code":"control 'SV-242465' do\n  title 'The Kubernetes API Server audit log path must be set.'\n  desc 'Kubernetes API Server validates and configures pods and services for the API object. The REST operation provides frontend functionality to the cluster share state. Audit logs are necessary to provide evidence in the case the Kubernetes API Server is compromised requiring Cyber Security Investigation. To record events in the audit log the log path value must be set.'\n  desc 'check', 'Change to the /etc/kubernetes/manifests/ directory on the Kubernetes Master Node. Run the command:\n\ngrep -i audit-log-path * \n\nIf the setting audit-log-path is not set in the Kubernetes API Server manifest file or it is set to a valid path, this is a finding.'\n  desc 'fix', 'Edit the Kubernetes API Server manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Set the value of \"--audit-log-path\" to valid location.'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45740r712749_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242465'\n  tag rid: 'SV-242465r712751_rule'\n  tag stig_id: 'CNTR-K8-003320'\n  tag gtitle: 'SRG-APP-000516-CTR-001335'\n  tag fix_id: 'F-45698r712750_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000366']\n  tag nist: ['CM-6 b']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242465.rb"},"title":"The Kubernetes API Server audit log path must be set.","desc":"Kubernetes API Server validates and configures pods and services for the API object. The REST operation provides frontend functionality to the cluster share state. Audit logs are necessary to provide evidence in the case the Kubernetes API Server is compromised requiring Cyber Security Investigation. To record events in the audit log the log path value must be set.","descriptions":{"default":"Kubernetes API Server validates and configures pods and services for the API object. The REST operation provides frontend functionality to the cluster share state. Audit logs are necessary to provide evidence in the case the Kubernetes API Server is compromised requiring Cyber Security Investigation. To record events in the audit log the log path value must be set.","check":"Change to the /etc/kubernetes/manifests/ directory on the Kubernetes Master Node. Run the command:\n\ngrep -i audit-log-path * \n\nIf the setting audit-log-path is not set in the Kubernetes API Server manifest file or it is set to a valid path, this is a finding.","fix":"Edit the Kubernetes API Server manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Set the value of \"--audit-log-path\" to valid location."},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45740r712749_chk","severity":"medium","gid":"V-242465","rid":"SV-242465r712751_rule","stig_id":"CNTR-K8-003320","gtitle":"SRG-APP-000516-CTR-001335","fix_id":"F-45698r712750_fix","documentable":null,"cci":["CCI-000366"],"nist":["CM-6 b"]}},{"id":"SV-242466","code":"control 'SV-242466' do\n  title 'The Kubernetes PKI CRT must have file permissions set to 644 or more restrictive.'\n  desc 'The Kubernetes PKI directory contains all certificates (.crt files) supporting secure network communications in the Kubernetes Control Plane. If these files can be modified, data traversing within the architecture components would become unsecure and compromised.'\n  desc 'check', %q(Review the permissions of the Kubernetes PKI cert files by using the command:\n\nfind /etc/kubernetes/pki -name \"*.crt\" | xargs stat -c '%n %a'\n\nIf any of the files are have permissions more permissive than \"644\", this is a finding.)\n  desc 'fix', 'Change the ownership of the cert files to \"644\" by executing the command:\n\nchmod -R 644 /etc/kubernetes/pki/*.crt'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45741r712752_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242466'\n  tag rid: 'SV-242466r712754_rule'\n  tag stig_id: 'CNTR-K8-003330'\n  tag gtitle: 'SRG-APP-000516-CTR-001335'\n  tag fix_id: 'F-45699r712753_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000366']\n  tag nist: ['CM-6 b']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242466.rb"},"title":"The Kubernetes PKI CRT must have file permissions set to 644 or more restrictive.","desc":"The Kubernetes PKI directory contains all certificates (.crt files) supporting secure network communications in the Kubernetes Control Plane. If these files can be modified, data traversing within the architecture components would become unsecure and compromised.","descriptions":{"default":"The Kubernetes PKI directory contains all certificates (.crt files) supporting secure network communications in the Kubernetes Control Plane. If these files can be modified, data traversing within the architecture components would become unsecure and compromised.","check":"Review the permissions of the Kubernetes PKI cert files by using the command:\n\nfind /etc/kubernetes/pki -name \"*.crt\" | xargs stat -c '%n %a'\n\nIf any of the files are have permissions more permissive than \"644\", this is a finding.","fix":"Change the ownership of the cert files to \"644\" by executing the command:\n\nchmod -R 644 /etc/kubernetes/pki/*.crt"},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45741r712752_chk","severity":"medium","gid":"V-242466","rid":"SV-242466r712754_rule","stig_id":"CNTR-K8-003330","gtitle":"SRG-APP-000516-CTR-001335","fix_id":"F-45699r712753_fix","documentable":null,"cci":["CCI-000366"],"nist":["CM-6 b"]}},{"id":"SV-242467","code":"control 'SV-242467' do\n  title 'The Kubernetes PKI keys must have file permissions set to 600 or more restrictive.'\n  desc 'The Kubernetes PKI directory contains all certificate key files supporting secure network communications in the Kubernetes Control Plane. If these files can be modified, data traversing within the architecture components would become unsecure and compromised.'\n  desc 'check', %q(Review the permissions of the Kubernetes PKI key files by using the command:\n\nfind /etc/kubernetes/pki -name \"*.key\" | xargs stat -c '%n %a'\n\nIf any of the files are have permissions more permissive than \"600\", this is a finding.)\n  desc 'fix', 'Change the ownership of the cert files to \"600\" by executing the command:\n\nchmod -R 600 /etc/kubernetes/pki/*.key'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45742r712755_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242467'\n  tag rid: 'SV-242467r712757_rule'\n  tag stig_id: 'CNTR-K8-003340'\n  tag gtitle: 'SRG-APP-000516-CTR-001335'\n  tag fix_id: 'F-45700r712756_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000366']\n  tag nist: ['CM-6 b']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242467.rb"},"title":"The Kubernetes PKI keys must have file permissions set to 600 or more restrictive.","desc":"The Kubernetes PKI directory contains all certificate key files supporting secure network communications in the Kubernetes Control Plane. If these files can be modified, data traversing within the architecture components would become unsecure and compromised.","descriptions":{"default":"The Kubernetes PKI directory contains all certificate key files supporting secure network communications in the Kubernetes Control Plane. If these files can be modified, data traversing within the architecture components would become unsecure and compromised.","check":"Review the permissions of the Kubernetes PKI key files by using the command:\n\nfind /etc/kubernetes/pki -name \"*.key\" | xargs stat -c '%n %a'\n\nIf any of the files are have permissions more permissive than \"600\", this is a finding.","fix":"Change the ownership of the cert files to \"600\" by executing the command:\n\nchmod -R 600 /etc/kubernetes/pki/*.key"},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45742r712755_chk","severity":"medium","gid":"V-242467","rid":"SV-242467r712757_rule","stig_id":"CNTR-K8-003340","gtitle":"SRG-APP-000516-CTR-001335","fix_id":"F-45700r712756_fix","documentable":null,"cci":["CCI-000366"],"nist":["CM-6 b"]}},{"id":"SV-242468","code":"control 'SV-242468' do\n  title 'The Kubernetes API Server must prohibit communication using TLS version 1.0 and 1.1, and SSL 2.0 and 3.0.'\n  desc 'The Kubernetes API Server will prohibit the use of SSL and unauthorized versions of TLS protocols to properly secure communication.\n\nThe use of unsupported protocol exposes vulnerabilities to Kubernetes by rogue traffic interceptions, man-in-the middle attacks, and impersonation of users or services from the container platform runtime, registry, and keystore. To enable the minimum version of TLS to be used by the Kubernetes API Server, the setting \"tls-min-version\" must be set.\n\nThe container platform and its components will adhere to NIST 800-52R2.'\n  desc 'check', 'Change to the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Run the command:\n\ngrep -i tls-min-version * \n\nIf the setting tls-min-version is not configured in the Kubernetes API Server manifest file or it is set to \"VersionTLS10\" or \"VersionTLS11\", this is a finding.'\n  desc 'fix', 'Edit the Kubernetes API Server manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Set the value of \"--tls-min-version\" to either \"VersionTLS12\" or higher.'\n  impact 0.5\n  ref 'DPMS Target Kubernetes'\n  tag check_id: 'C-45743r712758_chk'\n  tag severity: 'medium'\n  tag gid: 'V-242468'\n  tag rid: 'SV-242468r712760_rule'\n  tag stig_id: 'CNTR-K8-003350'\n  tag gtitle: 'SRG-APP-000560-CTR-001340'\n  tag fix_id: 'F-45701r712759_fix'\n  tag 'documentable'\n  tag cci: ['CCI-001453']\n  tag nist: ['AC-17 (2)']\nend","source_location":{"line":1,"ref":"U_Kubernetes_STIG_V1R1/controls/SV-242468.rb"},"title":"The Kubernetes API Server must prohibit communication using TLS version 1.0 and 1.1, and SSL 2.0 and 3.0.","desc":"The Kubernetes API Server will prohibit the use of SSL and unauthorized versions of TLS protocols to properly secure communication.\n\nThe use of unsupported protocol exposes vulnerabilities to Kubernetes by rogue traffic interceptions, man-in-the middle attacks, and impersonation of users or services from the container platform runtime, registry, and keystore. To enable the minimum version of TLS to be used by the Kubernetes API Server, the setting \"tls-min-version\" must be set.\n\nThe container platform and its components will adhere to NIST 800-52R2.","descriptions":{"default":"The Kubernetes API Server will prohibit the use of SSL and unauthorized versions of TLS protocols to properly secure communication.\n\nThe use of unsupported protocol exposes vulnerabilities to Kubernetes by rogue traffic interceptions, man-in-the middle attacks, and impersonation of users or services from the container platform runtime, registry, and keystore. To enable the minimum version of TLS to be used by the Kubernetes API Server, the setting \"tls-min-version\" must be set.\n\nThe container platform and its components will adhere to NIST 800-52R2.","check":"Change to the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Run the command:\n\ngrep -i tls-min-version * \n\nIf the setting tls-min-version is not configured in the Kubernetes API Server manifest file or it is set to \"VersionTLS10\" or \"VersionTLS11\", this is a finding.","fix":"Edit the Kubernetes API Server manifest file in the /etc/kubernetes/manifests directory on the Kubernetes Master Node. Set the value of \"--tls-min-version\" to either \"VersionTLS12\" or higher."},"impact":0.5,"refs":[{"ref":"DPMS Target Kubernetes"}],"tags":{"check_id":"C-45743r712758_chk","severity":"medium","gid":"V-242468","rid":"SV-242468r712760_rule","stig_id":"CNTR-K8-003350","gtitle":"SRG-APP-000560-CTR-001340","fix_id":"F-45701r712759_fix","documentable":null,"cci":["CCI-001453"],"nist":["AC-17 (2)"]}}],"groups":[{"id":"controls/SV-242376.rb","title":null,"controls":["SV-242376"]},{"id":"controls/SV-242377.rb","title":null,"controls":["SV-242377"]},{"id":"controls/SV-242378.rb","title":null,"controls":["SV-242378"]},{"id":"controls/SV-242379.rb","title":null,"controls":["SV-242379"]},{"id":"controls/SV-242380.rb","title":null,"controls":["SV-242380"]},{"id":"controls/SV-242381.rb","title":null,"controls":["SV-242381"]},{"id":"controls/SV-242382.rb","title":null,"controls":["SV-242382"]},{"id":"controls/SV-242383.rb","title":null,"controls":["SV-242383"]},{"id":"controls/SV-242384.rb","title":null,"controls":["SV-242384"]},{"id":"controls/SV-242385.rb","title":null,"controls":["SV-242385"]},{"id":"controls/SV-242386.rb","title":null,"controls":["SV-242386"]},{"id":"controls/SV-242387.rb","title":null,"controls":["SV-242387"]},{"id":"controls/SV-242388.rb","title":null,"controls":["SV-242388"]},{"id":"controls/SV-242389.rb","title":null,"controls":["SV-242389"]},{"id":"controls/SV-242390.rb","title":null,"controls":["SV-242390"]},{"id":"controls/SV-242391.rb","title":null,"controls":["SV-242391"]},{"id":"controls/SV-242392.rb","title":null,"controls":["SV-242392"]},{"id":"controls/SV-242393.rb","title":null,"controls":["SV-242393"]},{"id":"controls/SV-242394.rb","title":null,"controls":["SV-242394"]},{"id":"controls/SV-242395.rb","title":null,"controls":["SV-242395"]},{"id":"controls/SV-242396.rb","title":null,"controls":["SV-242396"]},{"id":"controls/SV-242397.rb","title":null,"controls":["SV-242397"]},{"id":"controls/SV-242398.rb","title":null,"controls":["SV-242398"]},{"id":"controls/SV-242399.rb","title":null,"controls":["SV-242399"]},{"id":"controls/SV-242400.rb","title":null,"controls":["SV-242400"]},{"id":"controls/SV-242401.rb","title":null,"controls":["SV-242401"]},{"id":"controls/SV-242402.rb","title":null,"controls":["SV-242402"]},{"id":"controls/SV-242403.rb","title":null,"controls":["SV-242403"]},{"id":"controls/SV-242404.rb","title":null,"controls":["SV-242404"]},{"id":"controls/SV-242405.rb","title":null,"controls":["SV-242405"]},{"id":"controls/SV-242406.rb","title":null,"controls":["SV-242406"]},{"id":"controls/SV-242407.rb","title":null,"controls":["SV-242407"]},{"id":"controls/SV-242408.rb","title":null,"controls":["SV-242408"]},{"id":"controls/SV-242409.rb","title":null,"controls":["SV-242409"]},{"id":"controls/SV-242410.rb","title":null,"controls":["SV-242410"]},{"id":"controls/SV-242411.rb","title":null,"controls":["SV-242411"]},{"id":"controls/SV-242412.rb","title":null,"controls":["SV-242412"]},{"id":"controls/SV-242413.rb","title":null,"controls":["SV-242413"]},{"id":"controls/SV-242414.rb","title":null,"controls":["SV-242414"]},{"id":"controls/SV-242415.rb","title":null,"controls":["SV-242415"]},{"id":"controls/SV-242416.rb","title":null,"controls":["SV-242416"]},{"id":"controls/SV-242417.rb","title":null,"controls":["SV-242417"]},{"id":"controls/SV-242418.rb","title":null,"controls":["SV-242418"]},{"id":"controls/SV-242419.rb","title":null,"controls":["SV-242419"]},{"id":"controls/SV-242420.rb","title":null,"controls":["SV-242420"]},{"id":"controls/SV-242421.rb","title":null,"controls":["SV-242421"]},{"id":"controls/SV-242422.rb","title":null,"controls":["SV-242422"]},{"id":"controls/SV-242423.rb","title":null,"controls":["SV-242423"]},{"id":"controls/SV-242424.rb","title":null,"controls":["SV-242424"]},{"id":"controls/SV-242425.rb","title":null,"controls":["SV-242425"]},{"id":"controls/SV-242426.rb","title":null,"controls":["SV-242426"]},{"id":"controls/SV-242427.rb","title":null,"controls":["SV-242427"]},{"id":"controls/SV-242428.rb","title":null,"controls":["SV-242428"]},{"id":"controls/SV-242429.rb","title":null,"controls":["SV-242429"]},{"id":"controls/SV-242430.rb","title":null,"controls":["SV-242430"]},{"id":"controls/SV-242431.rb","title":null,"controls":["SV-242431"]},{"id":"controls/SV-242432.rb","title":null,"controls":["SV-242432"]},{"id":"controls/SV-242433.rb","title":null,"controls":["SV-242433"]},{"id":"controls/SV-242434.rb","title":null,"controls":["SV-242434"]},{"id":"controls/SV-242435.rb","title":null,"controls":["SV-242435"]},{"id":"controls/SV-242436.rb","title":null,"controls":["SV-242436"]},{"id":"controls/SV-242437.rb","title":null,"controls":["SV-242437"]},{"id":"controls/SV-242438.rb","title":null,"controls":["SV-242438"]},{"id":"controls/SV-242439.rb","title":null,"controls":["SV-242439"]},{"id":"controls/SV-242440.rb","title":null,"controls":["SV-242440"]},{"id":"controls/SV-242441.rb","title":null,"controls":["SV-242441"]},{"id":"controls/SV-242442.rb","title":null,"controls":["SV-242442"]},{"id":"controls/SV-242443.rb","title":null,"controls":["SV-242443"]},{"id":"controls/SV-242444.rb","title":null,"controls":["SV-242444"]},{"id":"controls/SV-242445.rb","title":null,"controls":["SV-242445"]},{"id":"controls/SV-242446.rb","title":null,"controls":["SV-242446"]},{"id":"controls/SV-242447.rb","title":null,"controls":["SV-242447"]},{"id":"controls/SV-242448.rb","title":null,"controls":["SV-242448"]},{"id":"controls/SV-242449.rb","title":null,"controls":["SV-242449"]},{"id":"controls/SV-242450.rb","title":null,"controls":["SV-242450"]},{"id":"controls/SV-242451.rb","title":null,"controls":["SV-242451"]},{"id":"controls/SV-242452.rb","title":null,"controls":["SV-242452"]},{"id":"controls/SV-242453.rb","title":null,"controls":["SV-242453"]},{"id":"controls/SV-242454.rb","title":null,"controls":["SV-242454"]},{"id":"controls/SV-242455.rb","title":null,"controls":["SV-242455"]},{"id":"controls/SV-242456.rb","title":null,"controls":["SV-242456"]},{"id":"controls/SV-242457.rb","title":null,"controls":["SV-242457"]},{"id":"controls/SV-242458.rb","title":null,"controls":["SV-242458"]},{"id":"controls/SV-242459.rb","title":null,"controls":["SV-242459"]},{"id":"controls/SV-242460.rb","title":null,"controls":["SV-242460"]},{"id":"controls/SV-242461.rb","title":null,"controls":["SV-242461"]},{"id":"controls/SV-242462.rb","title":null,"controls":["SV-242462"]},{"id":"controls/SV-242463.rb","title":null,"controls":["SV-242463"]},{"id":"controls/SV-242464.rb","title":null,"controls":["SV-242464"]},{"id":"controls/SV-242465.rb","title":null,"controls":["SV-242465"]},{"id":"controls/SV-242466.rb","title":null,"controls":["SV-242466"]},{"id":"controls/SV-242467.rb","title":null,"controls":["SV-242467"]},{"id":"controls/SV-242468.rb","title":null,"controls":["SV-242468"]}],"name":"Kubernetes_STIG","title":null,"maintainer":null,"copyright":null,"copyright_email":null,"license":null,"summary":null,"description":null,"version":"1.0.0","supports":[],"depends":[],"inspec_version":null,"inputs":[],"sha256":"e5d64470cdb893d6f42dc6e64a0349291e83a32f294a684e157284671df5baf1","status_message":"","status":"loaded","generator":{"name":"inspec","version":"6.6.0"}}
