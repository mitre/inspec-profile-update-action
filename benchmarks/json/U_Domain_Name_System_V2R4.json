{"controls":[{"id":"SV-69023","code":"control 'SV-69023' do\n  title 'The DNS implementation must limit the number of concurrent sessions client connections to the number of allowed dynamic update clients.'\n  desc \"Limiting the number of concurrent sessions reduces the risk of Denial of Service (DoS) to the DNS implementation. \n\nName servers do not have direct user connections but accept client connections for queries. Original restriction on client connections should be high enough to prevent a self-imposed denial of service, after which the connections are monitored and fine-tuned to best meet the organization's specific requirements.\n\nPrimary name servers also make outbound connections to secondary name servers to provide zone transfers and accept inbound connection requests from clients wishing to provide a dynamic update. Primary name servers should explicitly limit zone transfers to only be made to designated secondary name servers. Because zone transfers involve the transfer of entire zones and use TCP connections, they place substantial demands on network resources relative to normal DNS queries. Errant or malicious frequent zone transfer requests on the name servers of the enterprise can overload the master zone server and result in DoS to legitimate users. Primary name servers should be configured to limit the hosts from which they will accept dynamic updates.\n\nAdditionally the number of concurrent clients, especially TCP clients, needs to be kept to a level that does not risk placing the system in a DoS state.\"\n  desc 'check', 'Review the DNS server configuration and ensure a limit has been defined for the number of inbound dynamic update sessions by defining the finite group of hosts allowed to provide those dynamic updates. \n\nIf the DNS server configuration does not explicitly specify which hosts from which it accepts dynamic updates, this is a finding.'\n  desc 'fix', 'Configure the DNS primary server to explicitly specify which hosts from which it accepts dynamic updates.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55399r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54777'\n  tag rid: 'SV-69023r1_rule'\n  tag stig_id: 'SRG-APP-000001-DNS-000115'\n  tag gtitle: 'SRG-APP-000001-DNS-000115'\n  tag fix_id: 'F-59635r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000054']\n  tag nist: ['AC-10']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69023.rb"},"title":"The DNS implementation must limit the number of concurrent sessions client connections to the number of allowed dynamic update clients.","desc":"Limiting the number of concurrent sessions reduces the risk of Denial of Service (DoS) to the DNS implementation. \n\nName servers do not have direct user connections but accept client connections for queries. Original restriction on client connections should be high enough to prevent a self-imposed denial of service, after which the connections are monitored and fine-tuned to best meet the organization's specific requirements.\n\nPrimary name servers also make outbound connections to secondary name servers to provide zone transfers and accept inbound connection requests from clients wishing to provide a dynamic update. Primary name servers should explicitly limit zone transfers to only be made to designated secondary name servers. Because zone transfers involve the transfer of entire zones and use TCP connections, they place substantial demands on network resources relative to normal DNS queries. Errant or malicious frequent zone transfer requests on the name servers of the enterprise can overload the master zone server and result in DoS to legitimate users. Primary name servers should be configured to limit the hosts from which they will accept dynamic updates.\n\nAdditionally the number of concurrent clients, especially TCP clients, needs to be kept to a level that does not risk placing the system in a DoS state.","descriptions":{"default":"Limiting the number of concurrent sessions reduces the risk of Denial of Service (DoS) to the DNS implementation. \n\nName servers do not have direct user connections but accept client connections for queries. Original restriction on client connections should be high enough to prevent a self-imposed denial of service, after which the connections are monitored and fine-tuned to best meet the organization's specific requirements.\n\nPrimary name servers also make outbound connections to secondary name servers to provide zone transfers and accept inbound connection requests from clients wishing to provide a dynamic update. Primary name servers should explicitly limit zone transfers to only be made to designated secondary name servers. Because zone transfers involve the transfer of entire zones and use TCP connections, they place substantial demands on network resources relative to normal DNS queries. Errant or malicious frequent zone transfer requests on the name servers of the enterprise can overload the master zone server and result in DoS to legitimate users. Primary name servers should be configured to limit the hosts from which they will accept dynamic updates.\n\nAdditionally the number of concurrent clients, especially TCP clients, needs to be kept to a level that does not risk placing the system in a DoS state.","check":"Review the DNS server configuration and ensure a limit has been defined for the number of inbound dynamic update sessions by defining the finite group of hosts allowed to provide those dynamic updates. \n\nIf the DNS server configuration does not explicitly specify which hosts from which it accepts dynamic updates, this is a finding.","fix":"Configure the DNS primary server to explicitly specify which hosts from which it accepts dynamic updates."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55399r1_chk","severity":"medium","gid":"V-54777","rid":"SV-69023r1_rule","stig_id":"SRG-APP-000001-DNS-000115","gtitle":"SRG-APP-000001-DNS-000115","fix_id":"F-59635r1_fix","documentable":null,"cci":["CCI-000054"],"nist":["AC-10"]}},{"id":"SV-69027","code":"control 'SV-69027' do\n  title 'The DNS server implementation must be configured to provide audit record generation capability for DoD-defined auditable events within all DNS server components.'\n  desc 'Without the capability to generate audit records, it would be difficult to establish, correlate, and investigate the events relating to an incident, or identify those responsible for one. The actual auditing is performed by the OS/NDM, but the configuration to trigger the auditing is controlled by the DNS server.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records. \n\nThe DoD has defined the list of events for which the application will provide an audit record generation capability as the following: \n\n(i) Successful and unsuccessful attempts to access, modify, or delete privileges, security objects, security levels, or categories of information (e.g., classification levels);\n\n(ii) Access actions, such as successful and unsuccessful logon attempts, privileged activities or other system-level access, starting and ending time for user access to the system, concurrent logons from different workstations, successful and unsuccessful accesses to objects, all program initiations, and all direct access to the information system; and\n\n(iii) All account creation, modification, disabling, and termination actions.'\n  desc 'check', 'Review the DNS server implementation configuration to determine if the DNS server is configured to generate audit events for successful and unsuccessful attempts to access, modify, or delete privileges, security objects, security levels, or categories of information (e.g., classification levels) events within all DNS server components. \n\nIf the DNS server is not configured to generate audit events for successful and unsuccessful attempts to access, modify, or delete privileges, security objects, security levels, or categories of information (e.g., classification levels) events within all DNS server components, this is a finding.'\n  desc 'fix', 'Configure the DNS server to generate events for successful and unsuccessful attempts to access, modify, or delete privileges, security objects, security levels, or categories of information (e.g., classification levels) events within all DNS server components.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55403r2_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54781'\n  tag rid: 'SV-69027r1_rule'\n  tag stig_id: 'SRG-APP-000089-DNS-000004'\n  tag gtitle: 'SRG-APP-000089-DNS-000004'\n  tag fix_id: 'F-59639r2_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000169']\n  tag nist: ['AU-12 a']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69027.rb"},"title":"The DNS server implementation must be configured to provide audit record generation capability for DoD-defined auditable events within all DNS server components.","desc":"Without the capability to generate audit records, it would be difficult to establish, correlate, and investigate the events relating to an incident, or identify those responsible for one. The actual auditing is performed by the OS/NDM, but the configuration to trigger the auditing is controlled by the DNS server.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records. \n\nThe DoD has defined the list of events for which the application will provide an audit record generation capability as the following: \n\n(i) Successful and unsuccessful attempts to access, modify, or delete privileges, security objects, security levels, or categories of information (e.g., classification levels);\n\n(ii) Access actions, such as successful and unsuccessful logon attempts, privileged activities or other system-level access, starting and ending time for user access to the system, concurrent logons from different workstations, successful and unsuccessful accesses to objects, all program initiations, and all direct access to the information system; and\n\n(iii) All account creation, modification, disabling, and termination actions.","descriptions":{"default":"Without the capability to generate audit records, it would be difficult to establish, correlate, and investigate the events relating to an incident, or identify those responsible for one. The actual auditing is performed by the OS/NDM, but the configuration to trigger the auditing is controlled by the DNS server.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records. \n\nThe DoD has defined the list of events for which the application will provide an audit record generation capability as the following: \n\n(i) Successful and unsuccessful attempts to access, modify, or delete privileges, security objects, security levels, or categories of information (e.g., classification levels);\n\n(ii) Access actions, such as successful and unsuccessful logon attempts, privileged activities or other system-level access, starting and ending time for user access to the system, concurrent logons from different workstations, successful and unsuccessful accesses to objects, all program initiations, and all direct access to the information system; and\n\n(iii) All account creation, modification, disabling, and termination actions.","check":"Review the DNS server implementation configuration to determine if the DNS server is configured to generate audit events for successful and unsuccessful attempts to access, modify, or delete privileges, security objects, security levels, or categories of information (e.g., classification levels) events within all DNS server components. \n\nIf the DNS server is not configured to generate audit events for successful and unsuccessful attempts to access, modify, or delete privileges, security objects, security levels, or categories of information (e.g., classification levels) events within all DNS server components, this is a finding.","fix":"Configure the DNS server to generate events for successful and unsuccessful attempts to access, modify, or delete privileges, security objects, security levels, or categories of information (e.g., classification levels) events within all DNS server components."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55403r2_chk","severity":"medium","gid":"V-54781","rid":"SV-69027r1_rule","stig_id":"SRG-APP-000089-DNS-000004","gtitle":"SRG-APP-000089-DNS-000004","fix_id":"F-59639r2_fix","documentable":null,"cci":["CCI-000169"],"nist":["AU-12 a"]}},{"id":"SV-69029","code":"control 'SV-69029' do\n  title 'The DNS server implementation must be configured to provide audit record generation capability for DoD-defined auditable events within all DNS server components.'\n  desc 'Without the capability to generate audit records, it would be difficult to establish, correlate, and investigate the events relating to an incident, or identify those responsible for one. The actual auditing is performed by the OS/NDM, but the configuration to trigger the auditing is controlled by the DNS server.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records. \n\nThe DoD has defined the list of events for which the application will provide an audit record generation capability as the following: \n\n(i) Successful and unsuccessful attempts to access, modify, or delete privileges, security objects, security levels, or categories of information (e.g., classification levels);\n\n(ii) Access actions, such as successful and unsuccessful logon attempts, privileged activities or other system-level access, starting and ending time for user access to the system, concurrent logons from different workstations, successful and unsuccessful accesses to objects, all program initiations, and all direct access to the information system; and\n\n(iii) All account creation, modification, disabling, and termination actions.'\n  desc 'check', 'Review the DNS server implementation configuration to determine if the DNS server is configured to generate audit events for successful and unsuccessful logon attempts, privileged activities and system-level access.\n\nIf the DNS server is not configured to generate audit events for successful and unsuccessful logon attempts, privileged activities and system-level access, this is a finding.'\n  desc 'fix', 'Configure the DNS server to generate audit events for successful and unsuccessful logon attempts, privileged activities and system-level access within all DNS server components.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55405r2_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54783'\n  tag rid: 'SV-69029r1_rule'\n  tag stig_id: 'SRG-APP-000089-DNS-000005'\n  tag gtitle: 'SRG-APP-000089-DNS-000005'\n  tag fix_id: 'F-59641r2_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000169']\n  tag nist: ['AU-12 a']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69029.rb"},"title":"The DNS server implementation must be configured to provide audit record generation capability for DoD-defined auditable events within all DNS server components.","desc":"Without the capability to generate audit records, it would be difficult to establish, correlate, and investigate the events relating to an incident, or identify those responsible for one. The actual auditing is performed by the OS/NDM, but the configuration to trigger the auditing is controlled by the DNS server.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records. \n\nThe DoD has defined the list of events for which the application will provide an audit record generation capability as the following: \n\n(i) Successful and unsuccessful attempts to access, modify, or delete privileges, security objects, security levels, or categories of information (e.g., classification levels);\n\n(ii) Access actions, such as successful and unsuccessful logon attempts, privileged activities or other system-level access, starting and ending time for user access to the system, concurrent logons from different workstations, successful and unsuccessful accesses to objects, all program initiations, and all direct access to the information system; and\n\n(iii) All account creation, modification, disabling, and termination actions.","descriptions":{"default":"Without the capability to generate audit records, it would be difficult to establish, correlate, and investigate the events relating to an incident, or identify those responsible for one. The actual auditing is performed by the OS/NDM, but the configuration to trigger the auditing is controlled by the DNS server.\n\nThe list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records. \n\nThe DoD has defined the list of events for which the application will provide an audit record generation capability as the following: \n\n(i) Successful and unsuccessful attempts to access, modify, or delete privileges, security objects, security levels, or categories of information (e.g., classification levels);\n\n(ii) Access actions, such as successful and unsuccessful logon attempts, privileged activities or other system-level access, starting and ending time for user access to the system, concurrent logons from different workstations, successful and unsuccessful accesses to objects, all program initiations, and all direct access to the information system; and\n\n(iii) All account creation, modification, disabling, and termination actions.","check":"Review the DNS server implementation configuration to determine if the DNS server is configured to generate audit events for successful and unsuccessful logon attempts, privileged activities and system-level access.\n\nIf the DNS server is not configured to generate audit events for successful and unsuccessful logon attempts, privileged activities and system-level access, this is a finding.","fix":"Configure the DNS server to generate audit events for successful and unsuccessful logon attempts, privileged activities and system-level access within all DNS server components."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55405r2_chk","severity":"medium","gid":"V-54783","rid":"SV-69029r1_rule","stig_id":"SRG-APP-000089-DNS-000005","gtitle":"SRG-APP-000089-DNS-000005","fix_id":"F-59641r2_fix","documentable":null,"cci":["CCI-000169"],"nist":["AU-12 a"]}},{"id":"SV-69031","code":"control 'SV-69031' do\n  title 'The DNS server implementation must produce audit records containing information to establish what type of events occurred.'\n  desc 'Auditing and logging are key components of any security architecture. It is essential for security personnel to know what is being performed on the system, where an event occurred, when an event occurred, and by whom the event was triggered, in order to compile an accurate risk assessment. Logging the actions of specific events provides a means to investigate an attack, recognize resource utilization or capacity thresholds, or to simply identify an improperly configured DNS implementation. Without log records that aid in the establishment of what types of events occurred and when those events occurred, there is no traceability for forensic or analytical purposes, and the cause of events is severely hindered.'\n  desc 'check', 'Review the DNS system configuration to determine if it is configured to log sufficient information to establish what type of events has occurred on the system. \n\nIf the logging function is not configured to produce log records with information regarding the type of event, this is a finding.'\n  desc 'fix', 'Configure the DNS server to log events with enough information to determine what type of event has occurred on the system.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55407r2_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54785'\n  tag rid: 'SV-69031r1_rule'\n  tag stig_id: 'SRG-APP-000095-DNS-000006'\n  tag gtitle: 'SRG-APP-000095-DNS-000006'\n  tag fix_id: 'F-59643r2_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000130']\n  tag nist: ['AU-3 a']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69031.rb"},"title":"The DNS server implementation must produce audit records containing information to establish what type of events occurred.","desc":"Auditing and logging are key components of any security architecture. It is essential for security personnel to know what is being performed on the system, where an event occurred, when an event occurred, and by whom the event was triggered, in order to compile an accurate risk assessment. Logging the actions of specific events provides a means to investigate an attack, recognize resource utilization or capacity thresholds, or to simply identify an improperly configured DNS implementation. Without log records that aid in the establishment of what types of events occurred and when those events occurred, there is no traceability for forensic or analytical purposes, and the cause of events is severely hindered.","descriptions":{"default":"Auditing and logging are key components of any security architecture. It is essential for security personnel to know what is being performed on the system, where an event occurred, when an event occurred, and by whom the event was triggered, in order to compile an accurate risk assessment. Logging the actions of specific events provides a means to investigate an attack, recognize resource utilization or capacity thresholds, or to simply identify an improperly configured DNS implementation. Without log records that aid in the establishment of what types of events occurred and when those events occurred, there is no traceability for forensic or analytical purposes, and the cause of events is severely hindered.","check":"Review the DNS system configuration to determine if it is configured to log sufficient information to establish what type of events has occurred on the system. \n\nIf the logging function is not configured to produce log records with information regarding the type of event, this is a finding.","fix":"Configure the DNS server to log events with enough information to determine what type of event has occurred on the system."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55407r2_chk","severity":"medium","gid":"V-54785","rid":"SV-69031r1_rule","stig_id":"SRG-APP-000095-DNS-000006","gtitle":"SRG-APP-000095-DNS-000006","fix_id":"F-59643r2_fix","documentable":null,"cci":["CCI-000130"],"nist":["AU-3 a"]}},{"id":"SV-69033","code":"control 'SV-69033' do\n  title 'The DNS server implementation must produce audit records containing information to establish where the events occurred.'\n  desc 'Without establishing where events occurred, it is impossible to establish, correlate, and investigate the events relating to an incident. Associating information about where the event occurred within the application provides a means of investigating an attack, recognizing resource utilization or capacity thresholds, or identifying an improperly configured application. In order to compile an accurate risk assessment and provide forensic analysis, it is essential for security personnel to know where events occurred, such as application components, modules, session identifiers, filenames, host names, and functionality.'\n  desc 'check', 'Review the DNS system configuration to determine if it is configured to produce, capture and store log records which contain information to establish where events have occurred on the system. \n\nIf the logging function is not configured to produce log records with information regarding where the event took place, this is a finding.'\n  desc 'fix', 'Configure the DNS server to produce log records that contain information that establishes where events have occurred.\n\nAdditionally, configure the audit facility of the DNS system to provide information where events have occurred.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55409r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54787'\n  tag rid: 'SV-69033r1_rule'\n  tag stig_id: 'SRG-APP-000097-DNS-000008'\n  tag gtitle: 'SRG-APP-000097-DNS-000008'\n  tag fix_id: 'F-59645r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000132']\n  tag nist: ['AU-3 c']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69033.rb"},"title":"The DNS server implementation must produce audit records containing information to establish where the events occurred.","desc":"Without establishing where events occurred, it is impossible to establish, correlate, and investigate the events relating to an incident. Associating information about where the event occurred within the application provides a means of investigating an attack, recognizing resource utilization or capacity thresholds, or identifying an improperly configured application. In order to compile an accurate risk assessment and provide forensic analysis, it is essential for security personnel to know where events occurred, such as application components, modules, session identifiers, filenames, host names, and functionality.","descriptions":{"default":"Without establishing where events occurred, it is impossible to establish, correlate, and investigate the events relating to an incident. Associating information about where the event occurred within the application provides a means of investigating an attack, recognizing resource utilization or capacity thresholds, or identifying an improperly configured application. In order to compile an accurate risk assessment and provide forensic analysis, it is essential for security personnel to know where events occurred, such as application components, modules, session identifiers, filenames, host names, and functionality.","check":"Review the DNS system configuration to determine if it is configured to produce, capture and store log records which contain information to establish where events have occurred on the system. \n\nIf the logging function is not configured to produce log records with information regarding where the event took place, this is a finding.","fix":"Configure the DNS server to produce log records that contain information that establishes where events have occurred.\n\nAdditionally, configure the audit facility of the DNS system to provide information where events have occurred."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55409r1_chk","severity":"medium","gid":"V-54787","rid":"SV-69033r1_rule","stig_id":"SRG-APP-000097-DNS-000008","gtitle":"SRG-APP-000097-DNS-000008","fix_id":"F-59645r1_fix","documentable":null,"cci":["CCI-000132"],"nist":["AU-3 c"]}},{"id":"SV-69035","code":"control 'SV-69035' do\n  title 'The DNS server implementation must produce audit records containing information to establish the source of the events.'\n  desc 'Without establishing the source of the event, it is impossible to establish, correlate, and investigate the events leading up to an outage or attack. Associating information about the source of the event within the application provides a means of investigating an attack, recognizing resource utilization or capacity thresholds, or identifying an improperly configured application. \n\nIn addition to logging where events occur within the application, the application must also produce audit records that identify the application itself as the source of the event. In order to compile an accurate risk assessment and provide forensic analysis, it is essential for security personnel to know the source of the event, particularly in the case of centralized logging. In the case of centralized logging, the source would be the application name accompanied by the host or client name.'\n  desc 'check', 'Review the DNS server configuration to determine if the source of the events is a configurable option within the audit/logging utility and if it is being captured and stored. \n\nIf the DNS is not configured to capture and store the source of an event, this is a finding.'\n  desc 'fix', 'Configure the DNS server to produce log records which indicate the source of the events.\n\nAdditionally, configure the audit facility of the DNS system to provide information to establish the source of events.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55411r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54789'\n  tag rid: 'SV-69035r1_rule'\n  tag stig_id: 'SRG-APP-000098-DNS-000009'\n  tag gtitle: 'SRG-APP-000098-DNS-000009'\n  tag fix_id: 'F-59647r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000133']\n  tag nist: ['AU-3 d']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69035.rb"},"title":"The DNS server implementation must produce audit records containing information to establish the source of the events.","desc":"Without establishing the source of the event, it is impossible to establish, correlate, and investigate the events leading up to an outage or attack. Associating information about the source of the event within the application provides a means of investigating an attack, recognizing resource utilization or capacity thresholds, or identifying an improperly configured application. \n\nIn addition to logging where events occur within the application, the application must also produce audit records that identify the application itself as the source of the event. In order to compile an accurate risk assessment and provide forensic analysis, it is essential for security personnel to know the source of the event, particularly in the case of centralized logging. In the case of centralized logging, the source would be the application name accompanied by the host or client name.","descriptions":{"default":"Without establishing the source of the event, it is impossible to establish, correlate, and investigate the events leading up to an outage or attack. Associating information about the source of the event within the application provides a means of investigating an attack, recognizing resource utilization or capacity thresholds, or identifying an improperly configured application. \n\nIn addition to logging where events occur within the application, the application must also produce audit records that identify the application itself as the source of the event. In order to compile an accurate risk assessment and provide forensic analysis, it is essential for security personnel to know the source of the event, particularly in the case of centralized logging. In the case of centralized logging, the source would be the application name accompanied by the host or client name.","check":"Review the DNS server configuration to determine if the source of the events is a configurable option within the audit/logging utility and if it is being captured and stored. \n\nIf the DNS is not configured to capture and store the source of an event, this is a finding.","fix":"Configure the DNS server to produce log records which indicate the source of the events.\n\nAdditionally, configure the audit facility of the DNS system to provide information to establish the source of events."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55411r1_chk","severity":"medium","gid":"V-54789","rid":"SV-69035r1_rule","stig_id":"SRG-APP-000098-DNS-000009","gtitle":"SRG-APP-000098-DNS-000009","fix_id":"F-59647r1_fix","documentable":null,"cci":["CCI-000133"],"nist":["AU-3 d"]}},{"id":"SV-69037","code":"control 'SV-69037' do\n  title 'The DNS server implementation must produce audit records that contain information to establish the outcome of the events.'\n  desc 'Without information about the outcome of events, security personnel cannot make an accurate assessment about whether an attack was successful or if changes were made to the security state of the system.\n\nEvent outcomes can include indicators of event success or failure and event-specific results (e.g., the security state of the information system after the event occurred). As such, they also provide a means to measure the impact of an event and help authorized personnel to determine the appropriate response.'\n  desc 'check', 'Review the DNS server configuration to determine if it is configured to produce, capture, and store log records which contain information about success and failure of events on the system. \n\nIf the logging function is not configured to produce log records with information regarding success and failure of events, this is a finding.'\n  desc 'fix', 'Configure the DNS server to produce log records that contain information about success and failure of events on the system.\n\nAdditionally, configure the audit facility of the DNS system to provide information to establish the success or failure of the event.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55413r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54791'\n  tag rid: 'SV-69037r1_rule'\n  tag stig_id: 'SRG-APP-000099-DNS-000010'\n  tag gtitle: 'SRG-APP-000099-DNS-000010'\n  tag fix_id: 'F-59649r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000134']\n  tag nist: ['AU-3 e']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69037.rb"},"title":"The DNS server implementation must produce audit records that contain information to establish the outcome of the events.","desc":"Without information about the outcome of events, security personnel cannot make an accurate assessment about whether an attack was successful or if changes were made to the security state of the system.\n\nEvent outcomes can include indicators of event success or failure and event-specific results (e.g., the security state of the information system after the event occurred). As such, they also provide a means to measure the impact of an event and help authorized personnel to determine the appropriate response.","descriptions":{"default":"Without information about the outcome of events, security personnel cannot make an accurate assessment about whether an attack was successful or if changes were made to the security state of the system.\n\nEvent outcomes can include indicators of event success or failure and event-specific results (e.g., the security state of the information system after the event occurred). As such, they also provide a means to measure the impact of an event and help authorized personnel to determine the appropriate response.","check":"Review the DNS server configuration to determine if it is configured to produce, capture, and store log records which contain information about success and failure of events on the system. \n\nIf the logging function is not configured to produce log records with information regarding success and failure of events, this is a finding.","fix":"Configure the DNS server to produce log records that contain information about success and failure of events on the system.\n\nAdditionally, configure the audit facility of the DNS system to provide information to establish the success or failure of the event."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55413r1_chk","severity":"medium","gid":"V-54791","rid":"SV-69037r1_rule","stig_id":"SRG-APP-000099-DNS-000010","gtitle":"SRG-APP-000099-DNS-000010","fix_id":"F-59649r1_fix","documentable":null,"cci":["CCI-000134"],"nist":["AU-3 e"]}},{"id":"SV-69039","code":"control 'SV-69039' do\n  title 'The DNS server implementation must generate audit records containing information that establishes the identity of any individual or process associated with the event.'\n  desc 'Without information that establishes the identity of the subjects (i.e., users or processes acting on behalf of users) associated with the events, security personnel cannot determine responsibility for the potentially harmful event.\n\nEvent identifiers (if authenticated or otherwise known) include, but are not limited to, user database tables, primary key values, user names, or process identifiers.'\n  desc 'check', 'Review the DNS system configuration to determine if audit records exist without specific user information, when user information is available.\n\nIf audit records exist without specific user information when user information is available, this is a finding.'\n  desc 'fix', 'Configure the DNS system audit settings to log specific user information whenever user information is available.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55415r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54793'\n  tag rid: 'SV-69039r1_rule'\n  tag stig_id: 'SRG-APP-000100-DNS-000011'\n  tag gtitle: 'SRG-APP-000100-DNS-000011'\n  tag fix_id: 'F-59651r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-001487']\n  tag nist: ['AU-3 f']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69039.rb"},"title":"The DNS server implementation must generate audit records containing information that establishes the identity of any individual or process associated with the event.","desc":"Without information that establishes the identity of the subjects (i.e., users or processes acting on behalf of users) associated with the events, security personnel cannot determine responsibility for the potentially harmful event.\n\nEvent identifiers (if authenticated or otherwise known) include, but are not limited to, user database tables, primary key values, user names, or process identifiers.","descriptions":{"default":"Without information that establishes the identity of the subjects (i.e., users or processes acting on behalf of users) associated with the events, security personnel cannot determine responsibility for the potentially harmful event.\n\nEvent identifiers (if authenticated or otherwise known) include, but are not limited to, user database tables, primary key values, user names, or process identifiers.","check":"Review the DNS system configuration to determine if audit records exist without specific user information, when user information is available.\n\nIf audit records exist without specific user information when user information is available, this is a finding.","fix":"Configure the DNS system audit settings to log specific user information whenever user information is available."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55415r1_chk","severity":"medium","gid":"V-54793","rid":"SV-69039r1_rule","stig_id":"SRG-APP-000100-DNS-000011","gtitle":"SRG-APP-000100-DNS-000011","fix_id":"F-59651r1_fix","documentable":null,"cci":["CCI-001487"],"nist":["AU-3 f"]}},{"id":"SV-69041","code":"control 'SV-69041' do\n  title 'The DNS server implementations audit records must be backed up at least every seven days onto a different system or system component than the system or component being audited.'\n  desc 'Protection of log data includes assuring log data is not accidentally lost or deleted. Backing up audit records to a different system or onto separate media than the system being audited on a defined frequency helps to assure, in the event of a catastrophic system failure, the audit records will be retained. \n\nThis helps to ensure a compromise of the information system being audited does not also result in a compromise of the audit records.\n\nThis requirement only applies to applications that have a native backup capability for audit records. Operating system backup requirements cover applications that do not provide native backup functions.'\n  desc 'check', 'Review the DNS system configuration to determine if audit record content is sent to a centralized audit log repository, either directly by the DNS system or by the underlying O/S. \n\nIf the DNS system is not configured to support centralized logging and auditing, this is a finding.'\n  desc 'fix', 'Configure the DNS server or the underlying O/S to send audit log content to a centralized logging facility.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55417r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54795'\n  tag rid: 'SV-69041r1_rule'\n  tag stig_id: 'SRG-APP-000125-DNS-000012'\n  tag gtitle: 'SRG-APP-000125-DNS-000012'\n  tag fix_id: 'F-59653r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-001348']\n  tag nist: ['AU-9 (2)']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69041.rb"},"title":"The DNS server implementations audit records must be backed up at least every seven days onto a different system or system component than the system or component being audited.","desc":"Protection of log data includes assuring log data is not accidentally lost or deleted. Backing up audit records to a different system or onto separate media than the system being audited on a defined frequency helps to assure, in the event of a catastrophic system failure, the audit records will be retained. \n\nThis helps to ensure a compromise of the information system being audited does not also result in a compromise of the audit records.\n\nThis requirement only applies to applications that have a native backup capability for audit records. Operating system backup requirements cover applications that do not provide native backup functions.","descriptions":{"default":"Protection of log data includes assuring log data is not accidentally lost or deleted. Backing up audit records to a different system or onto separate media than the system being audited on a defined frequency helps to assure, in the event of a catastrophic system failure, the audit records will be retained. \n\nThis helps to ensure a compromise of the information system being audited does not also result in a compromise of the audit records.\n\nThis requirement only applies to applications that have a native backup capability for audit records. Operating system backup requirements cover applications that do not provide native backup functions.","check":"Review the DNS system configuration to determine if audit record content is sent to a centralized audit log repository, either directly by the DNS system or by the underlying O/S. \n\nIf the DNS system is not configured to support centralized logging and auditing, this is a finding.","fix":"Configure the DNS server or the underlying O/S to send audit log content to a centralized logging facility."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55417r1_chk","severity":"medium","gid":"V-54795","rid":"SV-69041r1_rule","stig_id":"SRG-APP-000125-DNS-000012","gtitle":"SRG-APP-000125-DNS-000012","fix_id":"F-59653r1_fix","documentable":null,"cci":["CCI-001348"],"nist":["AU-9 (2)"]}},{"id":"SV-69043","code":"control 'SV-69043' do\n  title 'The DNS server implementation must be configured to prohibit or restrict unapproved ports and protocols.'\n  desc 'In order to prevent unauthorized connection of devices, unauthorized transfer of information, or unauthorized tunneling (i.e., embedding of data types within data types), organizations must disable or restrict unused or unnecessary physical and logical ports/protocols on information systems.\n\nApplications are capable of providing a wide variety of functions and services. Some of the functions and services provided by default may not be necessary to support essential organizational operations. Additionally, it is sometimes convenient to provide multiple services from a single component (e.g., email and web services); however, doing so increases risk over limiting the services provided by any one component.\n\nTo support the requirements and principles of least functionality, the application must support the organizational requirements by providing only essential capabilities and limiting the use of ports, protocols, and/or services to only those required, authorized, and approved to conduct official business or to address authorized quality of life issues.'\n  desc 'check', \"Review the DNS system configuration to ensure the system is configured for incoming traffic only on UDP/53 and TCP/53 and outgoing DNS traffic sent from a random port rather than the DNS software's default port.\n\nIf the DNS implementation is not configured for incoming traffic on UDP/53 and TCP/53 and outgoing traffic sent from a random port rather than the DNS software's default port, this is a finding.\"\n  desc 'fix', \"Configure the DNS implementation for incoming traffic on UDP/53 and TCP/53 and outgoing traffic sent from a random port rather than the DNS software's default port.\"\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55419r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54797'\n  tag rid: 'SV-69043r1_rule'\n  tag stig_id: 'SRG-APP-000142-DNS-000014'\n  tag gtitle: 'SRG-APP-000142-DNS-000014'\n  tag fix_id: 'F-59655r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000382']\n  tag nist: ['CM-7 b']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69043.rb"},"title":"The DNS server implementation must be configured to prohibit or restrict unapproved ports and protocols.","desc":"In order to prevent unauthorized connection of devices, unauthorized transfer of information, or unauthorized tunneling (i.e., embedding of data types within data types), organizations must disable or restrict unused or unnecessary physical and logical ports/protocols on information systems.\n\nApplications are capable of providing a wide variety of functions and services. Some of the functions and services provided by default may not be necessary to support essential organizational operations. Additionally, it is sometimes convenient to provide multiple services from a single component (e.g., email and web services); however, doing so increases risk over limiting the services provided by any one component.\n\nTo support the requirements and principles of least functionality, the application must support the organizational requirements by providing only essential capabilities and limiting the use of ports, protocols, and/or services to only those required, authorized, and approved to conduct official business or to address authorized quality of life issues.","descriptions":{"default":"In order to prevent unauthorized connection of devices, unauthorized transfer of information, or unauthorized tunneling (i.e., embedding of data types within data types), organizations must disable or restrict unused or unnecessary physical and logical ports/protocols on information systems.\n\nApplications are capable of providing a wide variety of functions and services. Some of the functions and services provided by default may not be necessary to support essential organizational operations. Additionally, it is sometimes convenient to provide multiple services from a single component (e.g., email and web services); however, doing so increases risk over limiting the services provided by any one component.\n\nTo support the requirements and principles of least functionality, the application must support the organizational requirements by providing only essential capabilities and limiting the use of ports, protocols, and/or services to only those required, authorized, and approved to conduct official business or to address authorized quality of life issues.","check":"Review the DNS system configuration to ensure the system is configured for incoming traffic only on UDP/53 and TCP/53 and outgoing DNS traffic sent from a random port rather than the DNS software's default port.\n\nIf the DNS implementation is not configured for incoming traffic on UDP/53 and TCP/53 and outgoing traffic sent from a random port rather than the DNS software's default port, this is a finding.","fix":"Configure the DNS implementation for incoming traffic on UDP/53 and TCP/53 and outgoing traffic sent from a random port rather than the DNS software's default port."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55419r1_chk","severity":"medium","gid":"V-54797","rid":"SV-69043r1_rule","stig_id":"SRG-APP-000142-DNS-000014","gtitle":"SRG-APP-000142-DNS-000014","fix_id":"F-59655r1_fix","documentable":null,"cci":["CCI-000382"],"nist":["CM-7 b"]}},{"id":"SV-69045","code":"control 'SV-69045' do\n  title 'The DNS server implementation must uniquely identify the other DNS server before responding to a server-to-server transaction.'\n  desc 'Without identifying devices, unidentified or unknown devices may be introduced, thereby facilitating malicious activity. This applies to server-to-server (zone transfer) transactions only and is provided by TSIG/SIG(0), which enforces mutual server authentication using a key that is unique to each server pair (TSIG) or using PKI-based authentication (SIG(0)), thus uniquely identifying the other server.'\n  desc 'check', \"Review the DNS server implementation configuration to determine if it validates other DNS servers' unique identify, through the use TSIG or SIG(0), when accepting server-to-server (zone transfer) transactions from the other DNS servers.\n\nIf the DNS server does not validate other DNS servers' unique identity, through the use of either TSIG or SIG(0), when accepting server-to-server (zone transfer) transactions from those other DNS servers, this is a finding.\"\n  desc 'fix', \"Configure the DNS server to verify another DNS server's unique identify, through the use of TSIG or SIG(0), when accepting server-to-server (zone transfer) transactions from other DNS servers.\"\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55421r3_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54799'\n  tag rid: 'SV-69045r1_rule'\n  tag stig_id: 'SRG-APP-000158-DNS-000015'\n  tag gtitle: 'SRG-APP-000158-DNS-000015'\n  tag fix_id: 'F-59657r4_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000778']\n  tag nist: ['IA-3']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69045.rb"},"title":"The DNS server implementation must uniquely identify the other DNS server before responding to a server-to-server transaction.","desc":"Without identifying devices, unidentified or unknown devices may be introduced, thereby facilitating malicious activity. This applies to server-to-server (zone transfer) transactions only and is provided by TSIG/SIG(0), which enforces mutual server authentication using a key that is unique to each server pair (TSIG) or using PKI-based authentication (SIG(0)), thus uniquely identifying the other server.","descriptions":{"default":"Without identifying devices, unidentified or unknown devices may be introduced, thereby facilitating malicious activity. This applies to server-to-server (zone transfer) transactions only and is provided by TSIG/SIG(0), which enforces mutual server authentication using a key that is unique to each server pair (TSIG) or using PKI-based authentication (SIG(0)), thus uniquely identifying the other server.","check":"Review the DNS server implementation configuration to determine if it validates other DNS servers' unique identify, through the use TSIG or SIG(0), when accepting server-to-server (zone transfer) transactions from the other DNS servers.\n\nIf the DNS server does not validate other DNS servers' unique identity, through the use of either TSIG or SIG(0), when accepting server-to-server (zone transfer) transactions from those other DNS servers, this is a finding.","fix":"Configure the DNS server to verify another DNS server's unique identify, through the use of TSIG or SIG(0), when accepting server-to-server (zone transfer) transactions from other DNS servers."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55421r3_chk","severity":"medium","gid":"V-54799","rid":"SV-69045r1_rule","stig_id":"SRG-APP-000158-DNS-000015","gtitle":"SRG-APP-000158-DNS-000015","fix_id":"F-59657r4_fix","documentable":null,"cci":["CCI-000778"],"nist":["IA-3"]}},{"id":"SV-69047","code":"control 'SV-69047' do\n  title 'The DNS server implementation, when using PKI-based authentication, must enforce authorized access to the corresponding private key.'\n  desc 'The cornerstone of the PKI is the private key used to encrypt or digitally sign information. If the private key is stolen, this will lead to the compromise of the authentication and non-repudiation gained through PKI because the attacker can use the private key to digitally sign documents and pretend to be the authorized user. Both the holders of a digital certificate and the issuing authority must protect the computers, storage devices, or whatever they use to keep the private keys. \n\nSIG(0) is used for server-to-server authentication for DNS transactions, and it uses PKI-based authentication. So, in cases where SIG(0) is being used instead of TSIG (which uses a shared key, not PKI-based authentication), this requirement is applicable.'\n  desc 'check', 'Review the DNS server implementation configuration to determine if the DNS server, when using PKI-based authentication (e.g., SIG(0)), enforces authorized access to the corresponding private key. If the DNS server does not enforce authorized access to the private key, this is a finding.'\n  desc 'fix', 'Configure the DNS server to enforce authorized access to the corresponding private key when using PKI-based authentication.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55423r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54801'\n  tag rid: 'SV-69047r1_rule'\n  tag stig_id: 'SRG-APP-000176-DNS-000017'\n  tag gtitle: 'SRG-APP-000176-DNS-000017'\n  tag fix_id: 'F-59659r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000186']\n  tag nist: ['IA-5 (2) (a) (1)']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69047.rb"},"title":"The DNS server implementation, when using PKI-based authentication, must enforce authorized access to the corresponding private key.","desc":"The cornerstone of the PKI is the private key used to encrypt or digitally sign information. If the private key is stolen, this will lead to the compromise of the authentication and non-repudiation gained through PKI because the attacker can use the private key to digitally sign documents and pretend to be the authorized user. Both the holders of a digital certificate and the issuing authority must protect the computers, storage devices, or whatever they use to keep the private keys. \n\nSIG(0) is used for server-to-server authentication for DNS transactions, and it uses PKI-based authentication. So, in cases where SIG(0) is being used instead of TSIG (which uses a shared key, not PKI-based authentication), this requirement is applicable.","descriptions":{"default":"The cornerstone of the PKI is the private key used to encrypt or digitally sign information. If the private key is stolen, this will lead to the compromise of the authentication and non-repudiation gained through PKI because the attacker can use the private key to digitally sign documents and pretend to be the authorized user. Both the holders of a digital certificate and the issuing authority must protect the computers, storage devices, or whatever they use to keep the private keys. \n\nSIG(0) is used for server-to-server authentication for DNS transactions, and it uses PKI-based authentication. So, in cases where SIG(0) is being used instead of TSIG (which uses a shared key, not PKI-based authentication), this requirement is applicable.","check":"Review the DNS server implementation configuration to determine if the DNS server, when using PKI-based authentication (e.g., SIG(0)), enforces authorized access to the corresponding private key. If the DNS server does not enforce authorized access to the private key, this is a finding.","fix":"Configure the DNS server to enforce authorized access to the corresponding private key when using PKI-based authentication."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55423r1_chk","severity":"medium","gid":"V-54801","rid":"SV-69047r1_rule","stig_id":"SRG-APP-000176-DNS-000017","gtitle":"SRG-APP-000176-DNS-000017","fix_id":"F-59659r1_fix","documentable":null,"cci":["CCI-000186"],"nist":["IA-5 (2) (a) (1)"]}},{"id":"SV-69049","code":"control 'SV-69049' do\n  title 'The key file must be owned by the account under which the name server software is run.'\n  desc 'To enable zone transfer (requests and responses) through authenticated messages, it is necessary to generate a key for every pair of name servers. The key can also be used for securing other transactions, such as dynamic updates, DNS queries, and responses. The binary key string that is generated by most key generation utilities used with DNSSEC is Base64-encoded. TSIG is a string used to generate the message authentication hash stored in a TSIG RR and used to authenticate an entire DNS message.'\n  desc 'check', 'Review the DNS system to determine ownership of the key file and the account under which the name server software is run.\n\nIf the key file owner is not the same account as the account under which the name server is run, this is a finding.'\n  desc 'fix', 'Change ownership for the key file to the account under which the name server software is run.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55425r2_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54803'\n  tag rid: 'SV-69049r1_rule'\n  tag stig_id: 'SRG-APP-000176-DNS-000018'\n  tag gtitle: 'SRG-APP-000176-DNS-000018'\n  tag fix_id: 'F-59661r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000186']\n  tag nist: ['IA-5 (2) (a) (1)']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69049.rb"},"title":"The key file must be owned by the account under which the name server software is run.","desc":"To enable zone transfer (requests and responses) through authenticated messages, it is necessary to generate a key for every pair of name servers. The key can also be used for securing other transactions, such as dynamic updates, DNS queries, and responses. The binary key string that is generated by most key generation utilities used with DNSSEC is Base64-encoded. TSIG is a string used to generate the message authentication hash stored in a TSIG RR and used to authenticate an entire DNS message.","descriptions":{"default":"To enable zone transfer (requests and responses) through authenticated messages, it is necessary to generate a key for every pair of name servers. The key can also be used for securing other transactions, such as dynamic updates, DNS queries, and responses. The binary key string that is generated by most key generation utilities used with DNSSEC is Base64-encoded. TSIG is a string used to generate the message authentication hash stored in a TSIG RR and used to authenticate an entire DNS message.","check":"Review the DNS system to determine ownership of the key file and the account under which the name server software is run.\n\nIf the key file owner is not the same account as the account under which the name server is run, this is a finding.","fix":"Change ownership for the key file to the account under which the name server software is run."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55425r2_chk","severity":"medium","gid":"V-54803","rid":"SV-69049r1_rule","stig_id":"SRG-APP-000176-DNS-000018","gtitle":"SRG-APP-000176-DNS-000018","fix_id":"F-59661r1_fix","documentable":null,"cci":["CCI-000186"],"nist":["IA-5 (2) (a) (1)"]}},{"id":"SV-69051","code":"control 'SV-69051' do\n  title 'Read/Write access to the key file must be restricted to the account that runs the name server software only.'\n  desc 'To enable zone transfer (requests and responses) through authenticated messages, it is necessary to generate a key for every pair of name servers. The key can also be used for securing other transactions, such as dynamic updates, DNS queries, and responses. The binary key string that is generated by most key generation utilities used with DNSSEC is Base64-encoded. TSIG is a string used to generate the message authentication hash stored in a TSIG RR and used to authenticate an entire DNS message.'\n  desc 'check', 'Review the DNS system to determine privileges on the key file and the account under which the name server software is run.\n\nIf the account under which the name server software is run is not the only account which has read/modify permissions to the key file, this is a finding.'\n  desc 'fix', 'Apply permissions to the key file to provide read/modify permissions only to the account under which the name server software is run.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55427r2_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54805'\n  tag rid: 'SV-69051r1_rule'\n  tag stig_id: 'SRG-APP-000176-DNS-000019'\n  tag gtitle: 'SRG-APP-000176-DNS-000019'\n  tag fix_id: 'F-59663r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000186']\n  tag nist: ['IA-5 (2) (a) (1)']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69051.rb"},"title":"Read/Write access to the key file must be restricted to the account that runs the name server software only.","desc":"To enable zone transfer (requests and responses) through authenticated messages, it is necessary to generate a key for every pair of name servers. The key can also be used for securing other transactions, such as dynamic updates, DNS queries, and responses. The binary key string that is generated by most key generation utilities used with DNSSEC is Base64-encoded. TSIG is a string used to generate the message authentication hash stored in a TSIG RR and used to authenticate an entire DNS message.","descriptions":{"default":"To enable zone transfer (requests and responses) through authenticated messages, it is necessary to generate a key for every pair of name servers. The key can also be used for securing other transactions, such as dynamic updates, DNS queries, and responses. The binary key string that is generated by most key generation utilities used with DNSSEC is Base64-encoded. TSIG is a string used to generate the message authentication hash stored in a TSIG RR and used to authenticate an entire DNS message.","check":"Review the DNS system to determine privileges on the key file and the account under which the name server software is run.\n\nIf the account under which the name server software is run is not the only account which has read/modify permissions to the key file, this is a finding.","fix":"Apply permissions to the key file to provide read/modify permissions only to the account under which the name server software is run."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55427r2_chk","severity":"medium","gid":"V-54805","rid":"SV-69051r1_rule","stig_id":"SRG-APP-000176-DNS-000019","gtitle":"SRG-APP-000176-DNS-000019","fix_id":"F-59663r1_fix","documentable":null,"cci":["CCI-000186"],"nist":["IA-5 (2) (a) (1)"]}},{"id":"SV-69053","code":"control 'SV-69053' do\n  title 'A unique TSIG key must be generated for each pair of communicating hosts.'\n  desc 'To enable zone transfer (requests and responses) through authenticated messages, it is necessary to generate a key for every pair of name servers. The key also can be used for securing other transactions, such as dynamic updates, DNS queries, and responses. The binary key string that is generated by most key generation utilities used with DNSSEC is Base64-encoded. TSIG is a string used to generate the message authentication hash stored in a TSIG RR and used to authenticate an entire DNS message.\n\nThe process of authenticating the source of a message and its integrity through hash-based message authentication codes (HMAC) is specified through a set of DNS specifications known collectively as TSIG. The sender of the message uses the HMAC function to generate a MAC and sends this MAC along with the message to the receiver. The receiver, who shares the same secret key, uses the key and HMAC function used by the sender to compute the MAC on the received message. The receiver then compares the computed MAC with the received MAC; if the two values match, it provides assurance that the message has been received correctly and that the sender belongs to the community of users sharing the same secret key. Thus, message source authentication and integrity verification are performed in a single process. To enable zone transfer (requests and responses) through authenticated messages, it is necessary to generate a key for every pair of name servers. The key also can be used for securing other transactions, such as dynamic updates, DNS queries, and responses. The binary key string that is generated by most key generation utilities used with DNSSEC is Base64-encoded. TSIG is a string used to generate the message authentication hash stored in a TSIG RR and used to authenticate an entire DNS message.'\n  desc 'check', 'Review the DNS implementation. Verify that each pair of communicating hosts has a unique TSIG key (i.e., a separate key for each secondary name server to authenticate transactions with the primary name server, etc.)\n\nIf a unique TSIG key has not been generated for each pair of communicating hosts, this is a finding.'\n  desc 'fix', 'Regenerate a unique TSIG key for each pair of communicating hosts within the DNS architecture.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55429r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54807'\n  tag rid: 'SV-69053r1_rule'\n  tag stig_id: 'SRG-APP-000176-DNS-000076'\n  tag gtitle: 'SRG-APP-000176-DNS-000076'\n  tag fix_id: 'F-59665r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-001339']\n  tag nist: ['AU-10 (2)']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69053.rb"},"title":"A unique TSIG key must be generated for each pair of communicating hosts.","desc":"To enable zone transfer (requests and responses) through authenticated messages, it is necessary to generate a key for every pair of name servers. The key also can be used for securing other transactions, such as dynamic updates, DNS queries, and responses. The binary key string that is generated by most key generation utilities used with DNSSEC is Base64-encoded. TSIG is a string used to generate the message authentication hash stored in a TSIG RR and used to authenticate an entire DNS message.\n\nThe process of authenticating the source of a message and its integrity through hash-based message authentication codes (HMAC) is specified through a set of DNS specifications known collectively as TSIG. The sender of the message uses the HMAC function to generate a MAC and sends this MAC along with the message to the receiver. The receiver, who shares the same secret key, uses the key and HMAC function used by the sender to compute the MAC on the received message. The receiver then compares the computed MAC with the received MAC; if the two values match, it provides assurance that the message has been received correctly and that the sender belongs to the community of users sharing the same secret key. Thus, message source authentication and integrity verification are performed in a single process. To enable zone transfer (requests and responses) through authenticated messages, it is necessary to generate a key for every pair of name servers. The key also can be used for securing other transactions, such as dynamic updates, DNS queries, and responses. The binary key string that is generated by most key generation utilities used with DNSSEC is Base64-encoded. TSIG is a string used to generate the message authentication hash stored in a TSIG RR and used to authenticate an entire DNS message.","descriptions":{"default":"To enable zone transfer (requests and responses) through authenticated messages, it is necessary to generate a key for every pair of name servers. The key also can be used for securing other transactions, such as dynamic updates, DNS queries, and responses. The binary key string that is generated by most key generation utilities used with DNSSEC is Base64-encoded. TSIG is a string used to generate the message authentication hash stored in a TSIG RR and used to authenticate an entire DNS message.\n\nThe process of authenticating the source of a message and its integrity through hash-based message authentication codes (HMAC) is specified through a set of DNS specifications known collectively as TSIG. The sender of the message uses the HMAC function to generate a MAC and sends this MAC along with the message to the receiver. The receiver, who shares the same secret key, uses the key and HMAC function used by the sender to compute the MAC on the received message. The receiver then compares the computed MAC with the received MAC; if the two values match, it provides assurance that the message has been received correctly and that the sender belongs to the community of users sharing the same secret key. Thus, message source authentication and integrity verification are performed in a single process. To enable zone transfer (requests and responses) through authenticated messages, it is necessary to generate a key for every pair of name servers. The key also can be used for securing other transactions, such as dynamic updates, DNS queries, and responses. The binary key string that is generated by most key generation utilities used with DNSSEC is Base64-encoded. TSIG is a string used to generate the message authentication hash stored in a TSIG RR and used to authenticate an entire DNS message.","check":"Review the DNS implementation. Verify that each pair of communicating hosts has a unique TSIG key (i.e., a separate key for each secondary name server to authenticate transactions with the primary name server, etc.)\n\nIf a unique TSIG key has not been generated for each pair of communicating hosts, this is a finding.","fix":"Regenerate a unique TSIG key for each pair of communicating hosts within the DNS architecture."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55429r1_chk","severity":"medium","gid":"V-54807","rid":"SV-69053r1_rule","stig_id":"SRG-APP-000176-DNS-000076","gtitle":"SRG-APP-000176-DNS-000076","fix_id":"F-59665r1_fix","documentable":null,"cci":["CCI-001339"],"nist":["AU-10 (2)"]}},{"id":"SV-69055","code":"control 'SV-69055' do\n  title 'Only the private key corresponding to the ZSK alone must be kept on the name server that does support dynamic updates.'\n  desc 'The private keys in the KSK and ZSK key pairs must be protected from unauthorized access. If possible, the private keys should be stored off-line (with respect to the Internet-facing, DNSSEC-aware name server) in a physically secure, non-network-accessible machine along with the zone file master copy. \n\nThis strategy is not feasible in situations in which the DNSSEC-aware name server has to support dynamic updates. To support dynamic update transactions, the DNSSEC-aware name server (which usually is a primary authoritative name server) has to have both the zone file master copy and the private key corresponding to the zone-signing key (ZSK-private) online to immediately update the signatures for the updated RRsets. The private key corresponding to the key-signing key (KSK-private) can still be kept off-line.'\n  desc 'check', 'Review the DNS name server and documentation to determine whether it accepts dynamic updates. If dynamic updates are accepted, verify only the private keys corresponding to the ZSK (Zone Signing Key) are located on the server.\n\nIf the private keys to the KSK are located on the name server that accepts dynamic updates, this is a finding.'\n  desc 'fix', 'Store the private keys of the ZSK and KSK off-line in an encrypted file system.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55431r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54809'\n  tag rid: 'SV-69055r1_rule'\n  tag stig_id: 'SRG-APP-000176-DNS-000094'\n  tag gtitle: 'SRG-APP-000176-DNS-000094'\n  tag fix_id: 'F-59667r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000186']\n  tag nist: ['IA-5 (2) (a) (1)']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69055.rb"},"title":"Only the private key corresponding to the ZSK alone must be kept on the name server that does support dynamic updates.","desc":"The private keys in the KSK and ZSK key pairs must be protected from unauthorized access. If possible, the private keys should be stored off-line (with respect to the Internet-facing, DNSSEC-aware name server) in a physically secure, non-network-accessible machine along with the zone file master copy. \n\nThis strategy is not feasible in situations in which the DNSSEC-aware name server has to support dynamic updates. To support dynamic update transactions, the DNSSEC-aware name server (which usually is a primary authoritative name server) has to have both the zone file master copy and the private key corresponding to the zone-signing key (ZSK-private) online to immediately update the signatures for the updated RRsets. The private key corresponding to the key-signing key (KSK-private) can still be kept off-line.","descriptions":{"default":"The private keys in the KSK and ZSK key pairs must be protected from unauthorized access. If possible, the private keys should be stored off-line (with respect to the Internet-facing, DNSSEC-aware name server) in a physically secure, non-network-accessible machine along with the zone file master copy. \n\nThis strategy is not feasible in situations in which the DNSSEC-aware name server has to support dynamic updates. To support dynamic update transactions, the DNSSEC-aware name server (which usually is a primary authoritative name server) has to have both the zone file master copy and the private key corresponding to the zone-signing key (ZSK-private) online to immediately update the signatures for the updated RRsets. The private key corresponding to the key-signing key (KSK-private) can still be kept off-line.","check":"Review the DNS name server and documentation to determine whether it accepts dynamic updates. If dynamic updates are accepted, verify only the private keys corresponding to the ZSK (Zone Signing Key) are located on the server.\n\nIf the private keys to the KSK are located on the name server that accepts dynamic updates, this is a finding.","fix":"Store the private keys of the ZSK and KSK off-line in an encrypted file system."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55431r1_chk","severity":"medium","gid":"V-54809","rid":"SV-69055r1_rule","stig_id":"SRG-APP-000176-DNS-000094","gtitle":"SRG-APP-000176-DNS-000094","fix_id":"F-59667r1_fix","documentable":null,"cci":["CCI-000186"],"nist":["IA-5 (2) (a) (1)"]}},{"id":"SV-69057","code":"control 'SV-69057' do\n  title 'Signature generation using the KSK must be done off-line, using the KSK-private stored off-line.'\n  desc 'Security-relevant information is any information within information systems that can potentially impact the operation of security functions or the provision of security services in a manner that could result in failure to enforce system security policies or maintain the isolation of code and data. \n\nSecurity-relevant information includes, for example, file permissions, cryptographic key management information, configuration parameters for security services, and access control lists. Secure, non-operable system states include the times in which information systems are not performing mission/business-related processing (e.g., the system is off-line for maintenance, troubleshooting, boot-up, and shut down).'\n  desc 'check', 'Verify the DNS operational procedures and confirm procedures exist to enforce generating signatures using the KSK are performed off-line, using the KSK-private stored off-line or the secure, protected module.\n\nIf the procedures do not exist or the procedures do not specify to perform the signature generation off-line from the name server, this is a finding.'\n  desc 'fix', 'Create operation documentation to include the safe management of keys and key storage within the DNS implementation. Include in the documentation steps to ensure signature generation using the KSK are done off-line, using the KSK-private stored off-line or the secure, protected module.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55433r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54811'\n  tag rid: 'SV-69057r1_rule'\n  tag stig_id: 'SRG-APP-000176-DNS-000096'\n  tag gtitle: 'SRG-APP-000176-DNS-000096'\n  tag fix_id: 'F-59669r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000186']\n  tag nist: ['IA-5 (2) (a) (1)']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69057.rb"},"title":"Signature generation using the KSK must be done off-line, using the KSK-private stored off-line.","desc":"Security-relevant information is any information within information systems that can potentially impact the operation of security functions or the provision of security services in a manner that could result in failure to enforce system security policies or maintain the isolation of code and data. \n\nSecurity-relevant information includes, for example, file permissions, cryptographic key management information, configuration parameters for security services, and access control lists. Secure, non-operable system states include the times in which information systems are not performing mission/business-related processing (e.g., the system is off-line for maintenance, troubleshooting, boot-up, and shut down).","descriptions":{"default":"Security-relevant information is any information within information systems that can potentially impact the operation of security functions or the provision of security services in a manner that could result in failure to enforce system security policies or maintain the isolation of code and data. \n\nSecurity-relevant information includes, for example, file permissions, cryptographic key management information, configuration parameters for security services, and access control lists. Secure, non-operable system states include the times in which information systems are not performing mission/business-related processing (e.g., the system is off-line for maintenance, troubleshooting, boot-up, and shut down).","check":"Verify the DNS operational procedures and confirm procedures exist to enforce generating signatures using the KSK are performed off-line, using the KSK-private stored off-line or the secure, protected module.\n\nIf the procedures do not exist or the procedures do not specify to perform the signature generation off-line from the name server, this is a finding.","fix":"Create operation documentation to include the safe management of keys and key storage within the DNS implementation. Include in the documentation steps to ensure signature generation using the KSK are done off-line, using the KSK-private stored off-line or the secure, protected module."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55433r1_chk","severity":"medium","gid":"V-54811","rid":"SV-69057r1_rule","stig_id":"SRG-APP-000176-DNS-000096","gtitle":"SRG-APP-000176-DNS-000096","fix_id":"F-59669r1_fix","documentable":null,"cci":["CCI-000186"],"nist":["IA-5 (2) (a) (1)"]}},{"id":"SV-69059","code":"control 'SV-69059' do\n  title 'The DNS server implementation must employ strong authenticators in the establishment of nonlocal maintenance and diagnostic sessions.'\n  desc %q(If maintenance tools are used by unauthorized personnel, they may accidentally or intentionally damage or compromise the system. The act of managing systems and applications includes the ability to access sensitive application information, such as system configuration details, diagnostic information, user information, and potentially sensitive application data. \n\nNonlocal maintenance and diagnostic activities are those activities conducted by individuals communicating through a network, either an external network (e.g., the Internet) or an internal network. Local maintenance and diagnostic activities are those activities carried out by individuals physically present at the information system or information system component and not communicating across a network connection. Typically, strong authentication requires authenticators that are resistant to replay attacks and employ multifactor authentication. Strong authenticators include, for example, PKI where certificates are stored on a token protected by a password, passphrase, or biometric.\n\nThis requirement applies to hardware/software diagnostic test equipment or tools. This requirement does not cover hardware/software components that may support information system maintenance, yet are a part of the system (e.g., the software implementing \"ping,\" \"ls,\" \"ipconfig,\" or the hardware and software implementing the monitoring port of an Ethernet switch).\n\nLack of authentication enables anyone to gain access to the network or possibly a network element that provides opportunity for intruders to compromise resources within the network infrastructure. Network access control mechanisms interoperate to prevent unauthorized access and to enforce the organization's security policy. Authorization for access to any network element requires an individual account identifier that has been approved, assigned, and configured on an authentication server. Authentication of all administrator accounts for all privilege levels must be accomplished using two or more factors that include the following:\n\n(i) something you know (e.g., password/PIN); \n(ii) something you have (e.g., cryptographic identification device, token); or \n(iii) something you are (e.g., biometric).)\n  desc 'check', \"Review the DNS implementation's authentication methods and settings to determine if multifactor authentication is utilized to gain nonlocal access for maintenance and diagnostics. \n\nIf multifactor authentication is not utilized, this is a finding.\"\n  desc 'fix', 'Configure the DNS system to utilize multifactor authentication for nonlocal access for maintenance and diagnostics.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55435r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54813'\n  tag rid: 'SV-69059r1_rule'\n  tag stig_id: 'SRG-APP-000185-DNS-000021'\n  tag gtitle: 'SRG-APP-000185-DNS-000021'\n  tag fix_id: 'F-59671r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000877']\n  tag nist: ['MA-4 c']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69059.rb"},"title":"The DNS server implementation must employ strong authenticators in the establishment of nonlocal maintenance and diagnostic sessions.","desc":"If maintenance tools are used by unauthorized personnel, they may accidentally or intentionally damage or compromise the system. The act of managing systems and applications includes the ability to access sensitive application information, such as system configuration details, diagnostic information, user information, and potentially sensitive application data. \n\nNonlocal maintenance and diagnostic activities are those activities conducted by individuals communicating through a network, either an external network (e.g., the Internet) or an internal network. Local maintenance and diagnostic activities are those activities carried out by individuals physically present at the information system or information system component and not communicating across a network connection. Typically, strong authentication requires authenticators that are resistant to replay attacks and employ multifactor authentication. Strong authenticators include, for example, PKI where certificates are stored on a token protected by a password, passphrase, or biometric.\n\nThis requirement applies to hardware/software diagnostic test equipment or tools. This requirement does not cover hardware/software components that may support information system maintenance, yet are a part of the system (e.g., the software implementing \"ping,\" \"ls,\" \"ipconfig,\" or the hardware and software implementing the monitoring port of an Ethernet switch).\n\nLack of authentication enables anyone to gain access to the network or possibly a network element that provides opportunity for intruders to compromise resources within the network infrastructure. Network access control mechanisms interoperate to prevent unauthorized access and to enforce the organization's security policy. Authorization for access to any network element requires an individual account identifier that has been approved, assigned, and configured on an authentication server. Authentication of all administrator accounts for all privilege levels must be accomplished using two or more factors that include the following:\n\n(i) something you know (e.g., password/PIN); \n(ii) something you have (e.g., cryptographic identification device, token); or \n(iii) something you are (e.g., biometric).","descriptions":{"default":"If maintenance tools are used by unauthorized personnel, they may accidentally or intentionally damage or compromise the system. The act of managing systems and applications includes the ability to access sensitive application information, such as system configuration details, diagnostic information, user information, and potentially sensitive application data. \n\nNonlocal maintenance and diagnostic activities are those activities conducted by individuals communicating through a network, either an external network (e.g., the Internet) or an internal network. Local maintenance and diagnostic activities are those activities carried out by individuals physically present at the information system or information system component and not communicating across a network connection. Typically, strong authentication requires authenticators that are resistant to replay attacks and employ multifactor authentication. Strong authenticators include, for example, PKI where certificates are stored on a token protected by a password, passphrase, or biometric.\n\nThis requirement applies to hardware/software diagnostic test equipment or tools. This requirement does not cover hardware/software components that may support information system maintenance, yet are a part of the system (e.g., the software implementing \"ping,\" \"ls,\" \"ipconfig,\" or the hardware and software implementing the monitoring port of an Ethernet switch).\n\nLack of authentication enables anyone to gain access to the network or possibly a network element that provides opportunity for intruders to compromise resources within the network infrastructure. Network access control mechanisms interoperate to prevent unauthorized access and to enforce the organization's security policy. Authorization for access to any network element requires an individual account identifier that has been approved, assigned, and configured on an authentication server. Authentication of all administrator accounts for all privilege levels must be accomplished using two or more factors that include the following:\n\n(i) something you know (e.g., password/PIN); \n(ii) something you have (e.g., cryptographic identification device, token); or \n(iii) something you are (e.g., biometric).","check":"Review the DNS implementation's authentication methods and settings to determine if multifactor authentication is utilized to gain nonlocal access for maintenance and diagnostics. \n\nIf multifactor authentication is not utilized, this is a finding.","fix":"Configure the DNS system to utilize multifactor authentication for nonlocal access for maintenance and diagnostics."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55435r1_chk","severity":"medium","gid":"V-54813","rid":"SV-69059r1_rule","stig_id":"SRG-APP-000185-DNS-000021","gtitle":"SRG-APP-000185-DNS-000021","fix_id":"F-59671r1_fix","documentable":null,"cci":["CCI-000877"],"nist":["MA-4 c"]}},{"id":"SV-69061","code":"control 'SV-69061' do\n  title 'A DNS server implementation must provide additional data origin artifacts along with the authoritative data the system returns in response to external name/address resolution queries.'\n  desc 'The underlying feature in the major threat associated with DNS query/response (i.e., forged response or response failure) is the integrity of DNS data returned in the response. The security objective is to verify the integrity of each response received. An integral part of integrity verification is to ensure that valid data has originated from the right source. Establishing trust in the source is called data origin authentication. \n\nThe security objectives—and consequently the security services—that are required for securing the DNS query/response transaction are data origin authentication and data integrity verification. \n\nThe specification for a digital signature mechanism in the context of the DNS infrastructure is in IETF’s DNSSEC standard. In DNSSEC, trust in the public key (for signature verification) of the source is established not by going to a third party or a chain of third parties (as in public key infrastructure [PKI] chaining), but by starting from a trusted zone (such as the root zone) and establishing the chain of trust down to the current source of response through successive verifications of signature of the public key of a child by its parent. The public key of the trusted zone is called the trust anchor.'\n  desc 'check', \"Review the zones hosted by the DNS server. Verify each of the zones have been digitally signed.\n\nTo determine if the zones have been digitally signed, verify the existence of an RRSET for each zone, which will include, at a minimum, an RRType RRSIG (Resource Record Signature) as well as an RRType DNSKEY and RRType NSEC (Next Secure). \n\nIf the DNS server's zones do not contain these additional RRs along with the regular RRs, this is a finding.\"\n  desc 'fix', 'Generate an RRSET for each zone hosted by the DNS server to include an RRSIG, DNSKEY and NSEC for each zone.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55437r5_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54815'\n  tag rid: 'SV-69061r1_rule'\n  tag stig_id: 'SRG-APP-000213-DNS-000024'\n  tag gtitle: 'SRG-APP-000213-DNS-000024'\n  tag fix_id: 'F-59673r4_fix'\n  tag 'documentable'\n  tag cci: ['CCI-001178']\n  tag nist: ['SC-20 a']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69061.rb"},"title":"A DNS server implementation must provide additional data origin artifacts along with the authoritative data the system returns in response to external name/address resolution queries.","desc":"The underlying feature in the major threat associated with DNS query/response (i.e., forged response or response failure) is the integrity of DNS data returned in the response. The security objective is to verify the integrity of each response received. An integral part of integrity verification is to ensure that valid data has originated from the right source. Establishing trust in the source is called data origin authentication. \n\nThe security objectives—and consequently the security services—that are required for securing the DNS query/response transaction are data origin authentication and data integrity verification. \n\nThe specification for a digital signature mechanism in the context of the DNS infrastructure is in IETF’s DNSSEC standard. In DNSSEC, trust in the public key (for signature verification) of the source is established not by going to a third party or a chain of third parties (as in public key infrastructure [PKI] chaining), but by starting from a trusted zone (such as the root zone) and establishing the chain of trust down to the current source of response through successive verifications of signature of the public key of a child by its parent. The public key of the trusted zone is called the trust anchor.","descriptions":{"default":"The underlying feature in the major threat associated with DNS query/response (i.e., forged response or response failure) is the integrity of DNS data returned in the response. The security objective is to verify the integrity of each response received. An integral part of integrity verification is to ensure that valid data has originated from the right source. Establishing trust in the source is called data origin authentication. \n\nThe security objectives—and consequently the security services—that are required for securing the DNS query/response transaction are data origin authentication and data integrity verification. \n\nThe specification for a digital signature mechanism in the context of the DNS infrastructure is in IETF’s DNSSEC standard. In DNSSEC, trust in the public key (for signature verification) of the source is established not by going to a third party or a chain of third parties (as in public key infrastructure [PKI] chaining), but by starting from a trusted zone (such as the root zone) and establishing the chain of trust down to the current source of response through successive verifications of signature of the public key of a child by its parent. The public key of the trusted zone is called the trust anchor.","check":"Review the zones hosted by the DNS server. Verify each of the zones have been digitally signed.\n\nTo determine if the zones have been digitally signed, verify the existence of an RRSET for each zone, which will include, at a minimum, an RRType RRSIG (Resource Record Signature) as well as an RRType DNSKEY and RRType NSEC (Next Secure). \n\nIf the DNS server's zones do not contain these additional RRs along with the regular RRs, this is a finding.","fix":"Generate an RRSET for each zone hosted by the DNS server to include an RRSIG, DNSKEY and NSEC for each zone."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55437r5_chk","severity":"medium","gid":"V-54815","rid":"SV-69061r1_rule","stig_id":"SRG-APP-000213-DNS-000024","gtitle":"SRG-APP-000213-DNS-000024","fix_id":"F-59673r4_fix","documentable":null,"cci":["CCI-001178"],"nist":["SC-20 a"]}},{"id":"SV-69063","code":"control 'SV-69063' do\n  title 'A DNS server implementation must provide the means to indicate the security status of child zones.'\n  desc \"If name server replies are invalid or cannot be validated, many networking functions and communication would be adversely affected. With DNS, the presence of Delegation Signer (DS) records associated with child zones informs clients of the security status of child zones. These records are crucial to the DNSSEC chain of trust model. Each parent domain's DS record is used to verify the DNSKEY record in its subdomain, from the top of the DNS hierarchy down.\n\nA DNS server is an example of an information system providing name/address resolution service. Digital signatures and cryptographic keys are examples of additional artifacts. DNS resource records are examples of authoritative data. Applications other than the DNS, to map between host/service names and network addresses, must provide other means to assure the authenticity and integrity of response data. \n\nIn DNS, trust in the public key of the source is established by starting from a trusted name server and establishing the chain of trust down to the current source of response through successive verifications of signature of the public key of a child by its parent. \n\nA trust anchor is an authoritative entity represented via a public key and associated data. It is used in the context of public key infrastructures, X.509 digital certificates, and Domain Name System Security Extensions (DNSSEC). \n\nWhen there is a chain of trust, usually the top entity to be trusted becomes the trust anchor. A certification path starts with the subject certificate and proceeds through a number of intermediate certificates up to a trusted root certificate. In DNS, a trust anchor is a DNSKEY that is placed into a validating resolver so the validator can cryptographically validate the results for a given request back to a known public key (the trust anchor). \n\nAn example means to indicate the security status of child subspaces is through the use of delegation signer (DS) resource records in the DNS.\n\nPath validation is necessary for a relying party to make an informed trust decision when presented with any certificate not already explicitly trusted. Without path validation and a chain of trust, there can be no trust that the data integrity authenticity has been maintained during a transaction.\"\n  desc 'check', \"Review the zones hosted by the DNS server. Every zone should have an RRSET which includes the RRTypes of RRSIG, DNSKEY and NSEC. \n\nIf a zone has a child, the RRSET should also include the RRType DS (Delegation Signer) RR, which contain the (hash) public key of child zones.\n\nIf the zones hosted by the DNS server do not have any child domains, this is not a finding.\n\nIf the zones hosted by the DNS server have child domains, and there is not an RRType DS RR in the zone's RRSET, this is a finding.\"\n  desc 'fix', 'Configure each child zone to upload its DS RRset to the parent zone.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55439r4_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54817'\n  tag rid: 'SV-69063r1_rule'\n  tag stig_id: 'SRG-APP-000214-DNS-000025'\n  tag gtitle: 'SRG-APP-000214-DNS-000025'\n  tag fix_id: 'F-59675r4_fix'\n  tag 'documentable'\n  tag cci: ['CCI-001179']\n  tag nist: ['SC-20 b']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69063.rb"},"title":"A DNS server implementation must provide the means to indicate the security status of child zones.","desc":"If name server replies are invalid or cannot be validated, many networking functions and communication would be adversely affected. With DNS, the presence of Delegation Signer (DS) records associated with child zones informs clients of the security status of child zones. These records are crucial to the DNSSEC chain of trust model. Each parent domain's DS record is used to verify the DNSKEY record in its subdomain, from the top of the DNS hierarchy down.\n\nA DNS server is an example of an information system providing name/address resolution service. Digital signatures and cryptographic keys are examples of additional artifacts. DNS resource records are examples of authoritative data. Applications other than the DNS, to map between host/service names and network addresses, must provide other means to assure the authenticity and integrity of response data. \n\nIn DNS, trust in the public key of the source is established by starting from a trusted name server and establishing the chain of trust down to the current source of response through successive verifications of signature of the public key of a child by its parent. \n\nA trust anchor is an authoritative entity represented via a public key and associated data. It is used in the context of public key infrastructures, X.509 digital certificates, and Domain Name System Security Extensions (DNSSEC). \n\nWhen there is a chain of trust, usually the top entity to be trusted becomes the trust anchor. A certification path starts with the subject certificate and proceeds through a number of intermediate certificates up to a trusted root certificate. In DNS, a trust anchor is a DNSKEY that is placed into a validating resolver so the validator can cryptographically validate the results for a given request back to a known public key (the trust anchor). \n\nAn example means to indicate the security status of child subspaces is through the use of delegation signer (DS) resource records in the DNS.\n\nPath validation is necessary for a relying party to make an informed trust decision when presented with any certificate not already explicitly trusted. Without path validation and a chain of trust, there can be no trust that the data integrity authenticity has been maintained during a transaction.","descriptions":{"default":"If name server replies are invalid or cannot be validated, many networking functions and communication would be adversely affected. With DNS, the presence of Delegation Signer (DS) records associated with child zones informs clients of the security status of child zones. These records are crucial to the DNSSEC chain of trust model. Each parent domain's DS record is used to verify the DNSKEY record in its subdomain, from the top of the DNS hierarchy down.\n\nA DNS server is an example of an information system providing name/address resolution service. Digital signatures and cryptographic keys are examples of additional artifacts. DNS resource records are examples of authoritative data. Applications other than the DNS, to map between host/service names and network addresses, must provide other means to assure the authenticity and integrity of response data. \n\nIn DNS, trust in the public key of the source is established by starting from a trusted name server and establishing the chain of trust down to the current source of response through successive verifications of signature of the public key of a child by its parent. \n\nA trust anchor is an authoritative entity represented via a public key and associated data. It is used in the context of public key infrastructures, X.509 digital certificates, and Domain Name System Security Extensions (DNSSEC). \n\nWhen there is a chain of trust, usually the top entity to be trusted becomes the trust anchor. A certification path starts with the subject certificate and proceeds through a number of intermediate certificates up to a trusted root certificate. In DNS, a trust anchor is a DNSKEY that is placed into a validating resolver so the validator can cryptographically validate the results for a given request back to a known public key (the trust anchor). \n\nAn example means to indicate the security status of child subspaces is through the use of delegation signer (DS) resource records in the DNS.\n\nPath validation is necessary for a relying party to make an informed trust decision when presented with any certificate not already explicitly trusted. Without path validation and a chain of trust, there can be no trust that the data integrity authenticity has been maintained during a transaction.","check":"Review the zones hosted by the DNS server. Every zone should have an RRSET which includes the RRTypes of RRSIG, DNSKEY and NSEC. \n\nIf a zone has a child, the RRSET should also include the RRType DS (Delegation Signer) RR, which contain the (hash) public key of child zones.\n\nIf the zones hosted by the DNS server do not have any child domains, this is not a finding.\n\nIf the zones hosted by the DNS server have child domains, and there is not an RRType DS RR in the zone's RRSET, this is a finding.","fix":"Configure each child zone to upload its DS RRset to the parent zone."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55439r4_chk","severity":"medium","gid":"V-54817","rid":"SV-69063r1_rule","stig_id":"SRG-APP-000214-DNS-000025","gtitle":"SRG-APP-000214-DNS-000025","fix_id":"F-59675r4_fix","documentable":null,"cci":["CCI-001179"],"nist":["SC-20 b"]}},{"id":"SV-69065","code":"control 'SV-69065' do\n  title 'The validity period for the RRSIGs covering the DS RR for a zones delegated children must be no less than two days and no more than one week.'\n  desc \"The best way for a zone administrator to minimize the impact of a key compromise is by limiting the validity period of RRSIGs in the zone and in the parent zone. This strategy limits the time during which an attacker can take advantage of a compromised key to forge responses. An attacker that has compromised a ZSK can use that key only during the KSK's signature validity interval. An attacker that has compromised a KSK can use that key for only as long as the signature interval of the RRSIG covering the DS RR in the delegating parent. These validity periods should be short, which will require frequent re-signing.\n\nTo prevent the impact of a compromised KSK, a delegating parent should set the signature validity period for RRSIGs covering DS RRs in the range of a few days to 1 week. This re-signing does not require frequent rollover of the parent's ZSK, but scheduled ZSK rollover should still be performed at regular intervals.\"\n  desc 'check', \"Review the DNS configuration files. Ensure the validity period for RRSIGs for all zones' delegated children has been explicitly configured and is configured for a range of no less than two days and no more than one week.\n\nIf the validity period for the RRSIGs for all zones' delegated children is less than two days or greater than one week, this is a finding.\"\n  desc 'fix', \"Configure RRSIGs for all zones' delegated children to be greater than two days and less than one week.\"\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55441r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54819'\n  tag rid: 'SV-69065r1_rule'\n  tag stig_id: 'SRG-APP-000214-DNS-000079'\n  tag gtitle: 'SRG-APP-000214-DNS-000079'\n  tag fix_id: 'F-59677r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-001179']\n  tag nist: ['SC-20 b']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69065.rb"},"title":"The validity period for the RRSIGs covering the DS RR for a zones delegated children must be no less than two days and no more than one week.","desc":"The best way for a zone administrator to minimize the impact of a key compromise is by limiting the validity period of RRSIGs in the zone and in the parent zone. This strategy limits the time during which an attacker can take advantage of a compromised key to forge responses. An attacker that has compromised a ZSK can use that key only during the KSK's signature validity interval. An attacker that has compromised a KSK can use that key for only as long as the signature interval of the RRSIG covering the DS RR in the delegating parent. These validity periods should be short, which will require frequent re-signing.\n\nTo prevent the impact of a compromised KSK, a delegating parent should set the signature validity period for RRSIGs covering DS RRs in the range of a few days to 1 week. This re-signing does not require frequent rollover of the parent's ZSK, but scheduled ZSK rollover should still be performed at regular intervals.","descriptions":{"default":"The best way for a zone administrator to minimize the impact of a key compromise is by limiting the validity period of RRSIGs in the zone and in the parent zone. This strategy limits the time during which an attacker can take advantage of a compromised key to forge responses. An attacker that has compromised a ZSK can use that key only during the KSK's signature validity interval. An attacker that has compromised a KSK can use that key for only as long as the signature interval of the RRSIG covering the DS RR in the delegating parent. These validity periods should be short, which will require frequent re-signing.\n\nTo prevent the impact of a compromised KSK, a delegating parent should set the signature validity period for RRSIGs covering DS RRs in the range of a few days to 1 week. This re-signing does not require frequent rollover of the parent's ZSK, but scheduled ZSK rollover should still be performed at regular intervals.","check":"Review the DNS configuration files. Ensure the validity period for RRSIGs for all zones' delegated children has been explicitly configured and is configured for a range of no less than two days and no more than one week.\n\nIf the validity period for the RRSIGs for all zones' delegated children is less than two days or greater than one week, this is a finding.","fix":"Configure RRSIGs for all zones' delegated children to be greater than two days and less than one week."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55441r1_chk","severity":"medium","gid":"V-54819","rid":"SV-69065r1_rule","stig_id":"SRG-APP-000214-DNS-000079","gtitle":"SRG-APP-000214-DNS-000079","fix_id":"F-59677r1_fix","documentable":null,"cci":["CCI-001179"],"nist":["SC-20 b"]}},{"id":"SV-69067","code":"control 'SV-69067' do\n  title 'The DNS server implementation must enforce approved authorizations for controlling the flow of information between DNS servers and between DNS servers and DNS clients based on DNSSEC policies.'\n  desc 'A mechanism to detect and prevent unauthorized communication flow must be configured or provided as part of the system design. If information flow is not enforced based on approved authorizations, the system may become compromised. Information flow control regulates where information is allowed to travel within a system and between interconnected systems. The flow of all application information must be monitored and controlled so it does not introduce any unacceptable risk to the systems or data.\n\nApplication-specific examples of enforcement occurs in systems that employ rule sets or establish configuration settings that restrict information system services or provide a message filtering capability based on message content (e.g., implementing key word searches or using document characteristics).\n\nApplications providing information flow control must be able to enforce approved authorizations for controlling the flow of information between interconnected systems in accordance with applicable policy.\n\nWithin the context of DNS, this is applicable in terms of controlling the flow of DNS information between systems, such as DNS zone transfers.'\n  desc 'check', 'Review the DNS server implementation configuration to determine if the DNS server enforces approved authorizations for controlling the information flow by using DNSSEC and TSIG signing practices that restrict zone transfers between DNS servers, and dynamic updates from DNS clients to the master name server, to digitally signed traffic.\n\nIf the DNS server does not enforce approved authorizations for controlling the information flow by using DNSSEC and TSIG signing practices, restricting zone transfers between DNS servers and dynamic updates from DNS clients to the master name server to digitally signed traffic, this is a finding.'\n  desc 'fix', 'Configure the DNS server to enforce approved authorizations for controlling the information flow by applying DNSSEC and TSIG signing practices to the DNS implementation.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55443r3_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54821'\n  tag rid: 'SV-69067r1_rule'\n  tag stig_id: 'SRG-APP-000215-DNS-000003'\n  tag gtitle: 'SRG-APP-000215-DNS-000003'\n  tag fix_id: 'F-59679r2_fix'\n  tag 'documentable'\n  tag cci: ['CCI-001663']\n  tag nist: ['SC-20 b']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69067.rb"},"title":"The DNS server implementation must enforce approved authorizations for controlling the flow of information between DNS servers and between DNS servers and DNS clients based on DNSSEC policies.","desc":"A mechanism to detect and prevent unauthorized communication flow must be configured or provided as part of the system design. If information flow is not enforced based on approved authorizations, the system may become compromised. Information flow control regulates where information is allowed to travel within a system and between interconnected systems. The flow of all application information must be monitored and controlled so it does not introduce any unacceptable risk to the systems or data.\n\nApplication-specific examples of enforcement occurs in systems that employ rule sets or establish configuration settings that restrict information system services or provide a message filtering capability based on message content (e.g., implementing key word searches or using document characteristics).\n\nApplications providing information flow control must be able to enforce approved authorizations for controlling the flow of information between interconnected systems in accordance with applicable policy.\n\nWithin the context of DNS, this is applicable in terms of controlling the flow of DNS information between systems, such as DNS zone transfers.","descriptions":{"default":"A mechanism to detect and prevent unauthorized communication flow must be configured or provided as part of the system design. If information flow is not enforced based on approved authorizations, the system may become compromised. Information flow control regulates where information is allowed to travel within a system and between interconnected systems. The flow of all application information must be monitored and controlled so it does not introduce any unacceptable risk to the systems or data.\n\nApplication-specific examples of enforcement occurs in systems that employ rule sets or establish configuration settings that restrict information system services or provide a message filtering capability based on message content (e.g., implementing key word searches or using document characteristics).\n\nApplications providing information flow control must be able to enforce approved authorizations for controlling the flow of information between interconnected systems in accordance with applicable policy.\n\nWithin the context of DNS, this is applicable in terms of controlling the flow of DNS information between systems, such as DNS zone transfers.","check":"Review the DNS server implementation configuration to determine if the DNS server enforces approved authorizations for controlling the information flow by using DNSSEC and TSIG signing practices that restrict zone transfers between DNS servers, and dynamic updates from DNS clients to the master name server, to digitally signed traffic.\n\nIf the DNS server does not enforce approved authorizations for controlling the information flow by using DNSSEC and TSIG signing practices, restricting zone transfers between DNS servers and dynamic updates from DNS clients to the master name server to digitally signed traffic, this is a finding.","fix":"Configure the DNS server to enforce approved authorizations for controlling the information flow by applying DNSSEC and TSIG signing practices to the DNS implementation."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55443r3_chk","severity":"medium","gid":"V-54821","rid":"SV-69067r1_rule","stig_id":"SRG-APP-000215-DNS-000003","gtitle":"SRG-APP-000215-DNS-000003","fix_id":"F-59679r2_fix","documentable":null,"cci":["CCI-001663"],"nist":["SC-20 b"]}},{"id":"SV-69069","code":"control 'SV-69069' do\n  title 'A DNS server implementation must provide the means to enable verification of a chain of trust among parent and child domains (if the child supports secure resolution services).'\n  desc \"If name server replies are invalid or cannot be validated, many networking functions and communication would be adversely affected. With DNS, the presence of Delegation Signer (DS) records associated with child zones informs clients of the security status of child zones. These records are crucial to the DNSSEC chain of trust model. Each parent domain's DS record is used to verify the DNSKEY record in its subdomain, from the top of the DNS hierarchy down.\n\nA DNS server is an example of an information system providing name/address resolution service. Digital signatures and cryptographic keys are examples of additional artifacts. DNS resource records are examples of authoritative data. Applications other than the DNS to map between host/service names and network addresses must provide other means to assure the authenticity and integrity of response data.\n\nDNSSEC provides the means to verify integrity assurances for the host/service name to network address resolution information obtained through the service. By using the delegation signer (DS) resource records in the DNS, the security status of a child domain can be validated.  The DS resource record is used to identify the DNSSEC signing key of a delegated zone.\n\nStarting from a trusted name server (such as the root name server) and down to the current source of response through successive verifications of signature of the public key of a child by its parent, the chain of trust is established. The public key of the trusted name servers is called the trust anchor. After authenticating the source, the next process DNSSEC calls for is to authenticate the response. This requires that responses consist of not only the requested RRs but also an authenticator associated with them. In DNSSEC, this authenticator is the digital signature of a Resource Record (RR) Set. The digital signature of an RRSet is encapsulated through a special RRType called RRSIG. The DNS client using the trusted public key of the source (whose trust has just been established) then verifies the digital signature to detect if the response is valid or bogus.\n\nThis control enables the DNS to obtain origin authentication and integrity verification assurances for the host/service name to network address resolution information obtained through the service.  Without indication of the security status of a child domain and enabling verification of a chain of trust, integrity and availability of the DNS infrastructure cannot be assured.\"\n  desc 'check', \"If the system being reviewed is an authoritative server, it must be able to provide records that can be authenticated (DS, RRSIG, etc.).\n\nCompare the child zone's hash stored in the child's DS RR to the hash for the child's zone in the parent's zone information. Verify it is the same hash.\n\nIf the hashes do not match, or the child zone is not digitally signed, this is a finding.\n\nIf the system is a recursive server, it must be able to pass DNSSEC data and perform DNSSEC validation.\n\nIf DNSSEC validation capability is not enabled on a recursive DNS server, this is a finding.\n\nIf the hash for child domains is not reflected in the parent zone and the chain of trust is not verifiable, this is a finding.\"\n  desc 'fix', 'Configure a recursive, caching only server with the ability to perform DNSSEC validation.\n\nConfigure an authoritative name server to sign all zones and to update the entire chain of trust with the signature.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55445r3_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54823'\n  tag rid: 'SV-69069r1_rule'\n  tag stig_id: 'SRG-APP-000215-DNS-000026'\n  tag gtitle: 'SRG-APP-000215-DNS-000026'\n  tag fix_id: 'F-59681r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-001663']\n  tag nist: ['SC-20 b']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69069.rb"},"title":"A DNS server implementation must provide the means to enable verification of a chain of trust among parent and child domains (if the child supports secure resolution services).","desc":"If name server replies are invalid or cannot be validated, many networking functions and communication would be adversely affected. With DNS, the presence of Delegation Signer (DS) records associated with child zones informs clients of the security status of child zones. These records are crucial to the DNSSEC chain of trust model. Each parent domain's DS record is used to verify the DNSKEY record in its subdomain, from the top of the DNS hierarchy down.\n\nA DNS server is an example of an information system providing name/address resolution service. Digital signatures and cryptographic keys are examples of additional artifacts. DNS resource records are examples of authoritative data. Applications other than the DNS to map between host/service names and network addresses must provide other means to assure the authenticity and integrity of response data.\n\nDNSSEC provides the means to verify integrity assurances for the host/service name to network address resolution information obtained through the service. By using the delegation signer (DS) resource records in the DNS, the security status of a child domain can be validated.  The DS resource record is used to identify the DNSSEC signing key of a delegated zone.\n\nStarting from a trusted name server (such as the root name server) and down to the current source of response through successive verifications of signature of the public key of a child by its parent, the chain of trust is established. The public key of the trusted name servers is called the trust anchor. After authenticating the source, the next process DNSSEC calls for is to authenticate the response. This requires that responses consist of not only the requested RRs but also an authenticator associated with them. In DNSSEC, this authenticator is the digital signature of a Resource Record (RR) Set. The digital signature of an RRSet is encapsulated through a special RRType called RRSIG. The DNS client using the trusted public key of the source (whose trust has just been established) then verifies the digital signature to detect if the response is valid or bogus.\n\nThis control enables the DNS to obtain origin authentication and integrity verification assurances for the host/service name to network address resolution information obtained through the service.  Without indication of the security status of a child domain and enabling verification of a chain of trust, integrity and availability of the DNS infrastructure cannot be assured.","descriptions":{"default":"If name server replies are invalid or cannot be validated, many networking functions and communication would be adversely affected. With DNS, the presence of Delegation Signer (DS) records associated with child zones informs clients of the security status of child zones. These records are crucial to the DNSSEC chain of trust model. Each parent domain's DS record is used to verify the DNSKEY record in its subdomain, from the top of the DNS hierarchy down.\n\nA DNS server is an example of an information system providing name/address resolution service. Digital signatures and cryptographic keys are examples of additional artifacts. DNS resource records are examples of authoritative data. Applications other than the DNS to map between host/service names and network addresses must provide other means to assure the authenticity and integrity of response data.\n\nDNSSEC provides the means to verify integrity assurances for the host/service name to network address resolution information obtained through the service. By using the delegation signer (DS) resource records in the DNS, the security status of a child domain can be validated.  The DS resource record is used to identify the DNSSEC signing key of a delegated zone.\n\nStarting from a trusted name server (such as the root name server) and down to the current source of response through successive verifications of signature of the public key of a child by its parent, the chain of trust is established. The public key of the trusted name servers is called the trust anchor. After authenticating the source, the next process DNSSEC calls for is to authenticate the response. This requires that responses consist of not only the requested RRs but also an authenticator associated with them. In DNSSEC, this authenticator is the digital signature of a Resource Record (RR) Set. The digital signature of an RRSet is encapsulated through a special RRType called RRSIG. The DNS client using the trusted public key of the source (whose trust has just been established) then verifies the digital signature to detect if the response is valid or bogus.\n\nThis control enables the DNS to obtain origin authentication and integrity verification assurances for the host/service name to network address resolution information obtained through the service.  Without indication of the security status of a child domain and enabling verification of a chain of trust, integrity and availability of the DNS infrastructure cannot be assured.","check":"If the system being reviewed is an authoritative server, it must be able to provide records that can be authenticated (DS, RRSIG, etc.).\n\nCompare the child zone's hash stored in the child's DS RR to the hash for the child's zone in the parent's zone information. Verify it is the same hash.\n\nIf the hashes do not match, or the child zone is not digitally signed, this is a finding.\n\nIf the system is a recursive server, it must be able to pass DNSSEC data and perform DNSSEC validation.\n\nIf DNSSEC validation capability is not enabled on a recursive DNS server, this is a finding.\n\nIf the hash for child domains is not reflected in the parent zone and the chain of trust is not verifiable, this is a finding.","fix":"Configure a recursive, caching only server with the ability to perform DNSSEC validation.\n\nConfigure an authoritative name server to sign all zones and to update the entire chain of trust with the signature."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55445r3_chk","severity":"medium","gid":"V-54823","rid":"SV-69069r1_rule","stig_id":"SRG-APP-000215-DNS-000026","gtitle":"SRG-APP-000215-DNS-000026","fix_id":"F-59681r1_fix","documentable":null,"cci":["CCI-001663"],"nist":["SC-20 b"]}},{"id":"SV-69071","code":"control 'SV-69071' do\n  title 'The DNS implementation must protect the authenticity of communications sessions for zone transfers.'\n  desc 'DNS is a fundamental network service that is prone to various attacks, such as cache poisoning and man-in-the middle attacks. \n\nIf communication sessions are not provided appropriate validity protections, such as the employment of DNSSEC, the authenticity of the data cannot be guaranteed.'\n  desc 'check', 'Review the DNS server implementation to confirm zone transfers are signing using transaction signing (TSIG) shared key or via SIG(0) asymmetric cryptography public keys.\n\nIf the DNS server does not ensure integrity of zone transfers by TSIG or SIG(0) signing, this is a finding.'\n  desc 'fix', 'Configure the DNS server with transaction signing (TSIG) or SIG(0).'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55447r2_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54825'\n  tag rid: 'SV-69071r1_rule'\n  tag stig_id: 'SRG-APP-000219-DNS-000028'\n  tag gtitle: 'SRG-APP-000219-DNS-000028'\n  tag fix_id: 'F-59683r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-001184']\n  tag nist: ['SC-23']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69071.rb"},"title":"The DNS implementation must protect the authenticity of communications sessions for zone transfers.","desc":"DNS is a fundamental network service that is prone to various attacks, such as cache poisoning and man-in-the middle attacks. \n\nIf communication sessions are not provided appropriate validity protections, such as the employment of DNSSEC, the authenticity of the data cannot be guaranteed.","descriptions":{"default":"DNS is a fundamental network service that is prone to various attacks, such as cache poisoning and man-in-the middle attacks. \n\nIf communication sessions are not provided appropriate validity protections, such as the employment of DNSSEC, the authenticity of the data cannot be guaranteed.","check":"Review the DNS server implementation to confirm zone transfers are signing using transaction signing (TSIG) shared key or via SIG(0) asymmetric cryptography public keys.\n\nIf the DNS server does not ensure integrity of zone transfers by TSIG or SIG(0) signing, this is a finding.","fix":"Configure the DNS server with transaction signing (TSIG) or SIG(0)."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55447r2_chk","severity":"medium","gid":"V-54825","rid":"SV-69071r1_rule","stig_id":"SRG-APP-000219-DNS-000028","gtitle":"SRG-APP-000219-DNS-000028","fix_id":"F-59683r1_fix","documentable":null,"cci":["CCI-001184"],"nist":["SC-23"]}},{"id":"SV-69073","code":"control 'SV-69073' do\n  title 'The DNS implementation must protect the authenticity of communications sessions for dynamic updates.'\n  desc 'DNS is a fundamental network service that is prone to various attacks, such as cache poisoning and man-in-the middle attacks. If communication sessions are not provided appropriate validity protections, such as the employment of DNSSEC, the authenticity of the data cannot be guaranteed.'\n  desc 'check', 'Review the DNS server configuration to determine if communication sessions for dynamic updates are provided authenticity protection. \n\nIf communications sessions do not employ authenticity protections, this is a finding.'\n  desc 'fix', 'Configure the DNS server to employ mechanisms to protect the authenticity of communications sessions for dynamic updates.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55449r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54827'\n  tag rid: 'SV-69073r1_rule'\n  tag stig_id: 'SRG-APP-000219-DNS-000029'\n  tag gtitle: 'SRG-APP-000219-DNS-000029'\n  tag fix_id: 'F-59685r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-001184']\n  tag nist: ['SC-23']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69073.rb"},"title":"The DNS implementation must protect the authenticity of communications sessions for dynamic updates.","desc":"DNS is a fundamental network service that is prone to various attacks, such as cache poisoning and man-in-the middle attacks. If communication sessions are not provided appropriate validity protections, such as the employment of DNSSEC, the authenticity of the data cannot be guaranteed.","descriptions":{"default":"DNS is a fundamental network service that is prone to various attacks, such as cache poisoning and man-in-the middle attacks. If communication sessions are not provided appropriate validity protections, such as the employment of DNSSEC, the authenticity of the data cannot be guaranteed.","check":"Review the DNS server configuration to determine if communication sessions for dynamic updates are provided authenticity protection. \n\nIf communications sessions do not employ authenticity protections, this is a finding.","fix":"Configure the DNS server to employ mechanisms to protect the authenticity of communications sessions for dynamic updates."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55449r1_chk","severity":"medium","gid":"V-54827","rid":"SV-69073r1_rule","stig_id":"SRG-APP-000219-DNS-000029","gtitle":"SRG-APP-000219-DNS-000029","fix_id":"F-59685r1_fix","documentable":null,"cci":["CCI-001184"],"nist":["SC-23"]}},{"id":"SV-69075","code":"control 'SV-69075' do\n  title 'The DNS implementation must protect the authenticity of communications sessions for queries.'\n  desc 'The underlying feature in the major threat associated with DNS query/response (i.e., forged response or response failure) is the integrity of DNS data returned in the response. An integral part of integrity verification is to ensure that valid data has originated from the right source. DNSSEC is required for securing the DNS query/response transaction by providing data origin authentication and data integrity verification through signature verification and the chain of trust.'\n  desc 'check', 'Review the DNS server configuration to ensure all zones are configured to provide resolvers with verification of query response integrity via DNSSEC.\n\nIf the DNS Server configuration is not configured to provide resolvers with verification of query response integrity via the implementation of DNSSEC, this is a finding.'\n  desc 'fix', 'Configure the DNS server to provide resolvers with verification of query response integrity via DNSSEC.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55451r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54829'\n  tag rid: 'SV-69075r1_rule'\n  tag stig_id: 'SRG-APP-000219-DNS-000030'\n  tag gtitle: 'SRG-APP-000219-DNS-000030'\n  tag fix_id: 'F-59687r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-001184']\n  tag nist: ['SC-23']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69075.rb"},"title":"The DNS implementation must protect the authenticity of communications sessions for queries.","desc":"The underlying feature in the major threat associated with DNS query/response (i.e., forged response or response failure) is the integrity of DNS data returned in the response. An integral part of integrity verification is to ensure that valid data has originated from the right source. DNSSEC is required for securing the DNS query/response transaction by providing data origin authentication and data integrity verification through signature verification and the chain of trust.","descriptions":{"default":"The underlying feature in the major threat associated with DNS query/response (i.e., forged response or response failure) is the integrity of DNS data returned in the response. An integral part of integrity verification is to ensure that valid data has originated from the right source. DNSSEC is required for securing the DNS query/response transaction by providing data origin authentication and data integrity verification through signature verification and the chain of trust.","check":"Review the DNS server configuration to ensure all zones are configured to provide resolvers with verification of query response integrity via DNSSEC.\n\nIf the DNS Server configuration is not configured to provide resolvers with verification of query response integrity via the implementation of DNSSEC, this is a finding.","fix":"Configure the DNS server to provide resolvers with verification of query response integrity via DNSSEC."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55451r1_chk","severity":"medium","gid":"V-54829","rid":"SV-69075r1_rule","stig_id":"SRG-APP-000219-DNS-000030","gtitle":"SRG-APP-000219-DNS-000030","fix_id":"F-59687r1_fix","documentable":null,"cci":["CCI-001184"],"nist":["SC-23"]}},{"id":"SV-69077","code":"control 'SV-69077' do\n  title 'The DNS server implementation must fail to a secure state if system initialization fails, shutdown fails, or aborts fail.'\n  desc 'Failure to a known safe state helps prevent systems from failing to a state that may cause loss of data or unauthorized access to system resources. Applications or systems that fail suddenly and with no incorporated failure state planning may leave the hosting system available but with a reduced security protection capability. Preserving information system state information also facilitates system restart and return to the operational mode of the organization with less disruption of mission-essential processes. \n\nIn general, application security mechanisms should be designed so that a failure will follow the same execution path as disallowing the operation. For example, security methods, such as isAuthorized(), isAuthenticated(), and validate(), should all return false if there is an exception during processing. If security controls can throw exceptions, they must be very clear about exactly what that condition means. \n\nAbort refers to stopping a program or function before it has finished naturally. The term abort refers to both requested and unexpected terminations.'\n  desc 'check', 'Review the DNS server implementation configuration to determine if the DNS server fails to a secure state if system initialization fails, shutdown fails, or aborts fail. If the DNS server does not fail to a secure state under these conditions, this is a finding.'\n  desc 'fix', 'Configure the DNS server to fail to a secure state if system initialization fails, shutdown fails, or aborts fail.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55453r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54831'\n  tag rid: 'SV-69077r1_rule'\n  tag stig_id: 'SRG-APP-000225-DNS-000031'\n  tag gtitle: 'SRG-APP-000225-DNS-000031'\n  tag fix_id: 'F-59689r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-001190']\n  tag nist: ['SC-24']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69077.rb"},"title":"The DNS server implementation must fail to a secure state if system initialization fails, shutdown fails, or aborts fail.","desc":"Failure to a known safe state helps prevent systems from failing to a state that may cause loss of data or unauthorized access to system resources. Applications or systems that fail suddenly and with no incorporated failure state planning may leave the hosting system available but with a reduced security protection capability. Preserving information system state information also facilitates system restart and return to the operational mode of the organization with less disruption of mission-essential processes. \n\nIn general, application security mechanisms should be designed so that a failure will follow the same execution path as disallowing the operation. For example, security methods, such as isAuthorized(), isAuthenticated(), and validate(), should all return false if there is an exception during processing. If security controls can throw exceptions, they must be very clear about exactly what that condition means. \n\nAbort refers to stopping a program or function before it has finished naturally. The term abort refers to both requested and unexpected terminations.","descriptions":{"default":"Failure to a known safe state helps prevent systems from failing to a state that may cause loss of data or unauthorized access to system resources. Applications or systems that fail suddenly and with no incorporated failure state planning may leave the hosting system available but with a reduced security protection capability. Preserving information system state information also facilitates system restart and return to the operational mode of the organization with less disruption of mission-essential processes. \n\nIn general, application security mechanisms should be designed so that a failure will follow the same execution path as disallowing the operation. For example, security methods, such as isAuthorized(), isAuthenticated(), and validate(), should all return false if there is an exception during processing. If security controls can throw exceptions, they must be very clear about exactly what that condition means. \n\nAbort refers to stopping a program or function before it has finished naturally. The term abort refers to both requested and unexpected terminations.","check":"Review the DNS server implementation configuration to determine if the DNS server fails to a secure state if system initialization fails, shutdown fails, or aborts fail. If the DNS server does not fail to a secure state under these conditions, this is a finding.","fix":"Configure the DNS server to fail to a secure state if system initialization fails, shutdown fails, or aborts fail."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55453r1_chk","severity":"medium","gid":"V-54831","rid":"SV-69077r1_rule","stig_id":"SRG-APP-000225-DNS-000031","gtitle":"SRG-APP-000225-DNS-000031","fix_id":"F-59689r1_fix","documentable":null,"cci":["CCI-001190"],"nist":["SC-24"]}},{"id":"SV-69079","code":"control 'SV-69079' do\n  title 'In the event of a system failure, the DNS server implementation must preserve any information necessary to determine cause of failure and any information necessary to return to operations with least disruption to mission processes.'\n  desc 'Failure to a known state can address safety or security in accordance with the mission/business needs of the organization. Failure to a known secure state helps prevent a loss of confidentiality, integrity, or availability in the event of a failure of the information system or a component of the system. Preserving application state information helps to facilitate application restart and return to the operational mode of the organization with less disruption to mission-essential processes.'\n  desc 'check', 'Review the DNS server implementation configuration to determine if the DNS server preserves any information necessary to determine cause of system failure and any information necessary to return to operations with least disruption to mission processes. If the DNS server does not preserve the necessary information, this is a finding.'\n  desc 'fix', 'Configure the DNS server to preserve any information necessary to determine cause of system failure and any information necessary to return to operations with least disruption to mission processes.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55455r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54833'\n  tag rid: 'SV-69079r1_rule'\n  tag stig_id: 'SRG-APP-000226-DNS-000032'\n  tag gtitle: 'SRG-APP-000226-DNS-000032'\n  tag fix_id: 'F-59691r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-001665']\n  tag nist: ['SC-24']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69079.rb"},"title":"In the event of a system failure, the DNS server implementation must preserve any information necessary to determine cause of failure and any information necessary to return to operations with least disruption to mission processes.","desc":"Failure to a known state can address safety or security in accordance with the mission/business needs of the organization. Failure to a known secure state helps prevent a loss of confidentiality, integrity, or availability in the event of a failure of the information system or a component of the system. Preserving application state information helps to facilitate application restart and return to the operational mode of the organization with less disruption to mission-essential processes.","descriptions":{"default":"Failure to a known state can address safety or security in accordance with the mission/business needs of the organization. Failure to a known secure state helps prevent a loss of confidentiality, integrity, or availability in the event of a failure of the information system or a component of the system. Preserving application state information helps to facilitate application restart and return to the operational mode of the organization with less disruption to mission-essential processes.","check":"Review the DNS server implementation configuration to determine if the DNS server preserves any information necessary to determine cause of system failure and any information necessary to return to operations with least disruption to mission processes. If the DNS server does not preserve the necessary information, this is a finding.","fix":"Configure the DNS server to preserve any information necessary to determine cause of system failure and any information necessary to return to operations with least disruption to mission processes."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55455r1_chk","severity":"medium","gid":"V-54833","rid":"SV-69079r1_rule","stig_id":"SRG-APP-000226-DNS-000032","gtitle":"SRG-APP-000226-DNS-000032","fix_id":"F-59691r1_fix","documentable":null,"cci":["CCI-001665"],"nist":["SC-24"]}},{"id":"SV-69081","code":"control 'SV-69081' do\n  title 'The DNS server implementation must protect the confidentiality and integrity of secret/private cryptographic keys at rest and the integrity of DNS information at rest.'\n  desc 'Information at rest refers to the state of information when it is located on a secondary storage device within an organizational information system. Mobile devices, laptops, desktops, and storage devices can be either lost or stolen, and the contents of their data storage (e.g., hard drives and non-volatile memory) can be read, copied, or altered. Applications and application users generate information throughout the course of their application use.\n\nThe DNS server must protect the confidentiality and integrity of shared keys (for TSIG) and private keys (for SIG(0)) and must protect the integrity of DNS information. There is no need to protect the confidentiality of DNS information because it is accessible by all devices that can contact the server.'\n  desc 'check', 'Review the DNS server implementation configuration to determine if the DNS server protects the confidentiality and integrity of secret/private cryptographic keys at rest and the integrity of DNS information at rest. If the DNS server does not properly protect confidentiality and integrity, this is a finding.'\n  desc 'fix', 'Configure the DNS server to protect the confidentiality and integrity of secret/private cryptographic keys at rest and the integrity of DNS information at rest.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55457r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54835'\n  tag rid: 'SV-69081r1_rule'\n  tag stig_id: 'SRG-APP-000231-DNS-000033'\n  tag gtitle: 'SRG-APP-000231-DNS-000033'\n  tag fix_id: 'F-59693r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-001199']\n  tag nist: ['SC-28']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69081.rb"},"title":"The DNS server implementation must protect the confidentiality and integrity of secret/private cryptographic keys at rest and the integrity of DNS information at rest.","desc":"Information at rest refers to the state of information when it is located on a secondary storage device within an organizational information system. Mobile devices, laptops, desktops, and storage devices can be either lost or stolen, and the contents of their data storage (e.g., hard drives and non-volatile memory) can be read, copied, or altered. Applications and application users generate information throughout the course of their application use.\n\nThe DNS server must protect the confidentiality and integrity of shared keys (for TSIG) and private keys (for SIG(0)) and must protect the integrity of DNS information. There is no need to protect the confidentiality of DNS information because it is accessible by all devices that can contact the server.","descriptions":{"default":"Information at rest refers to the state of information when it is located on a secondary storage device within an organizational information system. Mobile devices, laptops, desktops, and storage devices can be either lost or stolen, and the contents of their data storage (e.g., hard drives and non-volatile memory) can be read, copied, or altered. Applications and application users generate information throughout the course of their application use.\n\nThe DNS server must protect the confidentiality and integrity of shared keys (for TSIG) and private keys (for SIG(0)) and must protect the integrity of DNS information. There is no need to protect the confidentiality of DNS information because it is accessible by all devices that can contact the server.","check":"Review the DNS server implementation configuration to determine if the DNS server protects the confidentiality and integrity of secret/private cryptographic keys at rest and the integrity of DNS information at rest. If the DNS server does not properly protect confidentiality and integrity, this is a finding.","fix":"Configure the DNS server to protect the confidentiality and integrity of secret/private cryptographic keys at rest and the integrity of DNS information at rest."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55457r1_chk","severity":"medium","gid":"V-54835","rid":"SV-69081r1_rule","stig_id":"SRG-APP-000231-DNS-000033","gtitle":"SRG-APP-000231-DNS-000033","fix_id":"F-59693r1_fix","documentable":null,"cci":["CCI-001199"],"nist":["SC-28"]}},{"id":"SV-69083","code":"control 'SV-69083' do\n  title 'The DNS server implementation must prevent unauthorized and unintended information transfer via shared system resources.'\n  desc 'Preventing unauthorized information transfers mitigates the risk of information, including encrypted representations of information, produced by the actions of prior users/roles (or the actions of processes acting on behalf of prior users/roles) from being available to any current users/roles (or current processes) that obtain access to shared system resources (e.g., registers, main memory, hard disks) after those resources have been released back to information systems. The control of information in shared resources is also commonly referred to as object reuse and residual information protection. \n\nThere may be shared resources with configurable protections (e.g., files on storage) that may be assessed on specific information system components. The purpose of this control is to prevent information, produced by the actions of a prior process (or the actions of a process acting on behalf of a prior user) from being available to any current DNS process that obtains access to a shared system resource (e.g., registers, main memory, secondary storage) after the resource has been released back to the information system. Control of information in shared resources is also referred to as object reuse.'\n  desc 'check', 'Review the DNS vendor documentation and system configuration to determine if object reuse is protected. \n\nIf object reuse is not protected, this is a finding.'\n  desc 'fix', 'Configure the DNS system to protect object reuse to prevent unauthorized and unintended information transfer via shared system resources.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55459r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54837'\n  tag rid: 'SV-69083r1_rule'\n  tag stig_id: 'SRG-APP-000243-DNS-000034'\n  tag gtitle: 'SRG-APP-000243-DNS-000034'\n  tag fix_id: 'F-59695r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-001090']\n  tag nist: ['SC-4']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69083.rb"},"title":"The DNS server implementation must prevent unauthorized and unintended information transfer via shared system resources.","desc":"Preventing unauthorized information transfers mitigates the risk of information, including encrypted representations of information, produced by the actions of prior users/roles (or the actions of processes acting on behalf of prior users/roles) from being available to any current users/roles (or current processes) that obtain access to shared system resources (e.g., registers, main memory, hard disks) after those resources have been released back to information systems. The control of information in shared resources is also commonly referred to as object reuse and residual information protection. \n\nThere may be shared resources with configurable protections (e.g., files on storage) that may be assessed on specific information system components. The purpose of this control is to prevent information, produced by the actions of a prior process (or the actions of a process acting on behalf of a prior user) from being available to any current DNS process that obtains access to a shared system resource (e.g., registers, main memory, secondary storage) after the resource has been released back to the information system. Control of information in shared resources is also referred to as object reuse.","descriptions":{"default":"Preventing unauthorized information transfers mitigates the risk of information, including encrypted representations of information, produced by the actions of prior users/roles (or the actions of processes acting on behalf of prior users/roles) from being available to any current users/roles (or current processes) that obtain access to shared system resources (e.g., registers, main memory, hard disks) after those resources have been released back to information systems. The control of information in shared resources is also commonly referred to as object reuse and residual information protection. \n\nThere may be shared resources with configurable protections (e.g., files on storage) that may be assessed on specific information system components. The purpose of this control is to prevent information, produced by the actions of a prior process (or the actions of a process acting on behalf of a prior user) from being available to any current DNS process that obtains access to a shared system resource (e.g., registers, main memory, secondary storage) after the resource has been released back to the information system. Control of information in shared resources is also referred to as object reuse.","check":"Review the DNS vendor documentation and system configuration to determine if object reuse is protected. \n\nIf object reuse is not protected, this is a finding.","fix":"Configure the DNS system to protect object reuse to prevent unauthorized and unintended information transfer via shared system resources."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55459r1_chk","severity":"medium","gid":"V-54837","rid":"SV-69083r1_rule","stig_id":"SRG-APP-000243-DNS-000034","gtitle":"SRG-APP-000243-DNS-000034","fix_id":"F-59695r1_fix","documentable":null,"cci":["CCI-001090"],"nist":["SC-4"]}},{"id":"SV-69085","code":"control 'SV-69085' do\n  title 'The DNS server implementation must restrict the ability of individuals to use the DNS server to launch Denial of Service (DoS) attacks against other information systems.'\n  desc 'A DoS is a condition where a resource is not available for legitimate users. When this occurs, the organization either cannot accomplish its mission or must operate at degraded capacity.  Individuals of concern can include hostile insiders or external adversaries that have successfully breached the information system and are using the system as a platform to launch cyber attacks on third parties.\n\nApplications and application developers must take the steps needed to ensure users cannot use an authorized application to launch DoS attacks against other systems and networks. For example, applications may include mechanisms that throttle network traffic so users are not able to generate unlimited network traffic via the application. Limiting system resources that are allocated to any user to a bare minimum may also reduce the ability of users to launch some DoS attacks.\n\nWhen it comes to DoS attacks, most of the attention is paid to ensuring that systems and applications are not victims of these attacks. A DoS attack against the DNS infrastructure has the potential to cause a denial of service to all network users. As the DNS is a distributed backbone service of the Internet, numerous forms of attacks result in DoS, and they are still prevalent on the Internet today. Some potential DoS attacks against the DNS include malformed packet flood, spoofed source addresses, and distributed DoS, and the DNS can be exploited to launch amplification attacks upon other systems.\n\nWhile it is true that those accountable for systems want to ensure they are not affected by a DoS attack, they also need to ensure their systems and applications are not used to launch such an attack against others. To that end, a variety of technologies exist to limit the effects of DoS attacks, such as careful configuration of resolver and recursion functionality.\n\nDNS administrators must take the steps needed to ensure other systems and tools cannot use exploits to launch DoS attacks against other systems and networks. An example would be designing the DNS architecture to include mechanisms that throttle DNS traffic and resources so that users/other DNS servers are not able to generate unlimited DNS traffic via the application.'\n  desc 'check', 'Review the DNS server implementation documentation and system settings to determine if the system restricts the ability of users or systems to launch Denial of Service (DoS) attacks against other information systems or networks from the DNS server.\n\nIf the DNS system is not configured to restrict this ability, this is a finding.'\n  desc 'fix', 'Configure the DNS system to restrict the ability of users or other systems to launch Denial of Service (DoS) attacks from the DNS system.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55461r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54839'\n  tag rid: 'SV-69085r1_rule'\n  tag stig_id: 'SRG-APP-000246-DNS-000035'\n  tag gtitle: 'SRG-APP-000246-DNS-000035'\n  tag fix_id: 'F-59697r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-001094']\n  tag nist: ['SC-5 (1)']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69085.rb"},"title":"The DNS server implementation must restrict the ability of individuals to use the DNS server to launch Denial of Service (DoS) attacks against other information systems.","desc":"A DoS is a condition where a resource is not available for legitimate users. When this occurs, the organization either cannot accomplish its mission or must operate at degraded capacity.  Individuals of concern can include hostile insiders or external adversaries that have successfully breached the information system and are using the system as a platform to launch cyber attacks on third parties.\n\nApplications and application developers must take the steps needed to ensure users cannot use an authorized application to launch DoS attacks against other systems and networks. For example, applications may include mechanisms that throttle network traffic so users are not able to generate unlimited network traffic via the application. Limiting system resources that are allocated to any user to a bare minimum may also reduce the ability of users to launch some DoS attacks.\n\nWhen it comes to DoS attacks, most of the attention is paid to ensuring that systems and applications are not victims of these attacks. A DoS attack against the DNS infrastructure has the potential to cause a denial of service to all network users. As the DNS is a distributed backbone service of the Internet, numerous forms of attacks result in DoS, and they are still prevalent on the Internet today. Some potential DoS attacks against the DNS include malformed packet flood, spoofed source addresses, and distributed DoS, and the DNS can be exploited to launch amplification attacks upon other systems.\n\nWhile it is true that those accountable for systems want to ensure they are not affected by a DoS attack, they also need to ensure their systems and applications are not used to launch such an attack against others. To that end, a variety of technologies exist to limit the effects of DoS attacks, such as careful configuration of resolver and recursion functionality.\n\nDNS administrators must take the steps needed to ensure other systems and tools cannot use exploits to launch DoS attacks against other systems and networks. An example would be designing the DNS architecture to include mechanisms that throttle DNS traffic and resources so that users/other DNS servers are not able to generate unlimited DNS traffic via the application.","descriptions":{"default":"A DoS is a condition where a resource is not available for legitimate users. When this occurs, the organization either cannot accomplish its mission or must operate at degraded capacity.  Individuals of concern can include hostile insiders or external adversaries that have successfully breached the information system and are using the system as a platform to launch cyber attacks on third parties.\n\nApplications and application developers must take the steps needed to ensure users cannot use an authorized application to launch DoS attacks against other systems and networks. For example, applications may include mechanisms that throttle network traffic so users are not able to generate unlimited network traffic via the application. Limiting system resources that are allocated to any user to a bare minimum may also reduce the ability of users to launch some DoS attacks.\n\nWhen it comes to DoS attacks, most of the attention is paid to ensuring that systems and applications are not victims of these attacks. A DoS attack against the DNS infrastructure has the potential to cause a denial of service to all network users. As the DNS is a distributed backbone service of the Internet, numerous forms of attacks result in DoS, and they are still prevalent on the Internet today. Some potential DoS attacks against the DNS include malformed packet flood, spoofed source addresses, and distributed DoS, and the DNS can be exploited to launch amplification attacks upon other systems.\n\nWhile it is true that those accountable for systems want to ensure they are not affected by a DoS attack, they also need to ensure their systems and applications are not used to launch such an attack against others. To that end, a variety of technologies exist to limit the effects of DoS attacks, such as careful configuration of resolver and recursion functionality.\n\nDNS administrators must take the steps needed to ensure other systems and tools cannot use exploits to launch DoS attacks against other systems and networks. An example would be designing the DNS architecture to include mechanisms that throttle DNS traffic and resources so that users/other DNS servers are not able to generate unlimited DNS traffic via the application.","check":"Review the DNS server implementation documentation and system settings to determine if the system restricts the ability of users or systems to launch Denial of Service (DoS) attacks against other information systems or networks from the DNS server.\n\nIf the DNS system is not configured to restrict this ability, this is a finding.","fix":"Configure the DNS system to restrict the ability of users or other systems to launch Denial of Service (DoS) attacks from the DNS system."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55461r1_chk","severity":"medium","gid":"V-54839","rid":"SV-69085r1_rule","stig_id":"SRG-APP-000246-DNS-000035","gtitle":"SRG-APP-000246-DNS-000035","fix_id":"F-59697r1_fix","documentable":null,"cci":["CCI-001094"],"nist":["SC-5 (1)"]}},{"id":"SV-69087","code":"control 'SV-69087' do\n  title 'The DNS server implementation must manage excess capacity, bandwidth, or other redundancy to limit the effects of information flooding types of Denial of Service (DoS) attacks.'\n  desc 'A DoS is a condition when a resource is not available for legitimate users. When this occurs, the organization either cannot accomplish its mission or must operate at degraded capacity. \n\nIn the case of application DoS attacks, care must be taken when designing the application to ensure the application makes the best use of system resources. SQL queries have the potential to consume large amounts of CPU cycles if they are not tuned for optimal performance. Web services containing complex calculations requiring large amounts of time to complete can bog down if too many requests for the service are encountered within a short period of time. \n\nA denial of service (DoS) attack against the DNS infrastructure has the potential to cause a DoS to all network users. As the DNS is a distributed backbone service of the Internet, various forms of amplification attacks resulting in DoS, while utilizing the DNS, are still prevalent on the Internet today. Some potential DoS flooding attacks against the DNS include malformed packet flood, spoofed source addresses, and distributed DoS. Without the DNS, users and systems would not have the ability to perform simple name to IP resolution. \n\nConfiguring the DNS implementation to defend against cache poisoning, employing increased capacity and bandwidth, building redundancy into the DNS architecture, utilizing DNSSEC, limiting and securing recursive services, DNS black holes, etc., may reduce the susceptibility to some flooding types of DoS attacks.'\n  desc 'check', 'Review the DNS server implementation and configuration to determine if excess capacity and bandwidth are managed and redundancy is built into the system to limit the effects of information flooding types of DoS attacks. \n\nIf excess capacity and bandwidth are not managed, or redundancy is not built into the architecture, this is a finding.'\n  desc 'fix', 'Configure the DNS server to manage excess capacity, bandwidth, or other redundancy to limit the effects of information flooding types of DoS attacks.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55463r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54841'\n  tag rid: 'SV-69087r1_rule'\n  tag stig_id: 'SRG-APP-000247-DNS-000036'\n  tag gtitle: 'SRG-APP-000247-DNS-000036'\n  tag fix_id: 'F-59699r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-001095']\n  tag nist: ['SC-5 (2)']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69087.rb"},"title":"The DNS server implementation must manage excess capacity, bandwidth, or other redundancy to limit the effects of information flooding types of Denial of Service (DoS) attacks.","desc":"A DoS is a condition when a resource is not available for legitimate users. When this occurs, the organization either cannot accomplish its mission or must operate at degraded capacity. \n\nIn the case of application DoS attacks, care must be taken when designing the application to ensure the application makes the best use of system resources. SQL queries have the potential to consume large amounts of CPU cycles if they are not tuned for optimal performance. Web services containing complex calculations requiring large amounts of time to complete can bog down if too many requests for the service are encountered within a short period of time. \n\nA denial of service (DoS) attack against the DNS infrastructure has the potential to cause a DoS to all network users. As the DNS is a distributed backbone service of the Internet, various forms of amplification attacks resulting in DoS, while utilizing the DNS, are still prevalent on the Internet today. Some potential DoS flooding attacks against the DNS include malformed packet flood, spoofed source addresses, and distributed DoS. Without the DNS, users and systems would not have the ability to perform simple name to IP resolution. \n\nConfiguring the DNS implementation to defend against cache poisoning, employing increased capacity and bandwidth, building redundancy into the DNS architecture, utilizing DNSSEC, limiting and securing recursive services, DNS black holes, etc., may reduce the susceptibility to some flooding types of DoS attacks.","descriptions":{"default":"A DoS is a condition when a resource is not available for legitimate users. When this occurs, the organization either cannot accomplish its mission or must operate at degraded capacity. \n\nIn the case of application DoS attacks, care must be taken when designing the application to ensure the application makes the best use of system resources. SQL queries have the potential to consume large amounts of CPU cycles if they are not tuned for optimal performance. Web services containing complex calculations requiring large amounts of time to complete can bog down if too many requests for the service are encountered within a short period of time. \n\nA denial of service (DoS) attack against the DNS infrastructure has the potential to cause a DoS to all network users. As the DNS is a distributed backbone service of the Internet, various forms of amplification attacks resulting in DoS, while utilizing the DNS, are still prevalent on the Internet today. Some potential DoS flooding attacks against the DNS include malformed packet flood, spoofed source addresses, and distributed DoS. Without the DNS, users and systems would not have the ability to perform simple name to IP resolution. \n\nConfiguring the DNS implementation to defend against cache poisoning, employing increased capacity and bandwidth, building redundancy into the DNS architecture, utilizing DNSSEC, limiting and securing recursive services, DNS black holes, etc., may reduce the susceptibility to some flooding types of DoS attacks.","check":"Review the DNS server implementation and configuration to determine if excess capacity and bandwidth are managed and redundancy is built into the system to limit the effects of information flooding types of DoS attacks. \n\nIf excess capacity and bandwidth are not managed, or redundancy is not built into the architecture, this is a finding.","fix":"Configure the DNS server to manage excess capacity, bandwidth, or other redundancy to limit the effects of information flooding types of DoS attacks."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55463r1_chk","severity":"medium","gid":"V-54841","rid":"SV-69087r1_rule","stig_id":"SRG-APP-000247-DNS-000036","gtitle":"SRG-APP-000247-DNS-000036","fix_id":"F-59699r1_fix","documentable":null,"cci":["CCI-001095"],"nist":["SC-5 (2)"]}},{"id":"SV-69089","code":"control 'SV-69089' do\n  title 'The DNS server implementation must check the validity of all data inputs except those specifically identified by the organization.'\n  desc \"Invalid user input occurs when a user inserts data or characters into an application's data entry fields and the application is unprepared to process that data. This results in unanticipated application behavior, potentially leading to an application or information system compromise. Invalid input is one of the primary methods employed when attempting to compromise an application. \n\nChecking the valid syntax and semantics of information system inputs (e.g., character set, length, numerical range, and acceptable values) verifies that inputs match specified definitions for format and content. Software applications typically follow well-defined protocols that use structured messages (i.e., commands or queries) to communicate between software modules or system components. Structured messages can contain raw or unstructured data interspersed with metadata or control information. If software applications use attacker-supplied inputs to construct structured messages without properly encoding such messages, then the attacker could insert malicious commands or special characters that can cause the data to be interpreted as control information or metadata. Consequently, the module or component that receives the tainted output will perform the wrong operations or otherwise interpret the data incorrectly. Prescreening inputs prior to passing to interpreters prevents the content from being unintentionally interpreted as commands. Input validation helps to ensure accurate and correct inputs and prevent attacks such as cross-site scripting and a variety of injection attacks.\n\nAttacks may be generated by entering invalid data into DNS transactions, in the hopes that the data will not be handled correctly and will allow a vulnerable condition to be exploited. To safeguard against this, all data entered in untrusted DNS transactions (e.g., DNS queries from external hosts) should be checked for validity before being processed further.\"\n  desc 'check', 'Review the DNS server implementation configuration to determine if the DNS server checks the validity of all data inputs except those specifically identified by the organization. If the DNS server does not check the validity of all data inputs, this is a finding.'\n  desc 'fix', 'Configure the DNS server to check the validity of all data inputs except those specifically identified by the organization.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55465r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54843'\n  tag rid: 'SV-69089r1_rule'\n  tag stig_id: 'SRG-APP-000251-DNS-000037'\n  tag gtitle: 'SRG-APP-000251-DNS-000037'\n  tag fix_id: 'F-59701r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-001310']\n  tag nist: ['SI-10']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69089.rb"},"title":"The DNS server implementation must check the validity of all data inputs except those specifically identified by the organization.","desc":"Invalid user input occurs when a user inserts data or characters into an application's data entry fields and the application is unprepared to process that data. This results in unanticipated application behavior, potentially leading to an application or information system compromise. Invalid input is one of the primary methods employed when attempting to compromise an application. \n\nChecking the valid syntax and semantics of information system inputs (e.g., character set, length, numerical range, and acceptable values) verifies that inputs match specified definitions for format and content. Software applications typically follow well-defined protocols that use structured messages (i.e., commands or queries) to communicate between software modules or system components. Structured messages can contain raw or unstructured data interspersed with metadata or control information. If software applications use attacker-supplied inputs to construct structured messages without properly encoding such messages, then the attacker could insert malicious commands or special characters that can cause the data to be interpreted as control information or metadata. Consequently, the module or component that receives the tainted output will perform the wrong operations or otherwise interpret the data incorrectly. Prescreening inputs prior to passing to interpreters prevents the content from being unintentionally interpreted as commands. Input validation helps to ensure accurate and correct inputs and prevent attacks such as cross-site scripting and a variety of injection attacks.\n\nAttacks may be generated by entering invalid data into DNS transactions, in the hopes that the data will not be handled correctly and will allow a vulnerable condition to be exploited. To safeguard against this, all data entered in untrusted DNS transactions (e.g., DNS queries from external hosts) should be checked for validity before being processed further.","descriptions":{"default":"Invalid user input occurs when a user inserts data or characters into an application's data entry fields and the application is unprepared to process that data. This results in unanticipated application behavior, potentially leading to an application or information system compromise. Invalid input is one of the primary methods employed when attempting to compromise an application. \n\nChecking the valid syntax and semantics of information system inputs (e.g., character set, length, numerical range, and acceptable values) verifies that inputs match specified definitions for format and content. Software applications typically follow well-defined protocols that use structured messages (i.e., commands or queries) to communicate between software modules or system components. Structured messages can contain raw or unstructured data interspersed with metadata or control information. If software applications use attacker-supplied inputs to construct structured messages without properly encoding such messages, then the attacker could insert malicious commands or special characters that can cause the data to be interpreted as control information or metadata. Consequently, the module or component that receives the tainted output will perform the wrong operations or otherwise interpret the data incorrectly. Prescreening inputs prior to passing to interpreters prevents the content from being unintentionally interpreted as commands. Input validation helps to ensure accurate and correct inputs and prevent attacks such as cross-site scripting and a variety of injection attacks.\n\nAttacks may be generated by entering invalid data into DNS transactions, in the hopes that the data will not be handled correctly and will allow a vulnerable condition to be exploited. To safeguard against this, all data entered in untrusted DNS transactions (e.g., DNS queries from external hosts) should be checked for validity before being processed further.","check":"Review the DNS server implementation configuration to determine if the DNS server checks the validity of all data inputs except those specifically identified by the organization. If the DNS server does not check the validity of all data inputs, this is a finding.","fix":"Configure the DNS server to check the validity of all data inputs except those specifically identified by the organization."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55465r1_chk","severity":"medium","gid":"V-54843","rid":"SV-69089r1_rule","stig_id":"SRG-APP-000251-DNS-000037","gtitle":"SRG-APP-000251-DNS-000037","fix_id":"F-59701r1_fix","documentable":null,"cci":["CCI-001310"],"nist":["SI-10"]}},{"id":"SV-69091","code":"control 'SV-69091' do\n  title 'The DNS server implementation must be configured to generate audit records for failed security verification tests so that the ISSO and ISSM can be notified of the failures.'\n  desc 'Security function is defined as the hardware, software, and/or firmware of the information system responsible for enforcing the system security policy and supporting the isolation of code and data on which the protection is based. Security functionality includes, but is not limited to, establishing system accounts, configuring access authorizations (i.e., permissions, privileges), setting events to be audited, and setting intrusion detection parameters. If personnel are not notified of failed security verification tests, they will not be able to take corrective action and the unsecure condition(s) will remain. Notifications provided by information systems include messages to local computer consoles, and/or hardware indications, such as lights.\n\nThe DNS server should be configured to generate audit records whenever a self-test fails. The OS/NDM is responsible for generating notification messages related to this audit record.'\n  desc 'check', 'Review the DNS server implementation configuration to determine if the DNS server is configured to generate audit records for failed security verification tests so that the ISSO and ISSM can be notified of the failures. If the DNS server is not configured to generate such audit records, this is a finding.'\n  desc 'fix', 'Configure the DNS server to generate audit records for failed security verification tests so that the ISSO and ISSM can be notified of the failures.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55467r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54845'\n  tag rid: 'SV-69091r1_rule'\n  tag stig_id: 'SRG-APP-000275-DNS-000040'\n  tag gtitle: 'SRG-APP-000275-DNS-000040'\n  tag fix_id: 'F-59703r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-001294']\n  tag nist: ['SI-6 c']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69091.rb"},"title":"The DNS server implementation must be configured to generate audit records for failed security verification tests so that the ISSO and ISSM can be notified of the failures.","desc":"Security function is defined as the hardware, software, and/or firmware of the information system responsible for enforcing the system security policy and supporting the isolation of code and data on which the protection is based. Security functionality includes, but is not limited to, establishing system accounts, configuring access authorizations (i.e., permissions, privileges), setting events to be audited, and setting intrusion detection parameters. If personnel are not notified of failed security verification tests, they will not be able to take corrective action and the unsecure condition(s) will remain. Notifications provided by information systems include messages to local computer consoles, and/or hardware indications, such as lights.\n\nThe DNS server should be configured to generate audit records whenever a self-test fails. The OS/NDM is responsible for generating notification messages related to this audit record.","descriptions":{"default":"Security function is defined as the hardware, software, and/or firmware of the information system responsible for enforcing the system security policy and supporting the isolation of code and data on which the protection is based. Security functionality includes, but is not limited to, establishing system accounts, configuring access authorizations (i.e., permissions, privileges), setting events to be audited, and setting intrusion detection parameters. If personnel are not notified of failed security verification tests, they will not be able to take corrective action and the unsecure condition(s) will remain. Notifications provided by information systems include messages to local computer consoles, and/or hardware indications, such as lights.\n\nThe DNS server should be configured to generate audit records whenever a self-test fails. The OS/NDM is responsible for generating notification messages related to this audit record.","check":"Review the DNS server implementation configuration to determine if the DNS server is configured to generate audit records for failed security verification tests so that the ISSO and ISSM can be notified of the failures. If the DNS server is not configured to generate such audit records, this is a finding.","fix":"Configure the DNS server to generate audit records for failed security verification tests so that the ISSO and ISSM can be notified of the failures."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55467r1_chk","severity":"medium","gid":"V-54845","rid":"SV-69091r1_rule","stig_id":"SRG-APP-000275-DNS-000040","gtitle":"SRG-APP-000275-DNS-000040","fix_id":"F-59703r1_fix","documentable":null,"cci":["CCI-001294"],"nist":["SI-6 c"]}},{"id":"SV-69093","code":"control 'SV-69093' do\n  title 'The DNS Name Server software must be configured to refuse queries for its version information.'\n  desc 'Each newer version of the name server software, especially the BIND software, generally is devoid of vulnerabilities found in earlier versions because it has design changes incorporated to take care of those vulnerabilities. Of course, these vulnerabilities have been exploited (i.e., some form of attack was launched), and sufficient information has been generated with respect to the nature of those exploits. Thus, it makes good business sense to run the latest version of name server software because theoretically it is the safest version. \n\nIn some installations, it may not be possible to switch over to the latest version of name server software immediately. If the version of the name server software is revealed in queries, this information may be used by attackers who are looking for a specific version of the software which has a discovered weakness. To prevent information about which version of name server software is running on a system, name servers should be configured to refuse queries for its version information.'\n  desc 'check', 'Review the DNS configuration files. Verify the DNS name server is explicitly configured to refuse queries asking for its version information.\n\nIf the name server is not configured to explicitly refuse queries asking for its version information, this is a finding.'\n  desc 'fix', 'Configure the name server to refuse queries for its version information.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55469r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54847'\n  tag rid: 'SV-69093r1_rule'\n  tag stig_id: 'SRG-APP-000333-DNS-000104'\n  tag gtitle: 'SRG-APP-000333-DNS-000104'\n  tag fix_id: 'F-59705r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-002201']\n  tag nist: ['AC-4 (12)']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69093.rb"},"title":"The DNS Name Server software must be configured to refuse queries for its version information.","desc":"Each newer version of the name server software, especially the BIND software, generally is devoid of vulnerabilities found in earlier versions because it has design changes incorporated to take care of those vulnerabilities. Of course, these vulnerabilities have been exploited (i.e., some form of attack was launched), and sufficient information has been generated with respect to the nature of those exploits. Thus, it makes good business sense to run the latest version of name server software because theoretically it is the safest version. \n\nIn some installations, it may not be possible to switch over to the latest version of name server software immediately. If the version of the name server software is revealed in queries, this information may be used by attackers who are looking for a specific version of the software which has a discovered weakness. To prevent information about which version of name server software is running on a system, name servers should be configured to refuse queries for its version information.","descriptions":{"default":"Each newer version of the name server software, especially the BIND software, generally is devoid of vulnerabilities found in earlier versions because it has design changes incorporated to take care of those vulnerabilities. Of course, these vulnerabilities have been exploited (i.e., some form of attack was launched), and sufficient information has been generated with respect to the nature of those exploits. Thus, it makes good business sense to run the latest version of name server software because theoretically it is the safest version. \n\nIn some installations, it may not be possible to switch over to the latest version of name server software immediately. If the version of the name server software is revealed in queries, this information may be used by attackers who are looking for a specific version of the software which has a discovered weakness. To prevent information about which version of name server software is running on a system, name servers should be configured to refuse queries for its version information.","check":"Review the DNS configuration files. Verify the DNS name server is explicitly configured to refuse queries asking for its version information.\n\nIf the name server is not configured to explicitly refuse queries asking for its version information, this is a finding.","fix":"Configure the name server to refuse queries for its version information."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55469r1_chk","severity":"medium","gid":"V-54847","rid":"SV-69093r1_rule","stig_id":"SRG-APP-000333-DNS-000104","gtitle":"SRG-APP-000333-DNS-000104","fix_id":"F-59705r1_fix","documentable":null,"cci":["CCI-002201"],"nist":["AC-4 (12)"]}},{"id":"SV-69095","code":"control 'SV-69095' do\n  title 'The HINFO, RP, TXT and LOC RR types must not be used in the zone SOA.'\n  desc \"There are several types of RRs in the DNS that are meant to convey information to humans and applications about the network, hosts, or services. These RRs include the Responsible Person (RP) record, the Host Information (HINFO) record, the Location (LOC) record, and the catch-all text string resource record (TXT) [RFC1035]. Although these record types are meant to provide information to users in good faith, they also allow attackers to gain knowledge about network hosts before attempting to exploit them. For example, an attacker may query for HINFO records, looking for hosts that list an OS or platform known to have exploits. \n\nTherefore, great care should be taken before including these record types in a zone. In fact, they are best left out altogether.\n\nMore careful consideration should be taken with the TXT resource record type. A DNS administrator will have to decide if the data contained in a TXT RR constitutes an information leak or is a necessary piece of information. For example, several authenticated email technologies use TXT RR's to store email sender policy information such as valid email senders for a domain. These judgments will have to be made on a case-by-case basis.\n\nA DNS administrator should take care when including HINFO, RP, TXT, LOC, or other RR types that could divulge information that would be useful to an attacker or the external view of a zone if using split DNS. \n\nRRs such as HINFO and TXT provide information about software name and versions (e.g., for resources such as Web servers and mail servers) that will enable the well-equipped attacker to exploit the known vulnerabilities in those software versions and launch attacks against those resources.\"\n  desc 'check', 'Review the DNS configuration files. Verify there are not any HINFO, RP, TXT, or LOC RR type RRs in the configuration.\n\nIf there are any HINFO, RP, TXT or LOC RR type RRs in the configuration, this is a finding.'\n  desc 'fix', 'Configure the DNS configuration to not include any HINFO, RP, TXT, or LOC RR type RRs.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55471r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54849'\n  tag rid: 'SV-69095r1_rule'\n  tag stig_id: 'SRG-APP-000333-DNS-000107'\n  tag gtitle: 'SRG-APP-000333-DNS-000107'\n  tag fix_id: 'F-59707r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-002201']\n  tag nist: ['AC-4 (12)']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69095.rb"},"title":"The HINFO, RP, TXT and LOC RR types must not be used in the zone SOA.","desc":"There are several types of RRs in the DNS that are meant to convey information to humans and applications about the network, hosts, or services. These RRs include the Responsible Person (RP) record, the Host Information (HINFO) record, the Location (LOC) record, and the catch-all text string resource record (TXT) [RFC1035]. Although these record types are meant to provide information to users in good faith, they also allow attackers to gain knowledge about network hosts before attempting to exploit them. For example, an attacker may query for HINFO records, looking for hosts that list an OS or platform known to have exploits. \n\nTherefore, great care should be taken before including these record types in a zone. In fact, they are best left out altogether.\n\nMore careful consideration should be taken with the TXT resource record type. A DNS administrator will have to decide if the data contained in a TXT RR constitutes an information leak or is a necessary piece of information. For example, several authenticated email technologies use TXT RR's to store email sender policy information such as valid email senders for a domain. These judgments will have to be made on a case-by-case basis.\n\nA DNS administrator should take care when including HINFO, RP, TXT, LOC, or other RR types that could divulge information that would be useful to an attacker or the external view of a zone if using split DNS. \n\nRRs such as HINFO and TXT provide information about software name and versions (e.g., for resources such as Web servers and mail servers) that will enable the well-equipped attacker to exploit the known vulnerabilities in those software versions and launch attacks against those resources.","descriptions":{"default":"There are several types of RRs in the DNS that are meant to convey information to humans and applications about the network, hosts, or services. These RRs include the Responsible Person (RP) record, the Host Information (HINFO) record, the Location (LOC) record, and the catch-all text string resource record (TXT) [RFC1035]. Although these record types are meant to provide information to users in good faith, they also allow attackers to gain knowledge about network hosts before attempting to exploit them. For example, an attacker may query for HINFO records, looking for hosts that list an OS or platform known to have exploits. \n\nTherefore, great care should be taken before including these record types in a zone. In fact, they are best left out altogether.\n\nMore careful consideration should be taken with the TXT resource record type. A DNS administrator will have to decide if the data contained in a TXT RR constitutes an information leak or is a necessary piece of information. For example, several authenticated email technologies use TXT RR's to store email sender policy information such as valid email senders for a domain. These judgments will have to be made on a case-by-case basis.\n\nA DNS administrator should take care when including HINFO, RP, TXT, LOC, or other RR types that could divulge information that would be useful to an attacker or the external view of a zone if using split DNS. \n\nRRs such as HINFO and TXT provide information about software name and versions (e.g., for resources such as Web servers and mail servers) that will enable the well-equipped attacker to exploit the known vulnerabilities in those software versions and launch attacks against those resources.","check":"Review the DNS configuration files. Verify there are not any HINFO, RP, TXT, or LOC RR type RRs in the configuration.\n\nIf there are any HINFO, RP, TXT or LOC RR type RRs in the configuration, this is a finding.","fix":"Configure the DNS configuration to not include any HINFO, RP, TXT, or LOC RR type RRs."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55471r1_chk","severity":"medium","gid":"V-54849","rid":"SV-69095r1_rule","stig_id":"SRG-APP-000333-DNS-000107","gtitle":"SRG-APP-000333-DNS-000107","fix_id":"F-59707r1_fix","documentable":null,"cci":["CCI-002201"],"nist":["AC-4 (12)"]}},{"id":"SV-69097","code":"control 'SV-69097' do\n  title 'The DNS server implementation must be configured to allow DNS administrators to change the auditing to be performed on all DNS server components, based on all selectable event criteria.'\n  desc 'If authorized individuals do not have the ability to modify auditing parameters in response to a changing threat environment, the organization may not be able to effectively respond, and important forensic information may be lost.\n\nThis requirement enables organizations to extend or limit auditing as necessary to meet organizational requirements. Auditing that is limited to conserve information system resources may be extended to address certain threat situations. In addition, auditing may be limited to a specific set of events to facilitate audit reduction, analysis, and reporting. Organizations can establish time thresholds in which audit actions are changed, for example, near real-time, within minutes, or within hours.\n\nFor a DNS server, the actual auditing is performed by the OS/NDM, but the configuration to trigger the auditing is controlled by the DNS server.'\n  desc 'check', 'Review the DNS server implementation configuration to determine if the DNS server is configured to allow DNS administrators to change the auditing to be performed on all DNS server components, based on all selectable event criteria.\n\nIf the DNS server is not configured to allow DNS administrators to change the auditing to be performed on all DNS server components, based on all selectable event criteria, this is a finding.'\n  desc 'fix', 'Configure the DNS server to allow DNS administrators to change the auditing to be performed on all DNS server components, based on all selectable event criteria.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55473r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54851'\n  tag rid: 'SV-69097r1_rule'\n  tag stig_id: 'SRG-APP-000353-DNS-000045'\n  tag gtitle: 'SRG-APP-000353-DNS-000045'\n  tag fix_id: 'F-59709r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-001914']\n  tag nist: ['AU-12 (3)']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69097.rb"},"title":"The DNS server implementation must be configured to allow DNS administrators to change the auditing to be performed on all DNS server components, based on all selectable event criteria.","desc":"If authorized individuals do not have the ability to modify auditing parameters in response to a changing threat environment, the organization may not be able to effectively respond, and important forensic information may be lost.\n\nThis requirement enables organizations to extend or limit auditing as necessary to meet organizational requirements. Auditing that is limited to conserve information system resources may be extended to address certain threat situations. In addition, auditing may be limited to a specific set of events to facilitate audit reduction, analysis, and reporting. Organizations can establish time thresholds in which audit actions are changed, for example, near real-time, within minutes, or within hours.\n\nFor a DNS server, the actual auditing is performed by the OS/NDM, but the configuration to trigger the auditing is controlled by the DNS server.","descriptions":{"default":"If authorized individuals do not have the ability to modify auditing parameters in response to a changing threat environment, the organization may not be able to effectively respond, and important forensic information may be lost.\n\nThis requirement enables organizations to extend or limit auditing as necessary to meet organizational requirements. Auditing that is limited to conserve information system resources may be extended to address certain threat situations. In addition, auditing may be limited to a specific set of events to facilitate audit reduction, analysis, and reporting. Organizations can establish time thresholds in which audit actions are changed, for example, near real-time, within minutes, or within hours.\n\nFor a DNS server, the actual auditing is performed by the OS/NDM, but the configuration to trigger the auditing is controlled by the DNS server.","check":"Review the DNS server implementation configuration to determine if the DNS server is configured to allow DNS administrators to change the auditing to be performed on all DNS server components, based on all selectable event criteria.\n\nIf the DNS server is not configured to allow DNS administrators to change the auditing to be performed on all DNS server components, based on all selectable event criteria, this is a finding.","fix":"Configure the DNS server to allow DNS administrators to change the auditing to be performed on all DNS server components, based on all selectable event criteria."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55473r1_chk","severity":"medium","gid":"V-54851","rid":"SV-69097r1_rule","stig_id":"SRG-APP-000353-DNS-000045","gtitle":"SRG-APP-000353-DNS-000045","fix_id":"F-59709r1_fix","documentable":null,"cci":["CCI-001914"],"nist":["AU-12 (3)"]}},{"id":"SV-69099","code":"control 'SV-69099' do\n  title 'The DNS implementation must limit the number of concurrent sessions for zone transfers to the number of secondary name servers.'\n  desc \"Limiting the number of concurrent sessions reduces the risk of Denial of Service (DoS) to the DNS implementation. \n\nName servers do not have direct user connections but accept client connections for queries. Original restriction on client connections should be high enough to prevent a self-imposed denial of service, after which the connections are monitored and fine-tuned to best meet the organization's specific requirements.\n\nPrimary name servers also make outbound connection to secondary name servers to provide zone transfers and accept inbound connection requests from clients wishing to provide a dynamic update. Primary name servers should explicitly limit zone transfers to only be made to designated secondary name servers. Because zone transfers involve the transfer of entire zones and use TCP connections, they place substantial demands on network resources relative to normal DNS queries. Errant or malicious frequent zone transfer requests on the name servers of the enterprise can overload the master zone server and result in DoS to legitimate users. Primary name servers should be configured to limit the hosts from which they will accept dynamic updates.\n\nAdditionally, the number of concurrent clients, especially TCP clients, needs to be kept to a level that does not risk placing the system in a DoS state.\"\n  desc 'check', 'Review the DNS server configuration and ensure a limit has been defined for the number of outbound zone transfers to only be allowed to the specified secondary name servers.\n\nIf the DNS server configuration does not explicitly specify which hosts to which it sends zone transfers, this is a finding.'\n  desc 'fix', 'Configure the DNS primary server to explicitly specify which hosts to which it sends zone transfers.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55475r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54853'\n  tag rid: 'SV-69099r1_rule'\n  tag stig_id: 'SRG-APP-000001-DNS-000001'\n  tag gtitle: 'SRG-APP-000001-DNS-000001'\n  tag fix_id: 'F-59711r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000054']\n  tag nist: ['AC-10']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69099.rb"},"title":"The DNS implementation must limit the number of concurrent sessions for zone transfers to the number of secondary name servers.","desc":"Limiting the number of concurrent sessions reduces the risk of Denial of Service (DoS) to the DNS implementation. \n\nName servers do not have direct user connections but accept client connections for queries. Original restriction on client connections should be high enough to prevent a self-imposed denial of service, after which the connections are monitored and fine-tuned to best meet the organization's specific requirements.\n\nPrimary name servers also make outbound connection to secondary name servers to provide zone transfers and accept inbound connection requests from clients wishing to provide a dynamic update. Primary name servers should explicitly limit zone transfers to only be made to designated secondary name servers. Because zone transfers involve the transfer of entire zones and use TCP connections, they place substantial demands on network resources relative to normal DNS queries. Errant or malicious frequent zone transfer requests on the name servers of the enterprise can overload the master zone server and result in DoS to legitimate users. Primary name servers should be configured to limit the hosts from which they will accept dynamic updates.\n\nAdditionally, the number of concurrent clients, especially TCP clients, needs to be kept to a level that does not risk placing the system in a DoS state.","descriptions":{"default":"Limiting the number of concurrent sessions reduces the risk of Denial of Service (DoS) to the DNS implementation. \n\nName servers do not have direct user connections but accept client connections for queries. Original restriction on client connections should be high enough to prevent a self-imposed denial of service, after which the connections are monitored and fine-tuned to best meet the organization's specific requirements.\n\nPrimary name servers also make outbound connection to secondary name servers to provide zone transfers and accept inbound connection requests from clients wishing to provide a dynamic update. Primary name servers should explicitly limit zone transfers to only be made to designated secondary name servers. Because zone transfers involve the transfer of entire zones and use TCP connections, they place substantial demands on network resources relative to normal DNS queries. Errant or malicious frequent zone transfer requests on the name servers of the enterprise can overload the master zone server and result in DoS to legitimate users. Primary name servers should be configured to limit the hosts from which they will accept dynamic updates.\n\nAdditionally, the number of concurrent clients, especially TCP clients, needs to be kept to a level that does not risk placing the system in a DoS state.","check":"Review the DNS server configuration and ensure a limit has been defined for the number of outbound zone transfers to only be allowed to the specified secondary name servers.\n\nIf the DNS server configuration does not explicitly specify which hosts to which it sends zone transfers, this is a finding.","fix":"Configure the DNS primary server to explicitly specify which hosts to which it sends zone transfers."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55475r1_chk","severity":"medium","gid":"V-54853","rid":"SV-69099r1_rule","stig_id":"SRG-APP-000001-DNS-000001","gtitle":"SRG-APP-000001-DNS-000001","fix_id":"F-59711r1_fix","documentable":null,"cci":["CCI-000054"],"nist":["AC-10"]}},{"id":"SV-69101","code":"control 'SV-69101' do\n  title 'The DNS implementation must prohibit recursion on authoritative name servers.'\n  desc \"A potential vulnerability of DNS is that an attacker can poison a name server's cache by sending queries that will cause the server to obtain host-to-IP address mappings from bogus name servers that respond with incorrect information. Once a name server has been poisoned, legitimate clients may be directed to non-existent hosts (which constitutes a denial of service), or, worse, hosts that masquerade as legitimate ones to obtain sensitive data or passwords. \n\nTo guard against poisoning, name servers authoritative for .mil domains should be separated functionally from name servers that resolve queries on behalf of internal clients. Organizations may achieve this separation by dedicating machines to each function or, if possible, by running two instances of the name server software on the same machine: one for the authoritative function and the other for the resolving function. In this design, each name server process may be bound to a different IP address or network interface to implement the required segregation.\n\nDNSSEC ensures that the answer received when querying for name resolution actually comes from a trusted name server. Since DNSSEC is still far from being globally deployed external to DoD, and many resolvers either haven’t been updated or don’t support DNSSEC, maintaining cached zone data separate from authoritative zone data mitigates the gap until all DNS data is validated with DNSSEC. \n\nSince DNS forwarding of queries can be accomplished in some DNS applications without caching locally, DNS forwarding is the method to be used when providing external DNS resolution to internal clients.\"\n  desc 'check', 'Review the DNS server configuration to determine if recursion is being performed on an authoritative name server. If an authoritative name server also performs recursion, this is a finding.'\n  desc 'fix', 'Ensure the DNS server is not defined as both authoritative and recursive.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55477r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54855'\n  tag rid: 'SV-69101r2_rule'\n  tag stig_id: 'SRG-APP-000383-DNS-000047'\n  tag gtitle: 'SRG-APP-000383-DNS-000047'\n  tag fix_id: 'F-59713r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000366']\n  tag nist: ['CM-6 b']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69101.rb"},"title":"The DNS implementation must prohibit recursion on authoritative name servers.","desc":"A potential vulnerability of DNS is that an attacker can poison a name server's cache by sending queries that will cause the server to obtain host-to-IP address mappings from bogus name servers that respond with incorrect information. Once a name server has been poisoned, legitimate clients may be directed to non-existent hosts (which constitutes a denial of service), or, worse, hosts that masquerade as legitimate ones to obtain sensitive data or passwords. \n\nTo guard against poisoning, name servers authoritative for .mil domains should be separated functionally from name servers that resolve queries on behalf of internal clients. Organizations may achieve this separation by dedicating machines to each function or, if possible, by running two instances of the name server software on the same machine: one for the authoritative function and the other for the resolving function. In this design, each name server process may be bound to a different IP address or network interface to implement the required segregation.\n\nDNSSEC ensures that the answer received when querying for name resolution actually comes from a trusted name server. Since DNSSEC is still far from being globally deployed external to DoD, and many resolvers either haven’t been updated or don’t support DNSSEC, maintaining cached zone data separate from authoritative zone data mitigates the gap until all DNS data is validated with DNSSEC. \n\nSince DNS forwarding of queries can be accomplished in some DNS applications without caching locally, DNS forwarding is the method to be used when providing external DNS resolution to internal clients.","descriptions":{"default":"A potential vulnerability of DNS is that an attacker can poison a name server's cache by sending queries that will cause the server to obtain host-to-IP address mappings from bogus name servers that respond with incorrect information. Once a name server has been poisoned, legitimate clients may be directed to non-existent hosts (which constitutes a denial of service), or, worse, hosts that masquerade as legitimate ones to obtain sensitive data or passwords. \n\nTo guard against poisoning, name servers authoritative for .mil domains should be separated functionally from name servers that resolve queries on behalf of internal clients. Organizations may achieve this separation by dedicating machines to each function or, if possible, by running two instances of the name server software on the same machine: one for the authoritative function and the other for the resolving function. In this design, each name server process may be bound to a different IP address or network interface to implement the required segregation.\n\nDNSSEC ensures that the answer received when querying for name resolution actually comes from a trusted name server. Since DNSSEC is still far from being globally deployed external to DoD, and many resolvers either haven’t been updated or don’t support DNSSEC, maintaining cached zone data separate from authoritative zone data mitigates the gap until all DNS data is validated with DNSSEC. \n\nSince DNS forwarding of queries can be accomplished in some DNS applications without caching locally, DNS forwarding is the method to be used when providing external DNS resolution to internal clients.","check":"Review the DNS server configuration to determine if recursion is being performed on an authoritative name server. If an authoritative name server also performs recursion, this is a finding.","fix":"Ensure the DNS server is not defined as both authoritative and recursive."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55477r1_chk","severity":"medium","gid":"V-54855","rid":"SV-69101r2_rule","stig_id":"SRG-APP-000383-DNS-000047","gtitle":"SRG-APP-000383-DNS-000047","fix_id":"F-59713r1_fix","documentable":null,"cci":["CCI-000366"],"nist":["CM-6 b"]}},{"id":"SV-69103","code":"control 'SV-69103' do\n  title 'The DNS server implementation must require devices to re-authenticate for each zone transfer and dynamic update request connection attempt.'\n  desc 'Without re-authenticating devices, unidentified or unknown devices may be introduced, thereby facilitating malicious activity.\n\nIn addition to the re-authentication requirements associated with session locks, organizations may require re-authentication of devices, including, but not limited to, the following other situations:\n(i) When authenticators change;\n(ii) When roles change;\n(iii) When security categories of information systems change;\n(iv) After a fixed period of time; or\n(v) Periodically.\n\nDNS does perform server authentication when DNSSEC or TSIG/SIG(0) are used, but this authentication is transactional in nature (each transaction has its own authentication performed). So this requirement is applicable for every server-to-server transaction request.'\n  desc 'check', 'Review the DNS server implementation configuration to determine if the DNS server requires devices to re-authenticate each time a zone transfer is initiated and each time a client makes a dynamic update request. If the DNS server does not require devices to re-authenticate each time a zone transfer is initiated and each time a client makes a dynamic update request, this is a finding. Note that the requirement should be inherently met if DNSSEC and TSIG/SIG(0) are enabled.'\n  desc 'fix', 'Configure the DNS server to require devices to re-authenticate each time a zone transfer is initiated and each time a client makes a dynamic update request. Note that the requirement should be inherently met if DNSSEC and TSIG/SIG(0) are enabled.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55481r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54857'\n  tag rid: 'SV-69103r1_rule'\n  tag stig_id: 'SRG-APP-000390-DNS-000048'\n  tag gtitle: 'SRG-APP-000390-DNS-000048'\n  tag fix_id: 'F-59717r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-002039']\n  tag nist: ['IA-11']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69103.rb"},"title":"The DNS server implementation must require devices to re-authenticate for each zone transfer and dynamic update request connection attempt.","desc":"Without re-authenticating devices, unidentified or unknown devices may be introduced, thereby facilitating malicious activity.\n\nIn addition to the re-authentication requirements associated with session locks, organizations may require re-authentication of devices, including, but not limited to, the following other situations:\n(i) When authenticators change;\n(ii) When roles change;\n(iii) When security categories of information systems change;\n(iv) After a fixed period of time; or\n(v) Periodically.\n\nDNS does perform server authentication when DNSSEC or TSIG/SIG(0) are used, but this authentication is transactional in nature (each transaction has its own authentication performed). So this requirement is applicable for every server-to-server transaction request.","descriptions":{"default":"Without re-authenticating devices, unidentified or unknown devices may be introduced, thereby facilitating malicious activity.\n\nIn addition to the re-authentication requirements associated with session locks, organizations may require re-authentication of devices, including, but not limited to, the following other situations:\n(i) When authenticators change;\n(ii) When roles change;\n(iii) When security categories of information systems change;\n(iv) After a fixed period of time; or\n(v) Periodically.\n\nDNS does perform server authentication when DNSSEC or TSIG/SIG(0) are used, but this authentication is transactional in nature (each transaction has its own authentication performed). So this requirement is applicable for every server-to-server transaction request.","check":"Review the DNS server implementation configuration to determine if the DNS server requires devices to re-authenticate each time a zone transfer is initiated and each time a client makes a dynamic update request. If the DNS server does not require devices to re-authenticate each time a zone transfer is initiated and each time a client makes a dynamic update request, this is a finding. Note that the requirement should be inherently met if DNSSEC and TSIG/SIG(0) are enabled.","fix":"Configure the DNS server to require devices to re-authenticate each time a zone transfer is initiated and each time a client makes a dynamic update request. Note that the requirement should be inherently met if DNSSEC and TSIG/SIG(0) are enabled."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55481r1_chk","severity":"medium","gid":"V-54857","rid":"SV-69103r1_rule","stig_id":"SRG-APP-000390-DNS-000048","gtitle":"SRG-APP-000390-DNS-000048","fix_id":"F-59717r1_fix","documentable":null,"cci":["CCI-002039"],"nist":["IA-11"]}},{"id":"SV-69107","code":"control 'SV-69107' do\n  title 'The DNS server implementation must authenticate the other DNS server before responding to a server-to-server transaction.'\n  desc 'Without authenticating devices, unidentified or unknown devices may be introduced, thereby facilitating malicious activity. Device authentication is a solution enabling an organization to manage devices. It is an additional layer of authentication ensuring only specific pre-authorized devices can access the system. \n\nThis requirement applies to server-to-server (zone transfer) transactions only and is provided by TSIG/SIG(0), which enforces mutual server authentication using a key that is unique to each server pair (TSIG) or using PKI-based authentication (SIG(0)).'\n  desc 'check', 'Review the DNS server implementation configuration to determine if the DNS server authenticates the other DNS server before responding to a server-to-server transaction. If the DNS server does not authenticate the other DNS server, this is a finding.'\n  desc 'fix', 'Configure the DNS server to authenticate the other DNS server before responding to a server-to-server transaction.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55483r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54861'\n  tag rid: 'SV-69107r1_rule'\n  tag stig_id: 'SRG-APP-000394-DNS-000049'\n  tag gtitle: 'SRG-APP-000394-DNS-000049'\n  tag fix_id: 'F-59719r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-001958']\n  tag nist: ['IA-3']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69107.rb"},"title":"The DNS server implementation must authenticate the other DNS server before responding to a server-to-server transaction.","desc":"Without authenticating devices, unidentified or unknown devices may be introduced, thereby facilitating malicious activity. Device authentication is a solution enabling an organization to manage devices. It is an additional layer of authentication ensuring only specific pre-authorized devices can access the system. \n\nThis requirement applies to server-to-server (zone transfer) transactions only and is provided by TSIG/SIG(0), which enforces mutual server authentication using a key that is unique to each server pair (TSIG) or using PKI-based authentication (SIG(0)).","descriptions":{"default":"Without authenticating devices, unidentified or unknown devices may be introduced, thereby facilitating malicious activity. Device authentication is a solution enabling an organization to manage devices. It is an additional layer of authentication ensuring only specific pre-authorized devices can access the system. \n\nThis requirement applies to server-to-server (zone transfer) transactions only and is provided by TSIG/SIG(0), which enforces mutual server authentication using a key that is unique to each server pair (TSIG) or using PKI-based authentication (SIG(0)).","check":"Review the DNS server implementation configuration to determine if the DNS server authenticates the other DNS server before responding to a server-to-server transaction. If the DNS server does not authenticate the other DNS server, this is a finding.","fix":"Configure the DNS server to authenticate the other DNS server before responding to a server-to-server transaction."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55483r1_chk","severity":"medium","gid":"V-54861","rid":"SV-69107r1_rule","stig_id":"SRG-APP-000394-DNS-000049","gtitle":"SRG-APP-000394-DNS-000049","fix_id":"F-59719r1_fix","documentable":null,"cci":["CCI-001958"],"nist":["IA-3"]}},{"id":"SV-69109","code":"control 'SV-69109' do\n  title 'The DNS server implementation must authenticate another DNS server before establishing a remote and/or network connection using bidirectional authentication that is cryptographically based.'\n  desc 'Without authenticating devices, unidentified or unknown devices may be introduced, thereby facilitating malicious activity. Bidirectional authentication provides stronger safeguards to validate the identity of other devices for connections that are of greater risk.\n\nThis requirement applies to server-to-server (zone transfer) transactions only and is provided by TSIG/SIG(0), which enforces mutual server authentication using a key that is unique to each server pair (TSIG) or using PKI-based authentication (SIG(0)).'\n  desc 'check', 'Review the DNS server implementation configuration to determine if the DNS server authenticates another DNS server before establishing a remote and/or network connection using bidirectional authentication that is cryptographically based. If the DNS server does not authenticate another DNS server before establishing a connection, this is a finding.'\n  desc 'fix', 'Configure the DNS server to authenticate another DNS server before establishing a remote and/or network connection using bidirectional authentication that is cryptographically based.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55485r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54863'\n  tag rid: 'SV-69109r1_rule'\n  tag stig_id: 'SRG-APP-000395-DNS-000050'\n  tag gtitle: 'SRG-APP-000395-DNS-000050'\n  tag fix_id: 'F-59721r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-001967']\n  tag nist: ['IA-3 (1)']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69109.rb"},"title":"The DNS server implementation must authenticate another DNS server before establishing a remote and/or network connection using bidirectional authentication that is cryptographically based.","desc":"Without authenticating devices, unidentified or unknown devices may be introduced, thereby facilitating malicious activity. Bidirectional authentication provides stronger safeguards to validate the identity of other devices for connections that are of greater risk.\n\nThis requirement applies to server-to-server (zone transfer) transactions only and is provided by TSIG/SIG(0), which enforces mutual server authentication using a key that is unique to each server pair (TSIG) or using PKI-based authentication (SIG(0)).","descriptions":{"default":"Without authenticating devices, unidentified or unknown devices may be introduced, thereby facilitating malicious activity. Bidirectional authentication provides stronger safeguards to validate the identity of other devices for connections that are of greater risk.\n\nThis requirement applies to server-to-server (zone transfer) transactions only and is provided by TSIG/SIG(0), which enforces mutual server authentication using a key that is unique to each server pair (TSIG) or using PKI-based authentication (SIG(0)).","check":"Review the DNS server implementation configuration to determine if the DNS server authenticates another DNS server before establishing a remote and/or network connection using bidirectional authentication that is cryptographically based. If the DNS server does not authenticate another DNS server before establishing a connection, this is a finding.","fix":"Configure the DNS server to authenticate another DNS server before establishing a remote and/or network connection using bidirectional authentication that is cryptographically based."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55485r1_chk","severity":"medium","gid":"V-54863","rid":"SV-69109r1_rule","stig_id":"SRG-APP-000395-DNS-000050","gtitle":"SRG-APP-000395-DNS-000050","fix_id":"F-59721r1_fix","documentable":null,"cci":["CCI-001967"],"nist":["IA-3 (1)"]}},{"id":"SV-69111","code":"control 'SV-69111' do\n  title 'The DNS server implementation, for PKI-based authentication, must implement a local cache of revocation data to support path discovery and validation in case of the inability to access revocation information via the network.'\n  desc 'Without configuring a local cache of revocation data, there is the potential to allow access to users who are no longer authorized (users with revoked certificates). \n\nSIG(0) is used for server-to-server authentication for DNS transactions, and it uses PKI-based authentication. So, in cases where SIG(0) is being used instead of TSIG (which uses a shared key, not PKI-based authentication), this requirement is applicable.'\n  desc 'check', 'Review the DNS server implementation configuration to determine if the DNS server, for PKI-based authentication (i.e., SIG(0)), implements a local cache of revocation data to support path discovery and validation in case of the inability to access revocation information via the network. If the DNS server does not implement such a cache of revocation data, this is a finding.'\n  desc 'fix', 'Configure the DNS server, for PKI-based authentication, to implement a local cache of revocation data to support path discovery and validation in case of the inability to access revocation information via the network.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55487r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54865'\n  tag rid: 'SV-69111r1_rule'\n  tag stig_id: 'SRG-APP-000401-DNS-000051'\n  tag gtitle: 'SRG-APP-000401-DNS-000051'\n  tag fix_id: 'F-59723r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-001991']\n  tag nist: ['IA-5 (2) (d)']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69111.rb"},"title":"The DNS server implementation, for PKI-based authentication, must implement a local cache of revocation data to support path discovery and validation in case of the inability to access revocation information via the network.","desc":"Without configuring a local cache of revocation data, there is the potential to allow access to users who are no longer authorized (users with revoked certificates). \n\nSIG(0) is used for server-to-server authentication for DNS transactions, and it uses PKI-based authentication. So, in cases where SIG(0) is being used instead of TSIG (which uses a shared key, not PKI-based authentication), this requirement is applicable.","descriptions":{"default":"Without configuring a local cache of revocation data, there is the potential to allow access to users who are no longer authorized (users with revoked certificates). \n\nSIG(0) is used for server-to-server authentication for DNS transactions, and it uses PKI-based authentication. So, in cases where SIG(0) is being used instead of TSIG (which uses a shared key, not PKI-based authentication), this requirement is applicable.","check":"Review the DNS server implementation configuration to determine if the DNS server, for PKI-based authentication (i.e., SIG(0)), implements a local cache of revocation data to support path discovery and validation in case of the inability to access revocation information via the network. If the DNS server does not implement such a cache of revocation data, this is a finding.","fix":"Configure the DNS server, for PKI-based authentication, to implement a local cache of revocation data to support path discovery and validation in case of the inability to access revocation information via the network."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55487r1_chk","severity":"medium","gid":"V-54865","rid":"SV-69111r1_rule","stig_id":"SRG-APP-000401-DNS-000051","gtitle":"SRG-APP-000401-DNS-000051","fix_id":"F-59723r1_fix","documentable":null,"cci":["CCI-001991"],"nist":["IA-5 (2) (d)"]}},{"id":"SV-69113","code":"control 'SV-69113' do\n  title 'A DNS server implementation must provide data origin artifacts for internal name/address resolution queries.'\n  desc 'The major threat associated with DNS forged responses or failures is the integrity of the DNS data returned in the response. The principle of DNSSEC is to mitigate this threat by providing data origin authentication, establishing trust in the source. This requirement enables remote clients to obtain origin authentication and integrity verification assurances for the host/service name to network address resolution information obtained through the service. \n\nA DNS server is an example of an information system providing name/address resolution service. Digital signatures and cryptographic keys are examples of additional artifacts. DNS resource records are examples of authoritative data. Applications other than the DNS to map between host/service names and network addresses must provide other means to assure the authenticity and integrity of response data. \n\nIn the case of DNS, employ DNSSEC to provide an additional data origin and integrity artifacts along with the authoritative data the system returns in response to DNS name/address resolution queries.'\n  desc 'check', 'Review the DNS server implementation configuration to determine if the DNS server provides data origin artifacts for internal name/address resolution queries. If the DNS server does not provide these data origin artifacts, this is a finding.'\n  desc 'fix', 'Configure the DNS server to provide data origin artifacts for internal name/address resolution queries.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55489r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54867'\n  tag rid: 'SV-69113r1_rule'\n  tag stig_id: 'SRG-APP-000420-DNS-000053'\n  tag gtitle: 'SRG-APP-000420-DNS-000053'\n  tag fix_id: 'F-59725r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000366', 'CCI-002463']\n  tag nist: ['CM-6 b', 'SC-20 (2)']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69113.rb"},"title":"A DNS server implementation must provide data origin artifacts for internal name/address resolution queries.","desc":"The major threat associated with DNS forged responses or failures is the integrity of the DNS data returned in the response. The principle of DNSSEC is to mitigate this threat by providing data origin authentication, establishing trust in the source. This requirement enables remote clients to obtain origin authentication and integrity verification assurances for the host/service name to network address resolution information obtained through the service. \n\nA DNS server is an example of an information system providing name/address resolution service. Digital signatures and cryptographic keys are examples of additional artifacts. DNS resource records are examples of authoritative data. Applications other than the DNS to map between host/service names and network addresses must provide other means to assure the authenticity and integrity of response data. \n\nIn the case of DNS, employ DNSSEC to provide an additional data origin and integrity artifacts along with the authoritative data the system returns in response to DNS name/address resolution queries.","descriptions":{"default":"The major threat associated with DNS forged responses or failures is the integrity of the DNS data returned in the response. The principle of DNSSEC is to mitigate this threat by providing data origin authentication, establishing trust in the source. This requirement enables remote clients to obtain origin authentication and integrity verification assurances for the host/service name to network address resolution information obtained through the service. \n\nA DNS server is an example of an information system providing name/address resolution service. Digital signatures and cryptographic keys are examples of additional artifacts. DNS resource records are examples of authoritative data. Applications other than the DNS to map between host/service names and network addresses must provide other means to assure the authenticity and integrity of response data. \n\nIn the case of DNS, employ DNSSEC to provide an additional data origin and integrity artifacts along with the authoritative data the system returns in response to DNS name/address resolution queries.","check":"Review the DNS server implementation configuration to determine if the DNS server provides data origin artifacts for internal name/address resolution queries. If the DNS server does not provide these data origin artifacts, this is a finding.","fix":"Configure the DNS server to provide data origin artifacts for internal name/address resolution queries."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55489r1_chk","severity":"medium","gid":"V-54867","rid":"SV-69113r1_rule","stig_id":"SRG-APP-000420-DNS-000053","gtitle":"SRG-APP-000420-DNS-000053","fix_id":"F-59725r1_fix","documentable":null,"cci":["CCI-000366","CCI-002463"],"nist":["CM-6 b","SC-20 (2)"]}},{"id":"SV-69115","code":"control 'SV-69115' do\n  title 'A DNS server implementation must provide data integrity protection artifacts for internal name/address resolution queries.'\n  desc 'The major threat associated with DNS forged responses or failures is the integrity of the DNS data returned in the response. The principle of DNSSEC is to mitigate this threat by providing data origin authentication, establishing trust in the source. This requirement enables remote clients to obtain origin authentication and integrity verification assurances for the host/service name to network address resolution information obtained through the service. \n\nA DNS server is an example of an information system providing name/address resolution service. Digital signatures and cryptographic keys are examples of additional artifacts. DNS resource records are examples of authoritative data. Applications other than the DNS to map between host/service names and network addresses must provide other means to assure the authenticity and integrity of response data. \n\nIn the case of DNS, employ DNSSEC to provide an additional data origin and integrity artifacts along with the authoritative data the system returns in response to DNS name/address resolution queries.'\n  desc 'check', 'Review the DNS server implementation configuration to determine if the DNS server provides data integrity protection artifacts for internal name/address resolution queries. If the DNS server does not provide these artifacts, this is a finding.'\n  desc 'fix', 'Configure the DNS server to provide data integrity protection artifacts for internal name/address resolution queries.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55491r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54869'\n  tag rid: 'SV-69115r1_rule'\n  tag stig_id: 'SRG-APP-000421-DNS-000054'\n  tag gtitle: 'SRG-APP-000421-DNS-000054'\n  tag fix_id: 'F-59727r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000366', 'CCI-002464']\n  tag nist: ['CM-6 b', 'SC-20 (2)']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69115.rb"},"title":"A DNS server implementation must provide data integrity protection artifacts for internal name/address resolution queries.","desc":"The major threat associated with DNS forged responses or failures is the integrity of the DNS data returned in the response. The principle of DNSSEC is to mitigate this threat by providing data origin authentication, establishing trust in the source. This requirement enables remote clients to obtain origin authentication and integrity verification assurances for the host/service name to network address resolution information obtained through the service. \n\nA DNS server is an example of an information system providing name/address resolution service. Digital signatures and cryptographic keys are examples of additional artifacts. DNS resource records are examples of authoritative data. Applications other than the DNS to map between host/service names and network addresses must provide other means to assure the authenticity and integrity of response data. \n\nIn the case of DNS, employ DNSSEC to provide an additional data origin and integrity artifacts along with the authoritative data the system returns in response to DNS name/address resolution queries.","descriptions":{"default":"The major threat associated with DNS forged responses or failures is the integrity of the DNS data returned in the response. The principle of DNSSEC is to mitigate this threat by providing data origin authentication, establishing trust in the source. This requirement enables remote clients to obtain origin authentication and integrity verification assurances for the host/service name to network address resolution information obtained through the service. \n\nA DNS server is an example of an information system providing name/address resolution service. Digital signatures and cryptographic keys are examples of additional artifacts. DNS resource records are examples of authoritative data. Applications other than the DNS to map between host/service names and network addresses must provide other means to assure the authenticity and integrity of response data. \n\nIn the case of DNS, employ DNSSEC to provide an additional data origin and integrity artifacts along with the authoritative data the system returns in response to DNS name/address resolution queries.","check":"Review the DNS server implementation configuration to determine if the DNS server provides data integrity protection artifacts for internal name/address resolution queries. If the DNS server does not provide these artifacts, this is a finding.","fix":"Configure the DNS server to provide data integrity protection artifacts for internal name/address resolution queries."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55491r1_chk","severity":"medium","gid":"V-54869","rid":"SV-69115r1_rule","stig_id":"SRG-APP-000421-DNS-000054","gtitle":"SRG-APP-000421-DNS-000054","fix_id":"F-59727r1_fix","documentable":null,"cci":["CCI-000366","CCI-002464"],"nist":["CM-6 b","SC-20 (2)"]}},{"id":"SV-69117","code":"control 'SV-69117' do\n  title 'A DNS server implementation must provide additional integrity artifacts along with the authoritative name resolution data the system returns in response to external name/address resolution queries.'\n  desc 'The major threat associated with DNS forged responses or failures is the integrity of the DNS data returned in the response. The principle of DNSSEC is to mitigate this threat by providing data origin authentication, establishing trust in the source. This requirement enables remote clients to obtain origin authentication and integrity verification assurances for the host/service name to network address resolution information obtained through the service. \n\nA DNS server is an example of an information system providing name/address resolution service. Digital signatures and cryptographic keys are examples of additional artifacts. DNS resource records are examples of authoritative data. Applications other than the DNS to map between host/service names and network addresses must provide other means to assure the authenticity and integrity of response data. \n\nIn the case of DNS, employ DNSSEC to provide an additional data origin and integrity artifacts along with the authoritative data the system returns in response to DNS name/address resolution queries.'\n  desc 'check', 'Review the DNS server implementation configuration to determine if the DNS server provides additional integrity artifacts along with the authoritative name resolution data the system returns in response to external name/address resolution queries. If the DNS server does not provide such integrity artifacts, this is a finding.'\n  desc 'fix', 'Configure the DNS server to provide additional integrity artifacts along with the authoritative name resolution data the system returns in response to external name/address resolution queries.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55493r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54871'\n  tag rid: 'SV-69117r1_rule'\n  tag stig_id: 'SRG-APP-000422-DNS-000055'\n  tag gtitle: 'SRG-APP-000422-DNS-000055'\n  tag fix_id: 'F-59729r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-002462']\n  tag nist: ['SC-20 a']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69117.rb"},"title":"A DNS server implementation must provide additional integrity artifacts along with the authoritative name resolution data the system returns in response to external name/address resolution queries.","desc":"The major threat associated with DNS forged responses or failures is the integrity of the DNS data returned in the response. The principle of DNSSEC is to mitigate this threat by providing data origin authentication, establishing trust in the source. This requirement enables remote clients to obtain origin authentication and integrity verification assurances for the host/service name to network address resolution information obtained through the service. \n\nA DNS server is an example of an information system providing name/address resolution service. Digital signatures and cryptographic keys are examples of additional artifacts. DNS resource records are examples of authoritative data. Applications other than the DNS to map between host/service names and network addresses must provide other means to assure the authenticity and integrity of response data. \n\nIn the case of DNS, employ DNSSEC to provide an additional data origin and integrity artifacts along with the authoritative data the system returns in response to DNS name/address resolution queries.","descriptions":{"default":"The major threat associated with DNS forged responses or failures is the integrity of the DNS data returned in the response. The principle of DNSSEC is to mitigate this threat by providing data origin authentication, establishing trust in the source. This requirement enables remote clients to obtain origin authentication and integrity verification assurances for the host/service name to network address resolution information obtained through the service. \n\nA DNS server is an example of an information system providing name/address resolution service. Digital signatures and cryptographic keys are examples of additional artifacts. DNS resource records are examples of authoritative data. Applications other than the DNS to map between host/service names and network addresses must provide other means to assure the authenticity and integrity of response data. \n\nIn the case of DNS, employ DNSSEC to provide an additional data origin and integrity artifacts along with the authoritative data the system returns in response to DNS name/address resolution queries.","check":"Review the DNS server implementation configuration to determine if the DNS server provides additional integrity artifacts along with the authoritative name resolution data the system returns in response to external name/address resolution queries. If the DNS server does not provide such integrity artifacts, this is a finding.","fix":"Configure the DNS server to provide additional integrity artifacts along with the authoritative name resolution data the system returns in response to external name/address resolution queries."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55493r1_chk","severity":"medium","gid":"V-54871","rid":"SV-69117r1_rule","stig_id":"SRG-APP-000422-DNS-000055","gtitle":"SRG-APP-000422-DNS-000055","fix_id":"F-59729r1_fix","documentable":null,"cci":["CCI-002462"],"nist":["SC-20 a"]}},{"id":"SV-69119","code":"control 'SV-69119' do\n  title 'A DNS server implementation must request data origin authentication verification on the name/address resolution responses the system receives from authoritative sources.'\n  desc \"If data origin authentication and data integrity verification are not performed, the resultant response could be forged, it may have come from a poisoned cache, the packets could have been intercepted without the resolver's knowledge, or resource records could have been removed that would result in query failure or denial of service. Data origin authentication must be performed to thwart these types of attacks.\n\nEach client of name resolution services either performs this validation on its own or has authenticated channels to trusted validation providers. Information systems that provide name and address resolution services for local clients include, for example, recursive resolving or caching DNS servers. DNS client resolvers either perform validation of DNSSEC signatures, or clients use authenticated channels to recursive resolvers that perform such validations.\"\n  desc 'check', 'Review the DNS server implementation configuration to determine if the DNS server requests data origin authentication verification on the name/address resolution responses the system receives from authoritative sources. If the DNS server does not request data origin authentication verification on the responses, this is a finding.'\n  desc 'fix', 'Configure the DNS server to request data origin authentication verification on the name/address resolution responses the system receives from authoritative sources.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55497r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54873'\n  tag rid: 'SV-69119r1_rule'\n  tag stig_id: 'SRG-APP-000423-DNS-000056'\n  tag gtitle: 'SRG-APP-000423-DNS-000056'\n  tag fix_id: 'F-59731r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-002465']\n  tag nist: ['SC-21']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69119.rb"},"title":"A DNS server implementation must request data origin authentication verification on the name/address resolution responses the system receives from authoritative sources.","desc":"If data origin authentication and data integrity verification are not performed, the resultant response could be forged, it may have come from a poisoned cache, the packets could have been intercepted without the resolver's knowledge, or resource records could have been removed that would result in query failure or denial of service. Data origin authentication must be performed to thwart these types of attacks.\n\nEach client of name resolution services either performs this validation on its own or has authenticated channels to trusted validation providers. Information systems that provide name and address resolution services for local clients include, for example, recursive resolving or caching DNS servers. DNS client resolvers either perform validation of DNSSEC signatures, or clients use authenticated channels to recursive resolvers that perform such validations.","descriptions":{"default":"If data origin authentication and data integrity verification are not performed, the resultant response could be forged, it may have come from a poisoned cache, the packets could have been intercepted without the resolver's knowledge, or resource records could have been removed that would result in query failure or denial of service. Data origin authentication must be performed to thwart these types of attacks.\n\nEach client of name resolution services either performs this validation on its own or has authenticated channels to trusted validation providers. Information systems that provide name and address resolution services for local clients include, for example, recursive resolving or caching DNS servers. DNS client resolvers either perform validation of DNSSEC signatures, or clients use authenticated channels to recursive resolvers that perform such validations.","check":"Review the DNS server implementation configuration to determine if the DNS server requests data origin authentication verification on the name/address resolution responses the system receives from authoritative sources. If the DNS server does not request data origin authentication verification on the responses, this is a finding.","fix":"Configure the DNS server to request data origin authentication verification on the name/address resolution responses the system receives from authoritative sources."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55497r1_chk","severity":"medium","gid":"V-54873","rid":"SV-69119r1_rule","stig_id":"SRG-APP-000423-DNS-000056","gtitle":"SRG-APP-000423-DNS-000056","fix_id":"F-59731r1_fix","documentable":null,"cci":["CCI-002465"],"nist":["SC-21"]}},{"id":"SV-69121","code":"control 'SV-69121' do\n  title 'A DNS server implementation must request data integrity verification on the name/address resolution responses the system receives from authoritative sources.'\n  desc \"If data origin authentication and data integrity verification are not performed, the resultant response could be forged, it may have come from a poisoned cache, the packets could have been intercepted without the resolver's knowledge, or resource records could have been removed that would result in query failure or denial of service. Data integrity verification must be performed to thwart these types of attacks.\n\nEach client of name resolution services either performs this validation on its own or has authenticated channels to trusted validation providers. Information systems that provide name and address resolution services for local clients include, for example, recursive resolving or caching DNS servers. DNS client resolvers either perform validation of DNSSEC signatures, or clients use authenticated channels to recursive resolvers that perform such validations.\"\n  desc 'check', 'Review the DNS server implementation configuration to determine if the DNS server requests data integrity verification on the name/address resolution responses the system receives from authoritative sources. If the DNS server does not request data integrity verification on the responses, this is a finding.'\n  desc 'fix', 'Configure the DNS server to request data integrity verification on the name/address resolution responses the system receives from authoritative sources.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55499r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54875'\n  tag rid: 'SV-69121r1_rule'\n  tag stig_id: 'SRG-APP-000424-DNS-000057'\n  tag gtitle: 'SRG-APP-000424-DNS-000057'\n  tag fix_id: 'F-59733r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-002466']\n  tag nist: ['SC-21']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69121.rb"},"title":"A DNS server implementation must request data integrity verification on the name/address resolution responses the system receives from authoritative sources.","desc":"If data origin authentication and data integrity verification are not performed, the resultant response could be forged, it may have come from a poisoned cache, the packets could have been intercepted without the resolver's knowledge, or resource records could have been removed that would result in query failure or denial of service. Data integrity verification must be performed to thwart these types of attacks.\n\nEach client of name resolution services either performs this validation on its own or has authenticated channels to trusted validation providers. Information systems that provide name and address resolution services for local clients include, for example, recursive resolving or caching DNS servers. DNS client resolvers either perform validation of DNSSEC signatures, or clients use authenticated channels to recursive resolvers that perform such validations.","descriptions":{"default":"If data origin authentication and data integrity verification are not performed, the resultant response could be forged, it may have come from a poisoned cache, the packets could have been intercepted without the resolver's knowledge, or resource records could have been removed that would result in query failure or denial of service. Data integrity verification must be performed to thwart these types of attacks.\n\nEach client of name resolution services either performs this validation on its own or has authenticated channels to trusted validation providers. Information systems that provide name and address resolution services for local clients include, for example, recursive resolving or caching DNS servers. DNS client resolvers either perform validation of DNSSEC signatures, or clients use authenticated channels to recursive resolvers that perform such validations.","check":"Review the DNS server implementation configuration to determine if the DNS server requests data integrity verification on the name/address resolution responses the system receives from authoritative sources. If the DNS server does not request data integrity verification on the responses, this is a finding.","fix":"Configure the DNS server to request data integrity verification on the name/address resolution responses the system receives from authoritative sources."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55499r1_chk","severity":"medium","gid":"V-54875","rid":"SV-69121r1_rule","stig_id":"SRG-APP-000424-DNS-000057","gtitle":"SRG-APP-000424-DNS-000057","fix_id":"F-59733r1_fix","documentable":null,"cci":["CCI-002466"],"nist":["SC-21"]}},{"id":"SV-69123","code":"control 'SV-69123' do\n  title 'A DNS server implementation must perform data integrity verification on the name/address resolution responses the system receives from authoritative sources.'\n  desc \"If data origin authentication and data integrity verification are not performed, the resultant response could be forged, it may have come from a poisoned cache, the packets could have been intercepted without the resolver's knowledge, or resource records could have been removed that would result in query failure or denial of service. Data integrity verification must be performed to thwart these types of attacks.\n\nEach client of name resolution services either performs this validation on its own or has authenticated channels to trusted validation providers. Information systems that provide name and address resolution services for local clients include, for example, recursive resolving or caching DNS servers. DNS client resolvers either perform validation of DNSSEC signatures, or clients use authenticated channels to recursive resolvers that perform such validations.\"\n  desc 'check', 'Review the DNS server implementation configuration to determine if the DNS server performs data integrity verification on the name/address resolution responses the system receives from authoritative sources. If the DNS server does not perform data integrity verification on the responses, this is a finding.'\n  desc 'fix', 'Configure the DNS server to perform data integrity verification on the name/address resolution responses the system receives from authoritative sources.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55501r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54877'\n  tag rid: 'SV-69123r1_rule'\n  tag stig_id: 'SRG-APP-000425-DNS-000058'\n  tag gtitle: 'SRG-APP-000425-DNS-000058'\n  tag fix_id: 'F-59737r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-002467']\n  tag nist: ['SC-21']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69123.rb"},"title":"A DNS server implementation must perform data integrity verification on the name/address resolution responses the system receives from authoritative sources.","desc":"If data origin authentication and data integrity verification are not performed, the resultant response could be forged, it may have come from a poisoned cache, the packets could have been intercepted without the resolver's knowledge, or resource records could have been removed that would result in query failure or denial of service. Data integrity verification must be performed to thwart these types of attacks.\n\nEach client of name resolution services either performs this validation on its own or has authenticated channels to trusted validation providers. Information systems that provide name and address resolution services for local clients include, for example, recursive resolving or caching DNS servers. DNS client resolvers either perform validation of DNSSEC signatures, or clients use authenticated channels to recursive resolvers that perform such validations.","descriptions":{"default":"If data origin authentication and data integrity verification are not performed, the resultant response could be forged, it may have come from a poisoned cache, the packets could have been intercepted without the resolver's knowledge, or resource records could have been removed that would result in query failure or denial of service. Data integrity verification must be performed to thwart these types of attacks.\n\nEach client of name resolution services either performs this validation on its own or has authenticated channels to trusted validation providers. Information systems that provide name and address resolution services for local clients include, for example, recursive resolving or caching DNS servers. DNS client resolvers either perform validation of DNSSEC signatures, or clients use authenticated channels to recursive resolvers that perform such validations.","check":"Review the DNS server implementation configuration to determine if the DNS server performs data integrity verification on the name/address resolution responses the system receives from authoritative sources. If the DNS server does not perform data integrity verification on the responses, this is a finding.","fix":"Configure the DNS server to perform data integrity verification on the name/address resolution responses the system receives from authoritative sources."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55501r1_chk","severity":"medium","gid":"V-54877","rid":"SV-69123r1_rule","stig_id":"SRG-APP-000425-DNS-000058","gtitle":"SRG-APP-000425-DNS-000058","fix_id":"F-59737r1_fix","documentable":null,"cci":["CCI-002467"],"nist":["SC-21"]}},{"id":"SV-69131","code":"control 'SV-69131' do\n  title 'A DNS server implementation must perform data origin verification authentication on the name/address resolution responses the system receives from authoritative sources.'\n  desc \"If data origin authentication and data integrity verification are not performed, the resultant response could be forged, it may have come from a poisoned cache, the packets could have been intercepted without the resolver's knowledge, or resource records could have been removed which would result in query failure or denial of service. Data origin authentication verification must be performed to thwart these types of attacks.\n\nEach client of name resolution services either performs this validation on its own or has authenticated channels to trusted validation providers. Information systems that provide name and address resolution services for local clients include, for example, recursive resolving or caching DNS servers. DNS client resolvers either perform validation of DNSSEC signatures, or clients use authenticated channels to recursive resolvers that perform such validations.\"\n  desc 'check', 'Review the DNS server implementation configuration to determine if the DNS server performs data origin verification authentication on the name/address resolution responses the system receives from authoritative sources. If the DNS server does not perform data origin verification authentication on the responses, this is a finding.'\n  desc 'fix', 'Configure the DNS server to perform data origin verification authentication on the name/address resolution responses the system receives from authoritative sources.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55511r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54885'\n  tag rid: 'SV-69131r1_rule'\n  tag stig_id: 'SRG-APP-000426-DNS-000059'\n  tag gtitle: 'SRG-APP-000426-DNS-000059'\n  tag fix_id: 'F-59747r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-002468']\n  tag nist: ['SC-21']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69131.rb"},"title":"A DNS server implementation must perform data origin verification authentication on the name/address resolution responses the system receives from authoritative sources.","desc":"If data origin authentication and data integrity verification are not performed, the resultant response could be forged, it may have come from a poisoned cache, the packets could have been intercepted without the resolver's knowledge, or resource records could have been removed which would result in query failure or denial of service. Data origin authentication verification must be performed to thwart these types of attacks.\n\nEach client of name resolution services either performs this validation on its own or has authenticated channels to trusted validation providers. Information systems that provide name and address resolution services for local clients include, for example, recursive resolving or caching DNS servers. DNS client resolvers either perform validation of DNSSEC signatures, or clients use authenticated channels to recursive resolvers that perform such validations.","descriptions":{"default":"If data origin authentication and data integrity verification are not performed, the resultant response could be forged, it may have come from a poisoned cache, the packets could have been intercepted without the resolver's knowledge, or resource records could have been removed which would result in query failure or denial of service. Data origin authentication verification must be performed to thwart these types of attacks.\n\nEach client of name resolution services either performs this validation on its own or has authenticated channels to trusted validation providers. Information systems that provide name and address resolution services for local clients include, for example, recursive resolving or caching DNS servers. DNS client resolvers either perform validation of DNSSEC signatures, or clients use authenticated channels to recursive resolvers that perform such validations.","check":"Review the DNS server implementation configuration to determine if the DNS server performs data origin verification authentication on the name/address resolution responses the system receives from authoritative sources. If the DNS server does not perform data origin verification authentication on the responses, this is a finding.","fix":"Configure the DNS server to perform data origin verification authentication on the name/address resolution responses the system receives from authoritative sources."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55511r1_chk","severity":"medium","gid":"V-54885","rid":"SV-69131r1_rule","stig_id":"SRG-APP-000426-DNS-000059","gtitle":"SRG-APP-000426-DNS-000059","fix_id":"F-59747r1_fix","documentable":null,"cci":["CCI-002468"],"nist":["SC-21"]}},{"id":"SV-69133","code":"control 'SV-69133' do\n  title 'If the DNS server is using SIG(0), the DNS server implementation must only allow the use of DoD PKI-established certificate authorities for verification of the establishment of protected transactions.'\n  desc 'Untrusted Certificate Authorities (CA) can issue certificates, but they may be issued by organizations or individuals that seek to compromise DoD systems or by organizations with insufficient security controls. If the CA used for verifying the certificate is not a DoD-approved CA, trust of this CA has not been established.\n\nThe DoD will only accept PKI certificates obtained from a DoD-approved internal or external certificate authority. Reliance on CAs for the establishment of secure sessions includes, for example, the use of SSL/TLS certificates. \n\nSIG(0) relies on PKI-based authentication, so if SIG(0) is being used, this requirement is applicable.'\n  desc 'check', 'If the DNS server is using SIG(0), review the DNS server implementation configuration to determine if the DNS server only allows the use of DoD PKI-established certificate authorities for verification of the establishment of protected transactions. If the DNS server allows the use of other certificate authorities, this is a finding.'\n  desc 'fix', 'Configure the DNS server to only allow the use of DoD PKI-established certificate authorities for verification of the establishment of protected transactions.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55513r2_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54887'\n  tag rid: 'SV-69133r1_rule'\n  tag stig_id: 'SRG-APP-000427-DNS-000060'\n  tag gtitle: 'SRG-APP-000427-DNS-000060'\n  tag fix_id: 'F-59749r2_fix'\n  tag 'documentable'\n  tag cci: ['CCI-002470']\n  tag nist: ['SC-23 (5)']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69133.rb"},"title":"If the DNS server is using SIG(0), the DNS server implementation must only allow the use of DoD PKI-established certificate authorities for verification of the establishment of protected transactions.","desc":"Untrusted Certificate Authorities (CA) can issue certificates, but they may be issued by organizations or individuals that seek to compromise DoD systems or by organizations with insufficient security controls. If the CA used for verifying the certificate is not a DoD-approved CA, trust of this CA has not been established.\n\nThe DoD will only accept PKI certificates obtained from a DoD-approved internal or external certificate authority. Reliance on CAs for the establishment of secure sessions includes, for example, the use of SSL/TLS certificates. \n\nSIG(0) relies on PKI-based authentication, so if SIG(0) is being used, this requirement is applicable.","descriptions":{"default":"Untrusted Certificate Authorities (CA) can issue certificates, but they may be issued by organizations or individuals that seek to compromise DoD systems or by organizations with insufficient security controls. If the CA used for verifying the certificate is not a DoD-approved CA, trust of this CA has not been established.\n\nThe DoD will only accept PKI certificates obtained from a DoD-approved internal or external certificate authority. Reliance on CAs for the establishment of secure sessions includes, for example, the use of SSL/TLS certificates. \n\nSIG(0) relies on PKI-based authentication, so if SIG(0) is being used, this requirement is applicable.","check":"If the DNS server is using SIG(0), review the DNS server implementation configuration to determine if the DNS server only allows the use of DoD PKI-established certificate authorities for verification of the establishment of protected transactions. If the DNS server allows the use of other certificate authorities, this is a finding.","fix":"Configure the DNS server to only allow the use of DoD PKI-established certificate authorities for verification of the establishment of protected transactions."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55513r2_chk","severity":"medium","gid":"V-54887","rid":"SV-69133r1_rule","stig_id":"SRG-APP-000427-DNS-000060","gtitle":"SRG-APP-000427-DNS-000060","fix_id":"F-59749r2_fix","documentable":null,"cci":["CCI-002470"],"nist":["SC-23 (5)"]}},{"id":"SV-69135","code":"control 'SV-69135' do\n  title 'The DNS server implementation must utilize cryptographic mechanisms to prevent unauthorized disclosure of non-DNS data stored on the DNS server.'\n  desc 'Applications handling data requiring \"data-at-rest\" protections must employ cryptographic mechanisms to prevent unauthorized disclosure and modification of the information at rest.\n\nSelection of a cryptographic mechanism is based on the need to protect the confidentiality of organizational information. The strength of mechanism is commensurate with the security category and/or classification of the information. Organizations have the flexibility to either encrypt all information on storage devices (i.e., full disk encryption) or encrypt specific data structures (e.g., files, records, or fields). \n\nThe DNS server must protect the confidentiality of keys (for TSIG/SIG(0) and DNSSEC). There is no need to protect the confidentiality of DNS information because it is accessible by all devices that can contact the server.'\n  desc 'check', 'Review the DNS server implementation configuration to determine if the DNS server utilizes cryptographic mechanisms to prevent unauthorized disclosure of non-DNS data while stored on the DNS server. \n\nIf the DNS server does not utilize cryptographic mechanisms to prevent unauthorized disclosure, this is a finding.'\n  desc 'fix', 'Configure the DNS server to utilize cryptographic mechanisms to prevent unauthorized disclosure of non-DNS data while stored on the DNS server.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55515r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54889'\n  tag rid: 'SV-69135r1_rule'\n  tag stig_id: 'SRG-APP-000429-DNS-000062'\n  tag gtitle: 'SRG-APP-000429-DNS-000062'\n  tag fix_id: 'F-59751r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-002476']\n  tag nist: ['SC-28 (1)']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69135.rb"},"title":"The DNS server implementation must utilize cryptographic mechanisms to prevent unauthorized disclosure of non-DNS data stored on the DNS server.","desc":"Applications handling data requiring \"data-at-rest\" protections must employ cryptographic mechanisms to prevent unauthorized disclosure and modification of the information at rest.\n\nSelection of a cryptographic mechanism is based on the need to protect the confidentiality of organizational information. The strength of mechanism is commensurate with the security category and/or classification of the information. Organizations have the flexibility to either encrypt all information on storage devices (i.e., full disk encryption) or encrypt specific data structures (e.g., files, records, or fields). \n\nThe DNS server must protect the confidentiality of keys (for TSIG/SIG(0) and DNSSEC). There is no need to protect the confidentiality of DNS information because it is accessible by all devices that can contact the server.","descriptions":{"default":"Applications handling data requiring \"data-at-rest\" protections must employ cryptographic mechanisms to prevent unauthorized disclosure and modification of the information at rest.\n\nSelection of a cryptographic mechanism is based on the need to protect the confidentiality of organizational information. The strength of mechanism is commensurate with the security category and/or classification of the information. Organizations have the flexibility to either encrypt all information on storage devices (i.e., full disk encryption) or encrypt specific data structures (e.g., files, records, or fields). \n\nThe DNS server must protect the confidentiality of keys (for TSIG/SIG(0) and DNSSEC). There is no need to protect the confidentiality of DNS information because it is accessible by all devices that can contact the server.","check":"Review the DNS server implementation configuration to determine if the DNS server utilizes cryptographic mechanisms to prevent unauthorized disclosure of non-DNS data while stored on the DNS server. \n\nIf the DNS server does not utilize cryptographic mechanisms to prevent unauthorized disclosure, this is a finding.","fix":"Configure the DNS server to utilize cryptographic mechanisms to prevent unauthorized disclosure of non-DNS data while stored on the DNS server."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55515r1_chk","severity":"medium","gid":"V-54889","rid":"SV-69135r1_rule","stig_id":"SRG-APP-000429-DNS-000062","gtitle":"SRG-APP-000429-DNS-000062","fix_id":"F-59751r1_fix","documentable":null,"cci":["CCI-002476"],"nist":["SC-28 (1)"]}},{"id":"SV-69137","code":"control 'SV-69137' do\n  title 'The DNS server implementation must protect the integrity of transmitted information.'\n  desc 'Without protection of the transmitted information, confidentiality and integrity may be compromised since unprotected communications can be intercepted and either read or altered. \n\nCommunication paths outside the physical protection of a controlled boundary are exposed to the possibility of interception and modification. Protecting the confidentiality and integrity of organizational information can be accomplished by physical means (e.g., employing physical distribution systems) or by logical means (e.g., employing cryptographic techniques). If physical means of protection are employed, then logical means (cryptography) do not have to be employed, and vice versa.\n\nConfidentiality is not an objective of DNS, but integrity is. DNSSEC and TSIG/SIG(0) both digitally sign DNS information to authenticate its source and ensure its integrity.'\n  desc 'check', 'Review the DNS implementation configuration to determine if the DNS server protects the integrity of transmitted information. If the DNS server does not protect the integrity of transmitted information, this is a finding.'\n  desc 'fix', 'Configure the DNS server to protect the integrity of transmitted information.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55517r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54891'\n  tag rid: 'SV-69137r1_rule'\n  tag stig_id: 'SRG-APP-000439-DNS-000063'\n  tag gtitle: 'SRG-APP-000439-DNS-000063'\n  tag fix_id: 'F-59753r2_fix'\n  tag 'documentable'\n  tag cci: ['CCI-002418']\n  tag nist: ['SC-8']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69137.rb"},"title":"The DNS server implementation must protect the integrity of transmitted information.","desc":"Without protection of the transmitted information, confidentiality and integrity may be compromised since unprotected communications can be intercepted and either read or altered. \n\nCommunication paths outside the physical protection of a controlled boundary are exposed to the possibility of interception and modification. Protecting the confidentiality and integrity of organizational information can be accomplished by physical means (e.g., employing physical distribution systems) or by logical means (e.g., employing cryptographic techniques). If physical means of protection are employed, then logical means (cryptography) do not have to be employed, and vice versa.\n\nConfidentiality is not an objective of DNS, but integrity is. DNSSEC and TSIG/SIG(0) both digitally sign DNS information to authenticate its source and ensure its integrity.","descriptions":{"default":"Without protection of the transmitted information, confidentiality and integrity may be compromised since unprotected communications can be intercepted and either read or altered. \n\nCommunication paths outside the physical protection of a controlled boundary are exposed to the possibility of interception and modification. Protecting the confidentiality and integrity of organizational information can be accomplished by physical means (e.g., employing physical distribution systems) or by logical means (e.g., employing cryptographic techniques). If physical means of protection are employed, then logical means (cryptography) do not have to be employed, and vice versa.\n\nConfidentiality is not an objective of DNS, but integrity is. DNSSEC and TSIG/SIG(0) both digitally sign DNS information to authenticate its source and ensure its integrity.","check":"Review the DNS implementation configuration to determine if the DNS server protects the integrity of transmitted information. If the DNS server does not protect the integrity of transmitted information, this is a finding.","fix":"Configure the DNS server to protect the integrity of transmitted information."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55517r1_chk","severity":"medium","gid":"V-54891","rid":"SV-69137r1_rule","stig_id":"SRG-APP-000439-DNS-000063","gtitle":"SRG-APP-000439-DNS-000063","fix_id":"F-59753r2_fix","documentable":null,"cci":["CCI-002418"],"nist":["SC-8"]}},{"id":"SV-69141","code":"control 'SV-69141' do\n  title 'The DNS server implementation must implement cryptographic mechanisms to detect changes to information during transmission unless otherwise protected by alternative physical safeguards, such as, at a minimum, a Protected Distribution System (PDS).'\n  desc 'Encrypting information for transmission protects information from unauthorized disclosure and modification. Cryptographic mechanisms implemented to protect information integrity include, for example, cryptographic hash functions which have common application in digital signatures, checksums, and message authentication codes. \n\nConfidentiality is not an objective of DNS, but integrity is. DNSSEC and TSIG/SIG(0) both digitally sign DNS information to authenticate its source and ensure its integrity.'\n  desc 'check', 'Review the DNS server implementation configuration to determine if the DNS server implements cryptographic mechanisms to detect changes to information during transmission unless otherwise protected by alternative physical safeguards, such as, at a minimum, a Protected Distribution System (PDS). If the DNS server does not implement such cryptographic mechanisms, this is a finding.'\n  desc 'fix', 'Configure the DNS server to detect changes to information during transmission unless otherwise protected by alternative physical safeguards, such as, at a minimum, a Protected Distribution Systems (PDS).'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55521r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54895'\n  tag rid: 'SV-69141r1_rule'\n  tag stig_id: 'SRG-APP-000440-DNS-000065'\n  tag gtitle: 'SRG-APP-000440-DNS-000065'\n  tag fix_id: 'F-59757r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-002421']\n  tag nist: ['SC-8 (1)']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69141.rb"},"title":"The DNS server implementation must implement cryptographic mechanisms to detect changes to information during transmission unless otherwise protected by alternative physical safeguards, such as, at a minimum, a Protected Distribution System (PDS).","desc":"Encrypting information for transmission protects information from unauthorized disclosure and modification. Cryptographic mechanisms implemented to protect information integrity include, for example, cryptographic hash functions which have common application in digital signatures, checksums, and message authentication codes. \n\nConfidentiality is not an objective of DNS, but integrity is. DNSSEC and TSIG/SIG(0) both digitally sign DNS information to authenticate its source and ensure its integrity.","descriptions":{"default":"Encrypting information for transmission protects information from unauthorized disclosure and modification. Cryptographic mechanisms implemented to protect information integrity include, for example, cryptographic hash functions which have common application in digital signatures, checksums, and message authentication codes. \n\nConfidentiality is not an objective of DNS, but integrity is. DNSSEC and TSIG/SIG(0) both digitally sign DNS information to authenticate its source and ensure its integrity.","check":"Review the DNS server implementation configuration to determine if the DNS server implements cryptographic mechanisms to detect changes to information during transmission unless otherwise protected by alternative physical safeguards, such as, at a minimum, a Protected Distribution System (PDS). If the DNS server does not implement such cryptographic mechanisms, this is a finding.","fix":"Configure the DNS server to detect changes to information during transmission unless otherwise protected by alternative physical safeguards, such as, at a minimum, a Protected Distribution Systems (PDS)."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55521r1_chk","severity":"medium","gid":"V-54895","rid":"SV-69141r1_rule","stig_id":"SRG-APP-000440-DNS-000065","gtitle":"SRG-APP-000440-DNS-000065","fix_id":"F-59757r1_fix","documentable":null,"cci":["CCI-002421"],"nist":["SC-8 (1)"]}},{"id":"SV-69143","code":"control 'SV-69143' do\n  title 'The DNS server implementation must maintain the integrity of information during preparation for transmission.'\n  desc 'Information can be either unintentionally or maliciously disclosed or modified during preparation for transmission, including, for example, during aggregation, at protocol transformation points, and during packing/unpacking. These unauthorized disclosures or modifications compromise the confidentiality or integrity of the information.\n\nConfidentiality is not an objective of DNS, but integrity is. DNS is responsible for maintaining the integrity of DNS information while it is being prepared for transmission.'\n  desc 'check', 'Review the DNS server implementation configuration to determine if the DNS server maintains the integrity of information during preparation for transmission. If the DNS server does not maintain the integrity during preparation for transmission, this is a finding.'\n  desc 'fix', 'Configure the DNS server to maintain the integrity of information during preparation for transmission.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55523r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54897'\n  tag rid: 'SV-69143r1_rule'\n  tag stig_id: 'SRG-APP-000441-DNS-000066'\n  tag gtitle: 'SRG-APP-000441-DNS-000066'\n  tag fix_id: 'F-59759r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-002420']\n  tag nist: ['SC-8 (2)']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69143.rb"},"title":"The DNS server implementation must maintain the integrity of information during preparation for transmission.","desc":"Information can be either unintentionally or maliciously disclosed or modified during preparation for transmission, including, for example, during aggregation, at protocol transformation points, and during packing/unpacking. These unauthorized disclosures or modifications compromise the confidentiality or integrity of the information.\n\nConfidentiality is not an objective of DNS, but integrity is. DNS is responsible for maintaining the integrity of DNS information while it is being prepared for transmission.","descriptions":{"default":"Information can be either unintentionally or maliciously disclosed or modified during preparation for transmission, including, for example, during aggregation, at protocol transformation points, and during packing/unpacking. These unauthorized disclosures or modifications compromise the confidentiality or integrity of the information.\n\nConfidentiality is not an objective of DNS, but integrity is. DNS is responsible for maintaining the integrity of DNS information while it is being prepared for transmission.","check":"Review the DNS server implementation configuration to determine if the DNS server maintains the integrity of information during preparation for transmission. If the DNS server does not maintain the integrity during preparation for transmission, this is a finding.","fix":"Configure the DNS server to maintain the integrity of information during preparation for transmission."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55523r1_chk","severity":"medium","gid":"V-54897","rid":"SV-69143r1_rule","stig_id":"SRG-APP-000441-DNS-000066","gtitle":"SRG-APP-000441-DNS-000066","fix_id":"F-59759r1_fix","documentable":null,"cci":["CCI-002420"],"nist":["SC-8 (2)"]}},{"id":"SV-69145","code":"control 'SV-69145' do\n  title 'The DNS server implementation must maintain the integrity of information during reception.'\n  desc 'Information can be either unintentionally or maliciously disclosed or modified during reception, including, for example, during aggregation, at protocol transformation points, and during packing/unpacking. These unauthorized disclosures or modifications compromise the confidentiality or integrity of the information.\n\nConfidentiality is not an objective of DNS, but integrity is. DNS is responsible for maintaining the integrity of DNS information while it is being received.'\n  desc 'check', 'Review the DNS server implementation configuration to determine if the DNS server maintains the integrity of information during reception. If the DNS server does not maintain integrity during reception, this is a finding.'\n  desc 'fix', 'Configure the DNS server to maintain the integrity of information during reception.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55525r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54899'\n  tag rid: 'SV-69145r1_rule'\n  tag stig_id: 'SRG-APP-000442-DNS-000067'\n  tag gtitle: 'SRG-APP-000442-DNS-000067'\n  tag fix_id: 'F-59761r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-002422']\n  tag nist: ['SC-8 (2)']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69145.rb"},"title":"The DNS server implementation must maintain the integrity of information during reception.","desc":"Information can be either unintentionally or maliciously disclosed or modified during reception, including, for example, during aggregation, at protocol transformation points, and during packing/unpacking. These unauthorized disclosures or modifications compromise the confidentiality or integrity of the information.\n\nConfidentiality is not an objective of DNS, but integrity is. DNS is responsible for maintaining the integrity of DNS information while it is being received.","descriptions":{"default":"Information can be either unintentionally or maliciously disclosed or modified during reception, including, for example, during aggregation, at protocol transformation points, and during packing/unpacking. These unauthorized disclosures or modifications compromise the confidentiality or integrity of the information.\n\nConfidentiality is not an objective of DNS, but integrity is. DNS is responsible for maintaining the integrity of DNS information while it is being received.","check":"Review the DNS server implementation configuration to determine if the DNS server maintains the integrity of information during reception. If the DNS server does not maintain integrity during reception, this is a finding.","fix":"Configure the DNS server to maintain the integrity of information during reception."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55525r1_chk","severity":"medium","gid":"V-54899","rid":"SV-69145r1_rule","stig_id":"SRG-APP-000442-DNS-000067","gtitle":"SRG-APP-000442-DNS-000067","fix_id":"F-59761r1_fix","documentable":null,"cci":["CCI-002422"],"nist":["SC-8 (2)"]}},{"id":"SV-69147","code":"control 'SV-69147' do\n  title 'The DNS server implementation must behave in a predictable and documented manner that reflects organizational and system objectives when invalid inputs are received.'\n  desc 'A common vulnerability of applications is unpredictable behavior when invalid inputs are received. This requirement guards against adverse or unintended system behavior caused by invalid inputs, where information system responses to the invalid input may be disruptive or cause the system to fail into an unsafe state. The behavior will be derived from the organizational and system requirements and includes, but is not limited to, notification of the appropriate personnel, creating an audit record, and rejecting invalid input. \n\nAttacks may be generated by entering invalid data into DNS transactions, in the hopes that the data will not be handled correctly and will allow a vulnerable condition to be exploited. To safeguard against this, all untrusted data entered in DNS transactions (e.g., DNS queries) should be checked for validity before being processed further.'\n  desc 'check', 'Review the DNS server implementation configuration to determine if the DNS server behaves in a predictable and documented manner that reflects organizational and system objectives when invalid inputs are received. If the DNS server does not behave in such a manner, this is a finding.'\n  desc 'fix', 'Configure the DNS server to behave in a predictable and documented manner that reflects organizational and system objectives when invalid inputs are received.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55527r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54901'\n  tag rid: 'SV-69147r1_rule'\n  tag stig_id: 'SRG-APP-000447-DNS-000068'\n  tag gtitle: 'SRG-APP-000447-DNS-000068'\n  tag fix_id: 'F-59763r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-002754']\n  tag nist: ['SI-10 (3)']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69147.rb"},"title":"The DNS server implementation must behave in a predictable and documented manner that reflects organizational and system objectives when invalid inputs are received.","desc":"A common vulnerability of applications is unpredictable behavior when invalid inputs are received. This requirement guards against adverse or unintended system behavior caused by invalid inputs, where information system responses to the invalid input may be disruptive or cause the system to fail into an unsafe state. The behavior will be derived from the organizational and system requirements and includes, but is not limited to, notification of the appropriate personnel, creating an audit record, and rejecting invalid input. \n\nAttacks may be generated by entering invalid data into DNS transactions, in the hopes that the data will not be handled correctly and will allow a vulnerable condition to be exploited. To safeguard against this, all untrusted data entered in DNS transactions (e.g., DNS queries) should be checked for validity before being processed further.","descriptions":{"default":"A common vulnerability of applications is unpredictable behavior when invalid inputs are received. This requirement guards against adverse or unintended system behavior caused by invalid inputs, where information system responses to the invalid input may be disruptive or cause the system to fail into an unsafe state. The behavior will be derived from the organizational and system requirements and includes, but is not limited to, notification of the appropriate personnel, creating an audit record, and rejecting invalid input. \n\nAttacks may be generated by entering invalid data into DNS transactions, in the hopes that the data will not be handled correctly and will allow a vulnerable condition to be exploited. To safeguard against this, all untrusted data entered in DNS transactions (e.g., DNS queries) should be checked for validity before being processed further.","check":"Review the DNS server implementation configuration to determine if the DNS server behaves in a predictable and documented manner that reflects organizational and system objectives when invalid inputs are received. If the DNS server does not behave in such a manner, this is a finding.","fix":"Configure the DNS server to behave in a predictable and documented manner that reflects organizational and system objectives when invalid inputs are received."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55527r1_chk","severity":"medium","gid":"V-54901","rid":"SV-69147r1_rule","stig_id":"SRG-APP-000447-DNS-000068","gtitle":"SRG-APP-000447-DNS-000068","fix_id":"F-59763r1_fix","documentable":null,"cci":["CCI-002754"],"nist":["SI-10 (3)"]}},{"id":"SV-69149","code":"control 'SV-69149' do\n  title 'The DNS server implementation must follow procedures to re-role a secondary name server as the master name server should the master name server permanently lose functionality.'\n  desc 'Failing to an unsecure condition negatively impacts application security and can lead to system compromise. Failure conditions include, for example, loss of communications among critical system components or between system components and operational facilities. Fail-safe procedures include, for example, alerting operator personnel and providing specific instructions on subsequent steps to take (e.g., do nothing, reestablish system settings, shut down processes, restart the system, or contact designated organizational personnel).\n\nIf a component such as the DNSSEC or TSIG/SIG(0) signing capabilities were to fail, the DNS server should shut itself down to prevent continued execution without the necessary security components in place. Transactions such as zone transfers would not be able to work correctly anyway in this state.'\n  desc 'check', 'Review the DNS server implementation operating documentation to determine if procedures exist to promote a secondary name server to the master in the event the master DNS name server permanently loses functionality.\n\nIf procedures do not exist to promote a secondary name server to the master in the event the master DNS name server permanently loses functionality, this is a finding.'\n  desc 'fix', 'Develop internal procedures to ensure a secondary name server to the master in the event the master DNS name server permanently loses functionality.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55529r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54903'\n  tag rid: 'SV-69149r1_rule'\n  tag stig_id: 'SRG-APP-000451-DNS-000069'\n  tag gtitle: 'SRG-APP-000451-DNS-000069'\n  tag fix_id: 'F-59765r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000366', 'CCI-002775']\n  tag nist: ['CM-6 b', 'SI-17']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69149.rb"},"title":"The DNS server implementation must follow procedures to re-role a secondary name server as the master name server should the master name server permanently lose functionality.","desc":"Failing to an unsecure condition negatively impacts application security and can lead to system compromise. Failure conditions include, for example, loss of communications among critical system components or between system components and operational facilities. Fail-safe procedures include, for example, alerting operator personnel and providing specific instructions on subsequent steps to take (e.g., do nothing, reestablish system settings, shut down processes, restart the system, or contact designated organizational personnel).\n\nIf a component such as the DNSSEC or TSIG/SIG(0) signing capabilities were to fail, the DNS server should shut itself down to prevent continued execution without the necessary security components in place. Transactions such as zone transfers would not be able to work correctly anyway in this state.","descriptions":{"default":"Failing to an unsecure condition negatively impacts application security and can lead to system compromise. Failure conditions include, for example, loss of communications among critical system components or between system components and operational facilities. Fail-safe procedures include, for example, alerting operator personnel and providing specific instructions on subsequent steps to take (e.g., do nothing, reestablish system settings, shut down processes, restart the system, or contact designated organizational personnel).\n\nIf a component such as the DNSSEC or TSIG/SIG(0) signing capabilities were to fail, the DNS server should shut itself down to prevent continued execution without the necessary security components in place. Transactions such as zone transfers would not be able to work correctly anyway in this state.","check":"Review the DNS server implementation operating documentation to determine if procedures exist to promote a secondary name server to the master in the event the master DNS name server permanently loses functionality.\n\nIf procedures do not exist to promote a secondary name server to the master in the event the master DNS name server permanently loses functionality, this is a finding.","fix":"Develop internal procedures to ensure a secondary name server to the master in the event the master DNS name server permanently loses functionality."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55529r1_chk","severity":"medium","gid":"V-54903","rid":"SV-69149r1_rule","stig_id":"SRG-APP-000451-DNS-000069","gtitle":"SRG-APP-000451-DNS-000069","fix_id":"F-59765r1_fix","documentable":null,"cci":["CCI-000366","CCI-002775"],"nist":["CM-6 b","SI-17"]}},{"id":"SV-69151","code":"control 'SV-69151' do\n  title 'The DNS server implementation must perform verification of the correct operation of security functions: upon system start-up and/or restart; upon command by a user with privileged access; and/or every 30 days.'\n  desc 'Security function is defined as the hardware, software, and/or firmware of the information system responsible for enforcing the system security policy and supporting the isolation of code and data on which the protection is based. Security functionality includes, but is not limited to, establishing system accounts, configuring access authorizations (i.e., permissions, privileges), setting events to be audited, and setting intrusion detection parameters. Without verification, security functions may not operate correctly and this failure may go unnoticed. \n\nNotifications provided by information systems include, for example, electronic alerts to system administrators, messages to local computer consoles, and/or hardware indications, such as lights.\n\nThe DNS server should perform self-tests, such as at server start-up, to confirm that its security functions are working properly.'\n  desc 'check', 'Review the DNS server implementation configuration to determine if the DNS server performs verification of the correct operation of security functions: upon system start-up and/or restart; upon command by a user with privileged access; and/or every 30 days. If the DNS server does not perform this verification when needed, this is a finding.'\n  desc 'fix', 'Configure the DNS server to perform verification of the correct operation of security functions: upon system start-up and/or restart; upon command by a user with privileged access; and/or every 30 days.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55531r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54905'\n  tag rid: 'SV-69151r1_rule'\n  tag stig_id: 'SRG-APP-000473-DNS-000072'\n  tag gtitle: 'SRG-APP-000473-DNS-000072'\n  tag fix_id: 'F-59767r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-002699']\n  tag nist: ['SI-6 b']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69151.rb"},"title":"The DNS server implementation must perform verification of the correct operation of security functions: upon system start-up and/or restart; upon command by a user with privileged access; and/or every 30 days.","desc":"Security function is defined as the hardware, software, and/or firmware of the information system responsible for enforcing the system security policy and supporting the isolation of code and data on which the protection is based. Security functionality includes, but is not limited to, establishing system accounts, configuring access authorizations (i.e., permissions, privileges), setting events to be audited, and setting intrusion detection parameters. Without verification, security functions may not operate correctly and this failure may go unnoticed. \n\nNotifications provided by information systems include, for example, electronic alerts to system administrators, messages to local computer consoles, and/or hardware indications, such as lights.\n\nThe DNS server should perform self-tests, such as at server start-up, to confirm that its security functions are working properly.","descriptions":{"default":"Security function is defined as the hardware, software, and/or firmware of the information system responsible for enforcing the system security policy and supporting the isolation of code and data on which the protection is based. Security functionality includes, but is not limited to, establishing system accounts, configuring access authorizations (i.e., permissions, privileges), setting events to be audited, and setting intrusion detection parameters. Without verification, security functions may not operate correctly and this failure may go unnoticed. \n\nNotifications provided by information systems include, for example, electronic alerts to system administrators, messages to local computer consoles, and/or hardware indications, such as lights.\n\nThe DNS server should perform self-tests, such as at server start-up, to confirm that its security functions are working properly.","check":"Review the DNS server implementation configuration to determine if the DNS server performs verification of the correct operation of security functions: upon system start-up and/or restart; upon command by a user with privileged access; and/or every 30 days. If the DNS server does not perform this verification when needed, this is a finding.","fix":"Configure the DNS server to perform verification of the correct operation of security functions: upon system start-up and/or restart; upon command by a user with privileged access; and/or every 30 days."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55531r1_chk","severity":"medium","gid":"V-54905","rid":"SV-69151r1_rule","stig_id":"SRG-APP-000473-DNS-000072","gtitle":"SRG-APP-000473-DNS-000072","fix_id":"F-59767r1_fix","documentable":null,"cci":["CCI-002699"],"nist":["SI-6 b"]}},{"id":"SV-69153","code":"control 'SV-69153' do\n  title 'The DNS server implementation must log the event and notify the system administrator when anomalies in the operation of the signed zone transfers are discovered.'\n  desc 'Security function is defined as the hardware, software, and/or firmware of the information system responsible for enforcing the system security policy and supporting the isolation of code and data on which the protection is based. Security functionality includes, but is not limited to, establishing system accounts, configuring access authorizations (i.e., permissions, privileges), setting events to be audited, and setting intrusion detection parameters. Notifications provided by information systems include messages to local computer consoles, and/or hardware indications, such as lights. \n\nIf anomalies are not acted upon, security functions may fail to secure the system. \n\nThe DNS server does not have the capability of shutting down or restarting the information system. The DNS server can be configured to generate audit records when anomalies are discovered, and the OS/NDM can then trigger notification messages to the system administrator based on the presence of those audit records.'\n  desc 'check', 'Review the DNS server implementation configuration to determine if the DNS server logs the event and notifies the system administrator when anomalies in the operation of the signed zone transfers are discovered. \n\nIf the DNS server implementation does not log the event and notify the system administrator when anomalies in the operation of the signed zone transfers are discovered, this is a finding.'\n  desc 'fix', 'Configure the DNS server to log the event and notify the system administrator when anomalies in the operation of the signed zone transfers are discovered.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55533r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54907'\n  tag rid: 'SV-69153r1_rule'\n  tag stig_id: 'SRG-APP-000474-DNS-000073'\n  tag gtitle: 'SRG-APP-000474-DNS-000073'\n  tag fix_id: 'F-59769r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-002702']\n  tag nist: ['SI-6 d']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69153.rb"},"title":"The DNS server implementation must log the event and notify the system administrator when anomalies in the operation of the signed zone transfers are discovered.","desc":"Security function is defined as the hardware, software, and/or firmware of the information system responsible for enforcing the system security policy and supporting the isolation of code and data on which the protection is based. Security functionality includes, but is not limited to, establishing system accounts, configuring access authorizations (i.e., permissions, privileges), setting events to be audited, and setting intrusion detection parameters. Notifications provided by information systems include messages to local computer consoles, and/or hardware indications, such as lights. \n\nIf anomalies are not acted upon, security functions may fail to secure the system. \n\nThe DNS server does not have the capability of shutting down or restarting the information system. The DNS server can be configured to generate audit records when anomalies are discovered, and the OS/NDM can then trigger notification messages to the system administrator based on the presence of those audit records.","descriptions":{"default":"Security function is defined as the hardware, software, and/or firmware of the information system responsible for enforcing the system security policy and supporting the isolation of code and data on which the protection is based. Security functionality includes, but is not limited to, establishing system accounts, configuring access authorizations (i.e., permissions, privileges), setting events to be audited, and setting intrusion detection parameters. Notifications provided by information systems include messages to local computer consoles, and/or hardware indications, such as lights. \n\nIf anomalies are not acted upon, security functions may fail to secure the system. \n\nThe DNS server does not have the capability of shutting down or restarting the information system. The DNS server can be configured to generate audit records when anomalies are discovered, and the OS/NDM can then trigger notification messages to the system administrator based on the presence of those audit records.","check":"Review the DNS server implementation configuration to determine if the DNS server logs the event and notifies the system administrator when anomalies in the operation of the signed zone transfers are discovered. \n\nIf the DNS server implementation does not log the event and notify the system administrator when anomalies in the operation of the signed zone transfers are discovered, this is a finding.","fix":"Configure the DNS server to log the event and notify the system administrator when anomalies in the operation of the signed zone transfers are discovered."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55533r1_chk","severity":"medium","gid":"V-54907","rid":"SV-69153r1_rule","stig_id":"SRG-APP-000474-DNS-000073","gtitle":"SRG-APP-000474-DNS-000073","fix_id":"F-59769r1_fix","documentable":null,"cci":["CCI-002702"],"nist":["SI-6 d"]}},{"id":"SV-69155","code":"control 'SV-69155' do\n  title 'The DNS implementation must generate audit records for the success and failure of start and stop of the name server service or daemon.'\n  desc 'Auditing and logging are key components of any security architecture. It is essential for security personnel to know what is being performed on the system, where an event occurred, when an event occurred, and by whom the event was triggered, in order to compile an accurate risk assessment. Logging the actions of specific events provides a means to investigate an attack, to recognize resource utilization or capacity thresholds, or to simply identify an improperly configured DNS system. If auditing is not comprehensive, it will not be useful for intrusion monitoring, security investigations, and forensic analysis.'\n  desc 'check', 'Review the DNS system to determine if it is configured to log success and failure of the start and stop of the name server service or daemon. If the DNS system is not configured to log these events, this is a finding.'\n  desc 'fix', 'Configure the DNS system to log success and failure of the start and stop of the name service or daemon.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55535r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54909'\n  tag rid: 'SV-69155r1_rule'\n  tag stig_id: 'SRG-APP-000504-DNS-000074'\n  tag gtitle: 'SRG-APP-000504-DNS-000074'\n  tag fix_id: 'F-59771r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000172']\n  tag nist: ['AU-12 c']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69155.rb"},"title":"The DNS implementation must generate audit records for the success and failure of start and stop of the name server service or daemon.","desc":"Auditing and logging are key components of any security architecture. It is essential for security personnel to know what is being performed on the system, where an event occurred, when an event occurred, and by whom the event was triggered, in order to compile an accurate risk assessment. Logging the actions of specific events provides a means to investigate an attack, to recognize resource utilization or capacity thresholds, or to simply identify an improperly configured DNS system. If auditing is not comprehensive, it will not be useful for intrusion monitoring, security investigations, and forensic analysis.","descriptions":{"default":"Auditing and logging are key components of any security architecture. It is essential for security personnel to know what is being performed on the system, where an event occurred, when an event occurred, and by whom the event was triggered, in order to compile an accurate risk assessment. Logging the actions of specific events provides a means to investigate an attack, to recognize resource utilization or capacity thresholds, or to simply identify an improperly configured DNS system. If auditing is not comprehensive, it will not be useful for intrusion monitoring, security investigations, and forensic analysis.","check":"Review the DNS system to determine if it is configured to log success and failure of the start and stop of the name server service or daemon. If the DNS system is not configured to log these events, this is a finding.","fix":"Configure the DNS system to log success and failure of the start and stop of the name service or daemon."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55535r1_chk","severity":"medium","gid":"V-54909","rid":"SV-69155r1_rule","stig_id":"SRG-APP-000504-DNS-000074","gtitle":"SRG-APP-000504-DNS-000074","fix_id":"F-59771r1_fix","documentable":null,"cci":["CCI-000172"],"nist":["AU-12 c"]}},{"id":"SV-69157","code":"control 'SV-69157' do\n  title 'The DNS implementation must generate audit records for the success and failure of all name server events.'\n  desc 'Auditing and logging are key components of any security architecture. It is essential for security personnel to know what is being performed on the system, where an event occurred, when an event occurred, and by whom the event was triggered, in order to compile an accurate risk assessment. Logging the actions of specific events provides a means to investigate an attack, recognize resource utilization or capacity thresholds, or to simply identify an improperly configured DNS system. If auditing is not comprehensive, it will not be useful for intrusion monitoring, security investigations, and forensic analysis.'\n  desc 'check', 'Review the DNS system to determine if it is configured to log, at a minimum, success and failure of zone transfers dynamic updates, and start and stop of the name server service or daemon. \n\nIf the DNS is not configured to log success and failure of zone transfers, zone update notifications, dynamic updates, and start and stop of the name server service or daemon, this is a finding.'\n  desc 'fix', 'Configure the DNS system to log success and failure of zone transfers, zone update notifications, dynamic updates, and start and stop of the name server service or daemon.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55537r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54911'\n  tag rid: 'SV-69157r1_rule'\n  tag stig_id: 'SRG-APP-000504-DNS-000082'\n  tag gtitle: 'SRG-APP-000504-DNS-000082'\n  tag fix_id: 'F-59773r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000172']\n  tag nist: ['AU-12 c']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69157.rb"},"title":"The DNS implementation must generate audit records for the success and failure of all name server events.","desc":"Auditing and logging are key components of any security architecture. It is essential for security personnel to know what is being performed on the system, where an event occurred, when an event occurred, and by whom the event was triggered, in order to compile an accurate risk assessment. Logging the actions of specific events provides a means to investigate an attack, recognize resource utilization or capacity thresholds, or to simply identify an improperly configured DNS system. If auditing is not comprehensive, it will not be useful for intrusion monitoring, security investigations, and forensic analysis.","descriptions":{"default":"Auditing and logging are key components of any security architecture. It is essential for security personnel to know what is being performed on the system, where an event occurred, when an event occurred, and by whom the event was triggered, in order to compile an accurate risk assessment. Logging the actions of specific events provides a means to investigate an attack, recognize resource utilization or capacity thresholds, or to simply identify an improperly configured DNS system. If auditing is not comprehensive, it will not be useful for intrusion monitoring, security investigations, and forensic analysis.","check":"Review the DNS system to determine if it is configured to log, at a minimum, success and failure of zone transfers dynamic updates, and start and stop of the name server service or daemon. \n\nIf the DNS is not configured to log success and failure of zone transfers, zone update notifications, dynamic updates, and start and stop of the name server service or daemon, this is a finding.","fix":"Configure the DNS system to log success and failure of zone transfers, zone update notifications, dynamic updates, and start and stop of the name server service or daemon."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55537r1_chk","severity":"medium","gid":"V-54911","rid":"SV-69157r1_rule","stig_id":"SRG-APP-000504-DNS-000082","gtitle":"SRG-APP-000504-DNS-000082","fix_id":"F-59773r1_fix","documentable":null,"cci":["CCI-000172"],"nist":["AU-12 c"]}},{"id":"SV-69161","code":"control 'SV-69161' do\n  title 'The DNS server must implement NIST FIPS-validated cryptography for provisioning digital signatures, generating cryptographic hashes, and protecting unclassified information requiring confidentiality.'\n  desc 'Use of weak or untested encryption algorithms undermines the purposes of utilizing encryption to protect data. The application must implement cryptographic modules adhering to the higher standards approved by the federal government since this provides assurance they have been tested and validated.'\n  desc 'check', 'Review the DNS implementation and configuration files to ensure FIPS-validated cryptography is being used when provisioning digital signatures, generating cryptographic hashes, and protecting unclassified information that requires confidentiality.\n\nIf the DNS configuration does not use FIPS-validated cryptography, this is a finding.'\n  desc 'fix', 'Configure the DNS implementation to use NIST FIPS-validated cryptography for provisioning digital signatures, generating cryptographic hashes, and protecting unclassified information requiring confidentiality.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55541r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54915'\n  tag rid: 'SV-69161r1_rule'\n  tag stig_id: 'SRG-APP-000514-DNS-000075'\n  tag gtitle: 'SRG-APP-000514-DNS-000075'\n  tag fix_id: 'F-59777r2_fix'\n  tag 'documentable'\n  tag cci: ['CCI-002450']\n  tag nist: ['SC-13 b']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69161.rb"},"title":"The DNS server must implement NIST FIPS-validated cryptography for provisioning digital signatures, generating cryptographic hashes, and protecting unclassified information requiring confidentiality.","desc":"Use of weak or untested encryption algorithms undermines the purposes of utilizing encryption to protect data. The application must implement cryptographic modules adhering to the higher standards approved by the federal government since this provides assurance they have been tested and validated.","descriptions":{"default":"Use of weak or untested encryption algorithms undermines the purposes of utilizing encryption to protect data. The application must implement cryptographic modules adhering to the higher standards approved by the federal government since this provides assurance they have been tested and validated.","check":"Review the DNS implementation and configuration files to ensure FIPS-validated cryptography is being used when provisioning digital signatures, generating cryptographic hashes, and protecting unclassified information that requires confidentiality.\n\nIf the DNS configuration does not use FIPS-validated cryptography, this is a finding.","fix":"Configure the DNS implementation to use NIST FIPS-validated cryptography for provisioning digital signatures, generating cryptographic hashes, and protecting unclassified information requiring confidentiality."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55541r1_chk","severity":"medium","gid":"V-54915","rid":"SV-69161r1_rule","stig_id":"SRG-APP-000514-DNS-000075","gtitle":"SRG-APP-000514-DNS-000075","fix_id":"F-59777r2_fix","documentable":null,"cci":["CCI-002450"],"nist":["SC-13 b"]}},{"id":"SV-69163","code":"control 'SV-69163' do\n  title 'The salt value for zones signed using NSEC3 RRs must be changed every time the zone is completely re-signed.'\n  desc 'NSEC3 RRs contain other options than just the (hashed) next name and RRType bitmap. There are also 2 values associated with the NSEC3 RR: the iterations (number of times each name is hashed) and the salt (string appended to each name before hashing). These values are configurable during signing and are used to increase the work necessary by an attacker. Both values should be changed on a regular basis to maintain protection against zone enumeration.\n\nThe salt value should be changed every time the entire zone is re-signed. The salt value should be a random string with a length small enough to ensure that appending the salt value to the domain name does not result in a FQDN considered too long for the DNS protocol (a single label in the DNS protocol can be 256 octets). A value between 1 - 15 octets would be acceptable for the majority of cases. Note that zones that are dynamically re-signed as needed may not be able to change the salt for NSEC3 RRs as an automatic process. In these cases, the salt rollover procedure is similar to the key algorithm rollover procedure in that the NSEC3 RR chain with the new salt is generated first (ending with the NSEC3PARAM RR) before removing the old (outgoing) NSEC3 chain.'\n  desc 'check', \"Check the DNS configuration files and operational documentation. If the zone's RRs have been signed with NSEC3, the operational procedures should stipulate to change the salt value every time the zone is completely re-signed.\n\nIf the operational procedures do not specify to change the salt value for RRs signed with NSEC3 every time the zone is completely re-signed, this is a finding.\"\n  desc 'fix', 'Include instructions in the DNS operational procedures to change the salt value every time RRs signed by NSEC3 have been re-signed.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55543r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54917'\n  tag rid: 'SV-69163r1_rule'\n  tag stig_id: 'SRG-APP-000516-DNS-000077'\n  tag gtitle: 'SRG-APP-000516-DNS-000077'\n  tag fix_id: 'F-59779r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000366']\n  tag nist: ['CM-6 b']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69163.rb"},"title":"The salt value for zones signed using NSEC3 RRs must be changed every time the zone is completely re-signed.","desc":"NSEC3 RRs contain other options than just the (hashed) next name and RRType bitmap. There are also 2 values associated with the NSEC3 RR: the iterations (number of times each name is hashed) and the salt (string appended to each name before hashing). These values are configurable during signing and are used to increase the work necessary by an attacker. Both values should be changed on a regular basis to maintain protection against zone enumeration.\n\nThe salt value should be changed every time the entire zone is re-signed. The salt value should be a random string with a length small enough to ensure that appending the salt value to the domain name does not result in a FQDN considered too long for the DNS protocol (a single label in the DNS protocol can be 256 octets). A value between 1 - 15 octets would be acceptable for the majority of cases. Note that zones that are dynamically re-signed as needed may not be able to change the salt for NSEC3 RRs as an automatic process. In these cases, the salt rollover procedure is similar to the key algorithm rollover procedure in that the NSEC3 RR chain with the new salt is generated first (ending with the NSEC3PARAM RR) before removing the old (outgoing) NSEC3 chain.","descriptions":{"default":"NSEC3 RRs contain other options than just the (hashed) next name and RRType bitmap. There are also 2 values associated with the NSEC3 RR: the iterations (number of times each name is hashed) and the salt (string appended to each name before hashing). These values are configurable during signing and are used to increase the work necessary by an attacker. Both values should be changed on a regular basis to maintain protection against zone enumeration.\n\nThe salt value should be changed every time the entire zone is re-signed. The salt value should be a random string with a length small enough to ensure that appending the salt value to the domain name does not result in a FQDN considered too long for the DNS protocol (a single label in the DNS protocol can be 256 octets). A value between 1 - 15 octets would be acceptable for the majority of cases. Note that zones that are dynamically re-signed as needed may not be able to change the salt for NSEC3 RRs as an automatic process. In these cases, the salt rollover procedure is similar to the key algorithm rollover procedure in that the NSEC3 RR chain with the new salt is generated first (ending with the NSEC3PARAM RR) before removing the old (outgoing) NSEC3 chain.","check":"Check the DNS configuration files and operational documentation. If the zone's RRs have been signed with NSEC3, the operational procedures should stipulate to change the salt value every time the zone is completely re-signed.\n\nIf the operational procedures do not specify to change the salt value for RRs signed with NSEC3 every time the zone is completely re-signed, this is a finding.","fix":"Include instructions in the DNS operational procedures to change the salt value every time RRs signed by NSEC3 have been re-signed."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55543r1_chk","severity":"medium","gid":"V-54917","rid":"SV-69163r1_rule","stig_id":"SRG-APP-000516-DNS-000077","gtitle":"SRG-APP-000516-DNS-000077","fix_id":"F-59779r1_fix","documentable":null,"cci":["CCI-000366"],"nist":["CM-6 b"]}},{"id":"SV-69165","code":"control 'SV-69165' do\n  title 'The validity period for the RRSIGs covering a zones DNSKEY RRSet must be no less than two days and no more than one week.'\n  desc \"The best way for a zone administrator to minimize the impact of a key compromise is by limiting the validity period of RRSIGs in the zone and in the parent zone. This strategy limits the time during which an attacker can take advantage of a compromised key to forge responses. An attacker that has compromised a ZSK can use that key only during the KSK's signature validity interval. An attacker that has compromised a KSK can use that key for only as long as the signature interval of the RRSIG covering the DS RR in the delegating parent. These validity periods should be short, which will require frequent re-signing.\n\nTo minimize the impact of a compromised ZSK, a zone administrator should set a signature validity period of 1 week for RRSIGs covering the DNSKEY RRSet in the zone (the RRSet that contains the ZSK and KSK for the zone). The DNSKEY RRSet can be re-signed without performing a ZSK rollover, but scheduled ZSK rollover should still be performed at regular intervals.\"\n  desc 'check', \"Review the DNS configuration files. Ensure the validity period for RRSIGs has been explicitly configured and is configured for a range of no less than two days and no more than one week.\n\nIf the validity period for the RRSIGs covering a zone's DNSKEY RRSet is less than two days or greater than one week, this is a finding.\"\n  desc 'fix', \"Configure RRSIGs covering each zone's DNSKEY RRSet to be greater than two days and less than one week.\"\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55545r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54919'\n  tag rid: 'SV-69165r1_rule'\n  tag stig_id: 'SRG-APP-000516-DNS-000078'\n  tag gtitle: 'SRG-APP-000516-DNS-000078'\n  tag fix_id: 'F-59781r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000366']\n  tag nist: ['CM-6 b']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69165.rb"},"title":"The validity period for the RRSIGs covering a zones DNSKEY RRSet must be no less than two days and no more than one week.","desc":"The best way for a zone administrator to minimize the impact of a key compromise is by limiting the validity period of RRSIGs in the zone and in the parent zone. This strategy limits the time during which an attacker can take advantage of a compromised key to forge responses. An attacker that has compromised a ZSK can use that key only during the KSK's signature validity interval. An attacker that has compromised a KSK can use that key for only as long as the signature interval of the RRSIG covering the DS RR in the delegating parent. These validity periods should be short, which will require frequent re-signing.\n\nTo minimize the impact of a compromised ZSK, a zone administrator should set a signature validity period of 1 week for RRSIGs covering the DNSKEY RRSet in the zone (the RRSet that contains the ZSK and KSK for the zone). The DNSKEY RRSet can be re-signed without performing a ZSK rollover, but scheduled ZSK rollover should still be performed at regular intervals.","descriptions":{"default":"The best way for a zone administrator to minimize the impact of a key compromise is by limiting the validity period of RRSIGs in the zone and in the parent zone. This strategy limits the time during which an attacker can take advantage of a compromised key to forge responses. An attacker that has compromised a ZSK can use that key only during the KSK's signature validity interval. An attacker that has compromised a KSK can use that key for only as long as the signature interval of the RRSIG covering the DS RR in the delegating parent. These validity periods should be short, which will require frequent re-signing.\n\nTo minimize the impact of a compromised ZSK, a zone administrator should set a signature validity period of 1 week for RRSIGs covering the DNSKEY RRSet in the zone (the RRSet that contains the ZSK and KSK for the zone). The DNSKEY RRSet can be re-signed without performing a ZSK rollover, but scheduled ZSK rollover should still be performed at regular intervals.","check":"Review the DNS configuration files. Ensure the validity period for RRSIGs has been explicitly configured and is configured for a range of no less than two days and no more than one week.\n\nIf the validity period for the RRSIGs covering a zone's DNSKEY RRSet is less than two days or greater than one week, this is a finding.","fix":"Configure RRSIGs covering each zone's DNSKEY RRSet to be greater than two days and less than one week."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55545r1_chk","severity":"medium","gid":"V-54919","rid":"SV-69165r1_rule","stig_id":"SRG-APP-000516-DNS-000078","gtitle":"SRG-APP-000516-DNS-000078","fix_id":"F-59781r1_fix","documentable":null,"cci":["CCI-000366"],"nist":["CM-6 b"]}},{"id":"SV-69167","code":"control 'SV-69167' do\n  title 'NSEC3 must be used for all internal DNS zones.'\n  desc %q(To ensure that RRs associated with a query are really missing in a zone file and have not been removed in transit, the DNSSEC mechanism provides a means for authenticating the nonexistence of an RR. It generates a special RR called an NSEC (or NSEC3) RR that lists the RRTypes associated with an owner name as well as the next name in the zone file. It sends this special RR, along with its signatures, to the resolving name server. By verifying the signature, a DNSSEC-aware resolving name server can determine which authoritative owner name exists in a zone and which authoritative RRTypes exist at those owner names.\n\nIETF's design criteria consider DNS data to be public. Confidentiality is not one of the security goals of DNSSEC. DNSSEC is not designed to directly protect against denial-of-service threats but does so indirectly by providing message integrity and source authentication. An artifact of how DNSSEC performs negative responses allows a client to map all the names in a zone (zone walking). \n\nA zone which contains zone data that the administrator does not want to be made public should use the NSEC3 RR option for providing authenticated denial of existence.\n\n\n\nIf DNSSEC is enabled for a server, the ability to verify a particular server which may attempt to update the DNS server actually exists. This is done through the use of NSEC3 records to provide an \"authenticated denial of existence\" for specific systems whose addresses indicate that they lie within a particular zone.)\n  desc 'check', \"Review the zone file's configuration for internal zones and confirm the NSEC3 RR option is used to provide authenticated denial of existence.\n\nIf the NSEC3 RR option is not used for internal zones, this is a finding.\"\n  desc 'fix', 'Configure all internal zones to use the NSEC3 RR option for authenticated denial of existence.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55547r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54921'\n  tag rid: 'SV-69167r1_rule'\n  tag stig_id: 'SRG-APP-000516-DNS-000084'\n  tag gtitle: 'SRG-APP-000516-DNS-000084'\n  tag fix_id: 'F-59783r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000366']\n  tag nist: ['CM-6 b']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69167.rb"},"title":"NSEC3 must be used for all internal DNS zones.","desc":"To ensure that RRs associated with a query are really missing in a zone file and have not been removed in transit, the DNSSEC mechanism provides a means for authenticating the nonexistence of an RR. It generates a special RR called an NSEC (or NSEC3) RR that lists the RRTypes associated with an owner name as well as the next name in the zone file. It sends this special RR, along with its signatures, to the resolving name server. By verifying the signature, a DNSSEC-aware resolving name server can determine which authoritative owner name exists in a zone and which authoritative RRTypes exist at those owner names.\n\nIETF's design criteria consider DNS data to be public. Confidentiality is not one of the security goals of DNSSEC. DNSSEC is not designed to directly protect against denial-of-service threats but does so indirectly by providing message integrity and source authentication. An artifact of how DNSSEC performs negative responses allows a client to map all the names in a zone (zone walking). \n\nA zone which contains zone data that the administrator does not want to be made public should use the NSEC3 RR option for providing authenticated denial of existence.\n\n\n\nIf DNSSEC is enabled for a server, the ability to verify a particular server which may attempt to update the DNS server actually exists. This is done through the use of NSEC3 records to provide an \"authenticated denial of existence\" for specific systems whose addresses indicate that they lie within a particular zone.","descriptions":{"default":"To ensure that RRs associated with a query are really missing in a zone file and have not been removed in transit, the DNSSEC mechanism provides a means for authenticating the nonexistence of an RR. It generates a special RR called an NSEC (or NSEC3) RR that lists the RRTypes associated with an owner name as well as the next name in the zone file. It sends this special RR, along with its signatures, to the resolving name server. By verifying the signature, a DNSSEC-aware resolving name server can determine which authoritative owner name exists in a zone and which authoritative RRTypes exist at those owner names.\n\nIETF's design criteria consider DNS data to be public. Confidentiality is not one of the security goals of DNSSEC. DNSSEC is not designed to directly protect against denial-of-service threats but does so indirectly by providing message integrity and source authentication. An artifact of how DNSSEC performs negative responses allows a client to map all the names in a zone (zone walking). \n\nA zone which contains zone data that the administrator does not want to be made public should use the NSEC3 RR option for providing authenticated denial of existence.\n\n\n\nIf DNSSEC is enabled for a server, the ability to verify a particular server which may attempt to update the DNS server actually exists. This is done through the use of NSEC3 records to provide an \"authenticated denial of existence\" for specific systems whose addresses indicate that they lie within a particular zone.","check":"Review the zone file's configuration for internal zones and confirm the NSEC3 RR option is used to provide authenticated denial of existence.\n\nIf the NSEC3 RR option is not used for internal zones, this is a finding.","fix":"Configure all internal zones to use the NSEC3 RR option for authenticated denial of existence."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55547r1_chk","severity":"medium","gid":"V-54921","rid":"SV-69167r1_rule","stig_id":"SRG-APP-000516-DNS-000084","gtitle":"SRG-APP-000516-DNS-000084","fix_id":"F-59783r1_fix","documentable":null,"cci":["CCI-000366"],"nist":["CM-6 b"]}},{"id":"SV-69169","code":"control 'SV-69169' do\n  title 'The DNS implementation must ensure each NS record in a zone file points to an active name server authoritative for the domain specified in that record.'\n  desc \"Poorly constructed NS records pose a security risk because they create conditions under which an adversary might be able to provide the missing authoritative name services that are improperly specified in the zone file. The adversary could issue bogus responses to queries that clients would accept because they learned of the adversary's name server from a valid authoritative name server, one that need not be compromised for this attack to be successful. The list of slave servers must remain current within 72 hours of any changes to the zone architecture that would affect the list of slaves. If a slave server has been retired or is not operational but remains on the list, then an adversary might have a greater opportunity to impersonate that slave without detection, rather than if the slave were actually online. For example, the adversary may be able to spoof the retired slave's IP address without an IP address conflict, which would not be likely to occur if the true slave were active.\"\n  desc 'check', \"Review the zone file's configuration and confirm that each NS record points to an active name server authoritative for the domain. If this is not the case, this is a finding.\"\n  desc 'fix', 'Remove any NS record in a zone file that does not point to an active name server authoritative for the domain specified in that record.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55549r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54923'\n  tag rid: 'SV-69169r1_rule'\n  tag stig_id: 'SRG-APP-000516-DNS-000085'\n  tag gtitle: 'SRG-APP-000516-DNS-000085'\n  tag fix_id: 'F-59785r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000366']\n  tag nist: ['CM-6 b']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69169.rb"},"title":"The DNS implementation must ensure each NS record in a zone file points to an active name server authoritative for the domain specified in that record.","desc":"Poorly constructed NS records pose a security risk because they create conditions under which an adversary might be able to provide the missing authoritative name services that are improperly specified in the zone file. The adversary could issue bogus responses to queries that clients would accept because they learned of the adversary's name server from a valid authoritative name server, one that need not be compromised for this attack to be successful. The list of slave servers must remain current within 72 hours of any changes to the zone architecture that would affect the list of slaves. If a slave server has been retired or is not operational but remains on the list, then an adversary might have a greater opportunity to impersonate that slave without detection, rather than if the slave were actually online. For example, the adversary may be able to spoof the retired slave's IP address without an IP address conflict, which would not be likely to occur if the true slave were active.","descriptions":{"default":"Poorly constructed NS records pose a security risk because they create conditions under which an adversary might be able to provide the missing authoritative name services that are improperly specified in the zone file. The adversary could issue bogus responses to queries that clients would accept because they learned of the adversary's name server from a valid authoritative name server, one that need not be compromised for this attack to be successful. The list of slave servers must remain current within 72 hours of any changes to the zone architecture that would affect the list of slaves. If a slave server has been retired or is not operational but remains on the list, then an adversary might have a greater opportunity to impersonate that slave without detection, rather than if the slave were actually online. For example, the adversary may be able to spoof the retired slave's IP address without an IP address conflict, which would not be likely to occur if the true slave were active.","check":"Review the zone file's configuration and confirm that each NS record points to an active name server authoritative for the domain. If this is not the case, this is a finding.","fix":"Remove any NS record in a zone file that does not point to an active name server authoritative for the domain specified in that record."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55549r1_chk","severity":"medium","gid":"V-54923","rid":"SV-69169r1_rule","stig_id":"SRG-APP-000516-DNS-000085","gtitle":"SRG-APP-000516-DNS-000085","fix_id":"F-59785r1_fix","documentable":null,"cci":["CCI-000366"],"nist":["CM-6 b"]}},{"id":"SV-69171","code":"control 'SV-69171' do\n  title 'The two files generated by the dnssec-keygen program must be made accessible only to the server administrator account, or deleted, after they have been copied to the key file in the name server.'\n  desc 'To enable zone transfer (requests and responses) through authenticated messages, it is necessary to generate a key for every pair of name servers. The key also can be used for securing other transactions, such as dynamic updates, DNS queries, and responses. The binary key string that is generated by most key generation utilities used with DNSSEC is Base64-encoded. ATSIG is a string used to generate the message authentication hash stored in a TSIG RR and used to authenticate an entire DNS message.'\n  desc 'check', 'Review the DNS implementation and documentation and confirm the permissions on the key files, which were generated by the dnssec-keygen program and copied to the name server, are only accessible to the server administrator or have been deleted. \n\nVerify all paper copies of the key files have been destroyed.\n\nIf the key files have been deleted and all paper copies have been destroyed, this is not a finding.\nIf the key files have been deleted but the paper copies have not been destroyed, this is a finding.\nIf the key files still exist, and the permissions on the key files have not been configured to only allow the server administrator account access, this is a finding.'\n  desc 'fix', 'Configure permissions on the key files to only give access to the server administrator, or delete the key files altogether.\n\nDestroy all paper copies of the key files.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55551r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54925'\n  tag rid: 'SV-69171r1_rule'\n  tag stig_id: 'SRG-APP-000516-DNS-000086'\n  tag gtitle: 'SRG-APP-000516-DNS-000086'\n  tag fix_id: 'F-59787r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000366']\n  tag nist: ['CM-6 b']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69171.rb"},"title":"The two files generated by the dnssec-keygen program must be made accessible only to the server administrator account, or deleted, after they have been copied to the key file in the name server.","desc":"To enable zone transfer (requests and responses) through authenticated messages, it is necessary to generate a key for every pair of name servers. The key also can be used for securing other transactions, such as dynamic updates, DNS queries, and responses. The binary key string that is generated by most key generation utilities used with DNSSEC is Base64-encoded. ATSIG is a string used to generate the message authentication hash stored in a TSIG RR and used to authenticate an entire DNS message.","descriptions":{"default":"To enable zone transfer (requests and responses) through authenticated messages, it is necessary to generate a key for every pair of name servers. The key also can be used for securing other transactions, such as dynamic updates, DNS queries, and responses. The binary key string that is generated by most key generation utilities used with DNSSEC is Base64-encoded. ATSIG is a string used to generate the message authentication hash stored in a TSIG RR and used to authenticate an entire DNS message.","check":"Review the DNS implementation and documentation and confirm the permissions on the key files, which were generated by the dnssec-keygen program and copied to the name server, are only accessible to the server administrator or have been deleted. \n\nVerify all paper copies of the key files have been destroyed.\n\nIf the key files have been deleted and all paper copies have been destroyed, this is not a finding.\nIf the key files have been deleted but the paper copies have not been destroyed, this is a finding.\nIf the key files still exist, and the permissions on the key files have not been configured to only allow the server administrator account access, this is a finding.","fix":"Configure permissions on the key files to only give access to the server administrator, or delete the key files altogether.\n\nDestroy all paper copies of the key files."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55551r1_chk","severity":"medium","gid":"V-54925","rid":"SV-69171r1_rule","stig_id":"SRG-APP-000516-DNS-000086","gtitle":"SRG-APP-000516-DNS-000086","fix_id":"F-59787r1_fix","documentable":null,"cci":["CCI-000366"],"nist":["CM-6 b"]}},{"id":"SV-69173","code":"control 'SV-69173' do\n  title 'All authoritative name servers for a zone must be located on different network segments.'\n  desc 'Most enterprises have an authoritative primary server and a host of authoritative secondary name servers. It is essential that these authoritative name servers for an enterprise be located on different network segments. This dispersion ensures the availability of an authoritative name server not only in situations in which a particular router or switch fails but also during events involving an attack on an entire network segment.\n\nA network administrator may choose to use a \"hidden\" master authoritative server and only have secondary servers visible on the network. A hidden master authoritative server is an authoritative DNS server whose IP address does not appear in the name server set for a zone. If the master authoritative name server is \"hidden\", a secondary authoritative name server may reside on the same network as the hidden master.'\n  desc 'check', 'Review the DNS configuration files to determine all of the NS records for each zone. Based upon the NS records for each zone, determine location of each of the name servers. Verify all authoritative name servers are located on different network segments.\n\nIf two authoritative name servers are found on the same network segment, and one of those two is hidden, this is not a finding.\n\nIf any authoritative name servers are located on the same network segment as another authoritative name server, this is a finding.'\n  desc 'fix', 'Locate all visible (non-hidden) name servers to be on different network segments.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55553r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54927'\n  tag rid: 'SV-69173r1_rule'\n  tag stig_id: 'SRG-APP-000516-DNS-000087'\n  tag gtitle: 'SRG-APP-000516-DNS-000087'\n  tag fix_id: 'F-59789r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000366']\n  tag nist: ['CM-6 b']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69173.rb"},"title":"All authoritative name servers for a zone must be located on different network segments.","desc":"Most enterprises have an authoritative primary server and a host of authoritative secondary name servers. It is essential that these authoritative name servers for an enterprise be located on different network segments. This dispersion ensures the availability of an authoritative name server not only in situations in which a particular router or switch fails but also during events involving an attack on an entire network segment.\n\nA network administrator may choose to use a \"hidden\" master authoritative server and only have secondary servers visible on the network. A hidden master authoritative server is an authoritative DNS server whose IP address does not appear in the name server set for a zone. If the master authoritative name server is \"hidden\", a secondary authoritative name server may reside on the same network as the hidden master.","descriptions":{"default":"Most enterprises have an authoritative primary server and a host of authoritative secondary name servers. It is essential that these authoritative name servers for an enterprise be located on different network segments. This dispersion ensures the availability of an authoritative name server not only in situations in which a particular router or switch fails but also during events involving an attack on an entire network segment.\n\nA network administrator may choose to use a \"hidden\" master authoritative server and only have secondary servers visible on the network. A hidden master authoritative server is an authoritative DNS server whose IP address does not appear in the name server set for a zone. If the master authoritative name server is \"hidden\", a secondary authoritative name server may reside on the same network as the hidden master.","check":"Review the DNS configuration files to determine all of the NS records for each zone. Based upon the NS records for each zone, determine location of each of the name servers. Verify all authoritative name servers are located on different network segments.\n\nIf two authoritative name servers are found on the same network segment, and one of those two is hidden, this is not a finding.\n\nIf any authoritative name servers are located on the same network segment as another authoritative name server, this is a finding.","fix":"Locate all visible (non-hidden) name servers to be on different network segments."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55553r1_chk","severity":"medium","gid":"V-54927","rid":"SV-69173r1_rule","stig_id":"SRG-APP-000516-DNS-000087","gtitle":"SRG-APP-000516-DNS-000087","fix_id":"F-59789r1_fix","documentable":null,"cci":["CCI-000366"],"nist":["CM-6 b"]}},{"id":"SV-69175","code":"control 'SV-69175' do\n  title 'All authoritative name servers for a zone must have the same version of zone information.'\n  desc 'The only protection approach for content control of DNS zone file is the use of a zone file integrity checker. The effectiveness of integrity checking using a zone file integrity checker depends upon the database of constraints built into the checker. The deployment process consists of developing these constraints with the right logic, and the only determinant of the truth value of these logical predicates is the parameter values for certain key fields in the format of various RRTypes.\n\nThe serial number in the SOA RDATA is used to indicate to secondary name servers that a change to the zone has occurred and a zone transfer should be performed. It should always be increased whenever a change is made to the zone data. DNS NOTIFY must be enabled on the master authoritative name server.'\n  desc 'check', 'Review the DNS configuration for each zone hosted by the authoritative name server. Determine all authoritative name servers for each zone. Review the serial number in the SOA RDATA, on each authoritative name server for each zone, and ensure the serial number is the same on each secondary name server as on the primary name server.\n\nIf any secondary name server for a zone has a serial number in the SOA RDATA that is different from the primary name server, this is a finding.'\n  desc 'fix', 'Troubleshoot and fix any problems with zone transfers completing successfully between the primary name server and all secondary name servers.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55555r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54929'\n  tag rid: 'SV-69175r1_rule'\n  tag stig_id: 'SRG-APP-000516-DNS-000088'\n  tag gtitle: 'SRG-APP-000516-DNS-000088'\n  tag fix_id: 'F-59791r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000366']\n  tag nist: ['CM-6 b']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69175.rb"},"title":"All authoritative name servers for a zone must have the same version of zone information.","desc":"The only protection approach for content control of DNS zone file is the use of a zone file integrity checker. The effectiveness of integrity checking using a zone file integrity checker depends upon the database of constraints built into the checker. The deployment process consists of developing these constraints with the right logic, and the only determinant of the truth value of these logical predicates is the parameter values for certain key fields in the format of various RRTypes.\n\nThe serial number in the SOA RDATA is used to indicate to secondary name servers that a change to the zone has occurred and a zone transfer should be performed. It should always be increased whenever a change is made to the zone data. DNS NOTIFY must be enabled on the master authoritative name server.","descriptions":{"default":"The only protection approach for content control of DNS zone file is the use of a zone file integrity checker. The effectiveness of integrity checking using a zone file integrity checker depends upon the database of constraints built into the checker. The deployment process consists of developing these constraints with the right logic, and the only determinant of the truth value of these logical predicates is the parameter values for certain key fields in the format of various RRTypes.\n\nThe serial number in the SOA RDATA is used to indicate to secondary name servers that a change to the zone has occurred and a zone transfer should be performed. It should always be increased whenever a change is made to the zone data. DNS NOTIFY must be enabled on the master authoritative name server.","check":"Review the DNS configuration for each zone hosted by the authoritative name server. Determine all authoritative name servers for each zone. Review the serial number in the SOA RDATA, on each authoritative name server for each zone, and ensure the serial number is the same on each secondary name server as on the primary name server.\n\nIf any secondary name server for a zone has a serial number in the SOA RDATA that is different from the primary name server, this is a finding.","fix":"Troubleshoot and fix any problems with zone transfers completing successfully between the primary name server and all secondary name servers."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55555r1_chk","severity":"medium","gid":"V-54929","rid":"SV-69175r1_rule","stig_id":"SRG-APP-000516-DNS-000088","gtitle":"SRG-APP-000516-DNS-000088","fix_id":"F-59791r1_fix","documentable":null,"cci":["CCI-000366"],"nist":["CM-6 b"]}},{"id":"SV-69177","code":"control 'SV-69177' do\n  title 'An authoritative name server must be configured to enable DNSSEC Resource Records.'\n  desc \"The specification for a digital signature mechanism in the context of the DNS infrastructure is in IETF's DNSSEC standard.  In DNSSEC, trust in the public key (for signature verification) of the source is established not by going to a third party or a chain of third parties (as in public key infrastructure [PKI] chaining), but by starting from a trusted zone (such as the root zone) and establishing the chain of trust down to the current source of response through successive verifications of signature of the public key of a child by its parent. The public key of the trusted zone is called the trust anchor. After authenticating the source, the next process DNSSEC calls for is to authenticate the response. DNSSEC mechanisms involve two main processes: sign and serve, and verify signature.\n\nBefore a DNSSEC-signed zone can be deployed, a name server must be configured to enable DNSSEC processing.\"\n  desc 'check', 'Check the DNS configuration to ensure DNSSEC Resource Records has been enabled.\n\nIf the name server is not configured with DNSSEC enabled, this is a finding.'\n  desc 'fix', 'Configure the name server with DNSSEC enabled.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55557r2_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54931'\n  tag rid: 'SV-69177r1_rule'\n  tag stig_id: 'SRG-APP-000516-DNS-000089'\n  tag gtitle: 'SRG-APP-000516-DNS-000089'\n  tag fix_id: 'F-59793r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000366']\n  tag nist: ['CM-6 b']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69177.rb"},"title":"An authoritative name server must be configured to enable DNSSEC Resource Records.","desc":"The specification for a digital signature mechanism in the context of the DNS infrastructure is in IETF's DNSSEC standard.  In DNSSEC, trust in the public key (for signature verification) of the source is established not by going to a third party or a chain of third parties (as in public key infrastructure [PKI] chaining), but by starting from a trusted zone (such as the root zone) and establishing the chain of trust down to the current source of response through successive verifications of signature of the public key of a child by its parent. The public key of the trusted zone is called the trust anchor. After authenticating the source, the next process DNSSEC calls for is to authenticate the response. DNSSEC mechanisms involve two main processes: sign and serve, and verify signature.\n\nBefore a DNSSEC-signed zone can be deployed, a name server must be configured to enable DNSSEC processing.","descriptions":{"default":"The specification for a digital signature mechanism in the context of the DNS infrastructure is in IETF's DNSSEC standard.  In DNSSEC, trust in the public key (for signature verification) of the source is established not by going to a third party or a chain of third parties (as in public key infrastructure [PKI] chaining), but by starting from a trusted zone (such as the root zone) and establishing the chain of trust down to the current source of response through successive verifications of signature of the public key of a child by its parent. The public key of the trusted zone is called the trust anchor. After authenticating the source, the next process DNSSEC calls for is to authenticate the response. DNSSEC mechanisms involve two main processes: sign and serve, and verify signature.\n\nBefore a DNSSEC-signed zone can be deployed, a name server must be configured to enable DNSSEC processing.","check":"Check the DNS configuration to ensure DNSSEC Resource Records has been enabled.\n\nIf the name server is not configured with DNSSEC enabled, this is a finding.","fix":"Configure the name server with DNSSEC enabled."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55557r2_chk","severity":"medium","gid":"V-54931","rid":"SV-69177r1_rule","stig_id":"SRG-APP-000516-DNS-000089","gtitle":"SRG-APP-000516-DNS-000089","fix_id":"F-59793r1_fix","documentable":null,"cci":["CCI-000366"],"nist":["CM-6 b"]}},{"id":"SV-69179","code":"control 'SV-69179' do\n  title 'For zones split between the external and internal sides of a network, the RRs for the external hosts must be separate from the RRs for the internal hosts.'\n  desc 'Authoritative name servers for an enterprise may be configured to receive requests from both external and internal clients. \n\nExternal clients need to receive RRs that pertain only to public services (public Web server, mail server, etc.) \n\nInternal clients need to receive RRs pertaining to public services as well as internal hosts. \n\nThe zone information that serves the RRs on both the inside and the outside of a firewall should be split into different physical files for these two types of clients (one file for external clients and one file for internal clients).'\n  desc 'check', \"Review the Resource Records (RRs) of each zone which is split between external and internal networks. For those internal hosts which are intended to be accessed by both internal and external users, a different RR should be listed on each of the internal and external name servers, with IP addresses reflective of the external or internal network. Traffic destined for those internal hosts will resolve to the IP address in the external name server and then should be NAT'd through the perimeter firewall.\n\nVerify the RRs in the internal name server are not also listed in the external name server.\nIf there are RRs in the internal name server for hosts also listed in the external name server, and the IP to which it resolves is on the external network, this is a finding.\n\nVerify the RRs in the external name server are not also listed in the internal name server.\nIf there are RRs in the external name server for hosts also listed in the internal name server, and the IP to which it resolves is on the internal network, this is a finding.\"\n  desc 'fix', 'Remove any RRs listed in the internal name server configuration which resolve for external hosts and remove any RRs listed in the external name server configuration which resolve to internal hosts.\n\nFor hosts intended to be accessed by both internal and external clients, configure unique IP addresses in each of the internal and external name servers, respective to their location. The perimeter firewall, or other routing device, should handle the Network Address Translation to the true IP address of the destination.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55559r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54933'\n  tag rid: 'SV-69179r1_rule'\n  tag stig_id: 'SRG-APP-000516-DNS-000091'\n  tag gtitle: 'SRG-APP-000516-DNS-000091'\n  tag fix_id: 'F-59795r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000366']\n  tag nist: ['CM-6 b']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69179.rb"},"title":"For zones split between the external and internal sides of a network, the RRs for the external hosts must be separate from the RRs for the internal hosts.","desc":"Authoritative name servers for an enterprise may be configured to receive requests from both external and internal clients. \n\nExternal clients need to receive RRs that pertain only to public services (public Web server, mail server, etc.) \n\nInternal clients need to receive RRs pertaining to public services as well as internal hosts. \n\nThe zone information that serves the RRs on both the inside and the outside of a firewall should be split into different physical files for these two types of clients (one file for external clients and one file for internal clients).","descriptions":{"default":"Authoritative name servers for an enterprise may be configured to receive requests from both external and internal clients. \n\nExternal clients need to receive RRs that pertain only to public services (public Web server, mail server, etc.) \n\nInternal clients need to receive RRs pertaining to public services as well as internal hosts. \n\nThe zone information that serves the RRs on both the inside and the outside of a firewall should be split into different physical files for these two types of clients (one file for external clients and one file for internal clients).","check":"Review the Resource Records (RRs) of each zone which is split between external and internal networks. For those internal hosts which are intended to be accessed by both internal and external users, a different RR should be listed on each of the internal and external name servers, with IP addresses reflective of the external or internal network. Traffic destined for those internal hosts will resolve to the IP address in the external name server and then should be NAT'd through the perimeter firewall.\n\nVerify the RRs in the internal name server are not also listed in the external name server.\nIf there are RRs in the internal name server for hosts also listed in the external name server, and the IP to which it resolves is on the external network, this is a finding.\n\nVerify the RRs in the external name server are not also listed in the internal name server.\nIf there are RRs in the external name server for hosts also listed in the internal name server, and the IP to which it resolves is on the internal network, this is a finding.","fix":"Remove any RRs listed in the internal name server configuration which resolve for external hosts and remove any RRs listed in the external name server configuration which resolve to internal hosts.\n\nFor hosts intended to be accessed by both internal and external clients, configure unique IP addresses in each of the internal and external name servers, respective to their location. The perimeter firewall, or other routing device, should handle the Network Address Translation to the true IP address of the destination."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55559r1_chk","severity":"medium","gid":"V-54933","rid":"SV-69179r1_rule","stig_id":"SRG-APP-000516-DNS-000091","gtitle":"SRG-APP-000516-DNS-000091","fix_id":"F-59795r1_fix","documentable":null,"cci":["CCI-000366"],"nist":["CM-6 b"]}},{"id":"SV-69181","code":"control 'SV-69181' do\n  title 'In a split DNS configuration, where separate name servers are used between the external and internal networks, the external name server must be configured to not be reachable from inside resolvers.'\n  desc 'Instead of having the same set of authoritative name servers serve different types of clients, an enterprise could have two different sets of authoritative name servers. \n\nOne set, called external name servers, can be located within a DMZ; these would be the only name servers that are accessible to external clients and would serve RRs pertaining to hosts with public services (Web servers that serve external Web pages or provide B2C services, mail servers, etc.) \n\nThe other set, called internal name servers, is to be located within the firewall and should be configured so they are not reachable from outside and hence provide naming services exclusively to internal clients.'\n  desc 'check', 'Review the DNS implementation and ensure the external DNS name servers are not reachable by internal resolvers.\n\nIf the external DNS name servers can be reached by internal resolvers, this is a finding.'\n  desc 'fix', 'Configure the DNS configuration on internal name servers to only accept queries from internal resolvers.\nConfigure DNS configuration on external name servers to only accept queries from external resolvers. \nConfigure network perimeter devices to block query resolution traffic from external resolvers to internal name servers and from internal resolvers to external name servers.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55561r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54935'\n  tag rid: 'SV-69181r1_rule'\n  tag stig_id: 'SRG-APP-000516-DNS-000092'\n  tag gtitle: 'SRG-APP-000516-DNS-000092'\n  tag fix_id: 'F-59797r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000366']\n  tag nist: ['CM-6 b']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69181.rb"},"title":"In a split DNS configuration, where separate name servers are used between the external and internal networks, the external name server must be configured to not be reachable from inside resolvers.","desc":"Instead of having the same set of authoritative name servers serve different types of clients, an enterprise could have two different sets of authoritative name servers. \n\nOne set, called external name servers, can be located within a DMZ; these would be the only name servers that are accessible to external clients and would serve RRs pertaining to hosts with public services (Web servers that serve external Web pages or provide B2C services, mail servers, etc.) \n\nThe other set, called internal name servers, is to be located within the firewall and should be configured so they are not reachable from outside and hence provide naming services exclusively to internal clients.","descriptions":{"default":"Instead of having the same set of authoritative name servers serve different types of clients, an enterprise could have two different sets of authoritative name servers. \n\nOne set, called external name servers, can be located within a DMZ; these would be the only name servers that are accessible to external clients and would serve RRs pertaining to hosts with public services (Web servers that serve external Web pages or provide B2C services, mail servers, etc.) \n\nThe other set, called internal name servers, is to be located within the firewall and should be configured so they are not reachable from outside and hence provide naming services exclusively to internal clients.","check":"Review the DNS implementation and ensure the external DNS name servers are not reachable by internal resolvers.\n\nIf the external DNS name servers can be reached by internal resolvers, this is a finding.","fix":"Configure the DNS configuration on internal name servers to only accept queries from internal resolvers.\nConfigure DNS configuration on external name servers to only accept queries from external resolvers. \nConfigure network perimeter devices to block query resolution traffic from external resolvers to internal name servers and from internal resolvers to external name servers."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55561r1_chk","severity":"medium","gid":"V-54935","rid":"SV-69181r1_rule","stig_id":"SRG-APP-000516-DNS-000092","gtitle":"SRG-APP-000516-DNS-000092","fix_id":"F-59797r1_fix","documentable":null,"cci":["CCI-000366"],"nist":["CM-6 b"]}},{"id":"SV-69183","code":"control 'SV-69183' do\n  title 'In a split DNS configuration, where separate name servers are used between the external and internal networks, the internal name server must be configured to not be reachable from outside resolvers.'\n  desc 'Instead of having the same set of authoritative name servers serve different types of clients, an enterprise could have two different sets of authoritative name servers. \n\nOne set, called external name servers, can be located within a DMZ; these would be the only name servers that are accessible to external clients and would serve RRs pertaining to hosts with public services (Web servers that serve external Web pages or provide B2C services, mail servers, etc.) \n\nThe other set, called internal name servers, is to be located within the firewall and should be configured so they are not reachable from outside and hence provide naming services exclusively to internal clients.'\n  desc 'check', 'Review the DNS implementation and ensure internal DNS name servers are not reachable by external resolvers.\n\nIf the internal DNS name servers can be reached by external resolvers, this is a finding.'\n  desc 'fix', 'Configure the DNS configuration on internal name servers to only accept queries from internal resolvers.\nConfigure DNS configuration on external name servers to only accept queries from external resolvers. \nConfigure network perimeter devices to block query resolution traffic from external resolvers to internal name servers and from internal resolvers to external name servers.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55563r2_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54937'\n  tag rid: 'SV-69183r1_rule'\n  tag stig_id: 'SRG-APP-000516-DNS-000093'\n  tag gtitle: 'SRG-APP-000516-DNS-000093'\n  tag fix_id: 'F-59799r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000366']\n  tag nist: ['CM-6 b']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69183.rb"},"title":"In a split DNS configuration, where separate name servers are used between the external and internal networks, the internal name server must be configured to not be reachable from outside resolvers.","desc":"Instead of having the same set of authoritative name servers serve different types of clients, an enterprise could have two different sets of authoritative name servers. \n\nOne set, called external name servers, can be located within a DMZ; these would be the only name servers that are accessible to external clients and would serve RRs pertaining to hosts with public services (Web servers that serve external Web pages or provide B2C services, mail servers, etc.) \n\nThe other set, called internal name servers, is to be located within the firewall and should be configured so they are not reachable from outside and hence provide naming services exclusively to internal clients.","descriptions":{"default":"Instead of having the same set of authoritative name servers serve different types of clients, an enterprise could have two different sets of authoritative name servers. \n\nOne set, called external name servers, can be located within a DMZ; these would be the only name servers that are accessible to external clients and would serve RRs pertaining to hosts with public services (Web servers that serve external Web pages or provide B2C services, mail servers, etc.) \n\nThe other set, called internal name servers, is to be located within the firewall and should be configured so they are not reachable from outside and hence provide naming services exclusively to internal clients.","check":"Review the DNS implementation and ensure internal DNS name servers are not reachable by external resolvers.\n\nIf the internal DNS name servers can be reached by external resolvers, this is a finding.","fix":"Configure the DNS configuration on internal name servers to only accept queries from internal resolvers.\nConfigure DNS configuration on external name servers to only accept queries from external resolvers. \nConfigure network perimeter devices to block query resolution traffic from external resolvers to internal name servers and from internal resolvers to external name servers."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55563r2_chk","severity":"medium","gid":"V-54937","rid":"SV-69183r1_rule","stig_id":"SRG-APP-000516-DNS-000093","gtitle":"SRG-APP-000516-DNS-000093","fix_id":"F-59799r1_fix","documentable":null,"cci":["CCI-000366"],"nist":["CM-6 b"]}},{"id":"SV-69185","code":"control 'SV-69185' do\n  title 'Primary authoritative name servers must be configured to only receive zone transfer requests from specified secondary name servers.'\n  desc 'Authoritative name servers (especially primary name servers) should be configured with an allow-transfer access control substatement designating the list of hosts from which zone transfer requests can be accepted. These restrictions address the denial-of-service threat and potential exploits from unrestricted dissemination of information about internal resources. Based on the need-to-know, the only name servers that need to refresh their zone files periodically are the secondary name servers. Zone transfer from primary name servers should be restricted to secondary name servers. The zone transfer should be completely disabled in the secondary name servers. The address match list argument for the allow-transfer substatement should consist of IP addresses of secondary name servers and stealth secondary name servers.'\n  desc 'check', 'Review the DNS configuration files. Verify a configuration is in place to limit the secondary name servers from which an authoritative name server receives zone transfer requests.\n\nIf a configuration is not in place to limit the secondary name servers from which an authoritative name server receives zone transfer requests, this is a finding.'\n  desc 'fix', 'Configure the authoritative name server to specify which secondary name servers from which it will receive zone transfer requests.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55565r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54939'\n  tag rid: 'SV-69185r1_rule'\n  tag stig_id: 'SRG-APP-000516-DNS-000095'\n  tag gtitle: 'SRG-APP-000516-DNS-000095'\n  tag fix_id: 'F-59801r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000366']\n  tag nist: ['CM-6 b']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69185.rb"},"title":"Primary authoritative name servers must be configured to only receive zone transfer requests from specified secondary name servers.","desc":"Authoritative name servers (especially primary name servers) should be configured with an allow-transfer access control substatement designating the list of hosts from which zone transfer requests can be accepted. These restrictions address the denial-of-service threat and potential exploits from unrestricted dissemination of information about internal resources. Based on the need-to-know, the only name servers that need to refresh their zone files periodically are the secondary name servers. Zone transfer from primary name servers should be restricted to secondary name servers. The zone transfer should be completely disabled in the secondary name servers. The address match list argument for the allow-transfer substatement should consist of IP addresses of secondary name servers and stealth secondary name servers.","descriptions":{"default":"Authoritative name servers (especially primary name servers) should be configured with an allow-transfer access control substatement designating the list of hosts from which zone transfer requests can be accepted. These restrictions address the denial-of-service threat and potential exploits from unrestricted dissemination of information about internal resources. Based on the need-to-know, the only name servers that need to refresh their zone files periodically are the secondary name servers. Zone transfer from primary name servers should be restricted to secondary name servers. The zone transfer should be completely disabled in the secondary name servers. The address match list argument for the allow-transfer substatement should consist of IP addresses of secondary name servers and stealth secondary name servers.","check":"Review the DNS configuration files. Verify a configuration is in place to limit the secondary name servers from which an authoritative name server receives zone transfer requests.\n\nIf a configuration is not in place to limit the secondary name servers from which an authoritative name server receives zone transfer requests, this is a finding.","fix":"Configure the authoritative name server to specify which secondary name servers from which it will receive zone transfer requests."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55565r1_chk","severity":"medium","gid":"V-54939","rid":"SV-69185r1_rule","stig_id":"SRG-APP-000516-DNS-000095","gtitle":"SRG-APP-000516-DNS-000095","fix_id":"F-59801r1_fix","documentable":null,"cci":["CCI-000366"],"nist":["CM-6 b"]}},{"id":"SV-69187","code":"control 'SV-69187' do\n  title 'The DNS implementation must be conformant to the IETF DNS specification.'\n  desc 'Any DNS implementation must be designed to be able to conform to the Internet Engineering Task Force (IETF) specification. DoD utilizes many different DNS servers, and it is essential that core capabilities of all are compatible. DNS servers that do not provide services compliant to the DNS RFCs may cause denial of service issues.\n\nThe server must be compliant to the IETF standard so as to provide the right balance between performance and integrity of the DNS system.'\n  desc 'check', \"Review DNS implementation documentation to determine whether the DNS system has capabilities compliant to IETF RFC-1034 (Domain Names-Concepts and Facilities), RFC-1035 (Domain Names-Implementation and Specification), and subsequent RFCs. Systems using DNSSEC (DNS Security Extensions) should be compliant to RFC-4033 (DNS Security Introduction and Requirements), RFC-4024 (Resource Records for the DNS Security Extensions), RFC-4035 (Protocol Modifications for the DNS security Extensions), RFC-5155 (DNS Security (DNSSEC) Hashed Authenticated Denial of Existence) and related RFCs. \n\nA DNS implementation may also be found non-compliant by empirical analysis, i.e., by experimentally querying and examine the answer. For example, a DNS implementation may not answer a query for the 'NS' resource record type with a CNAME reply.\n\nIf the implementation does not comply to the IETF DNS RFCs, this is a finding.\"\n  desc 'fix', \"Configure the DNS implementation to be compliant to the IETF specifications for DNS.\n\nProtect DNS transactions, such as update of DNS name resolution data and data replication that involve DNS nodes within an enterprise's control. The transactions should be protected using hash-based message authentication codes based on shared secrets, as outlined in Internet Engineering Task Force's (IETF) Transaction Signature (TSIG) specification.\n\nProtect the ubiquitous DNS query/response transaction that could involve any DNS node in the global Internet using digital signatures based on asymmetric cryptography, as outlined in IETF's Domain Name System Security Extension (DNSSEC) specification.\"\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55567r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54941'\n  tag rid: 'SV-69187r1_rule'\n  tag stig_id: 'SRG-APP-000516-DNS-000097'\n  tag gtitle: 'SRG-APP-000516-DNS-000097'\n  tag fix_id: 'F-59803r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000366']\n  tag nist: ['CM-6 b']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69187.rb"},"title":"The DNS implementation must be conformant to the IETF DNS specification.","desc":"Any DNS implementation must be designed to be able to conform to the Internet Engineering Task Force (IETF) specification. DoD utilizes many different DNS servers, and it is essential that core capabilities of all are compatible. DNS servers that do not provide services compliant to the DNS RFCs may cause denial of service issues.\n\nThe server must be compliant to the IETF standard so as to provide the right balance between performance and integrity of the DNS system.","descriptions":{"default":"Any DNS implementation must be designed to be able to conform to the Internet Engineering Task Force (IETF) specification. DoD utilizes many different DNS servers, and it is essential that core capabilities of all are compatible. DNS servers that do not provide services compliant to the DNS RFCs may cause denial of service issues.\n\nThe server must be compliant to the IETF standard so as to provide the right balance between performance and integrity of the DNS system.","check":"Review DNS implementation documentation to determine whether the DNS system has capabilities compliant to IETF RFC-1034 (Domain Names-Concepts and Facilities), RFC-1035 (Domain Names-Implementation and Specification), and subsequent RFCs. Systems using DNSSEC (DNS Security Extensions) should be compliant to RFC-4033 (DNS Security Introduction and Requirements), RFC-4024 (Resource Records for the DNS Security Extensions), RFC-4035 (Protocol Modifications for the DNS security Extensions), RFC-5155 (DNS Security (DNSSEC) Hashed Authenticated Denial of Existence) and related RFCs. \n\nA DNS implementation may also be found non-compliant by empirical analysis, i.e., by experimentally querying and examine the answer. For example, a DNS implementation may not answer a query for the 'NS' resource record type with a CNAME reply.\n\nIf the implementation does not comply to the IETF DNS RFCs, this is a finding.","fix":"Configure the DNS implementation to be compliant to the IETF specifications for DNS.\n\nProtect DNS transactions, such as update of DNS name resolution data and data replication that involve DNS nodes within an enterprise's control. The transactions should be protected using hash-based message authentication codes based on shared secrets, as outlined in Internet Engineering Task Force's (IETF) Transaction Signature (TSIG) specification.\n\nProtect the ubiquitous DNS query/response transaction that could involve any DNS node in the global Internet using digital signatures based on asymmetric cryptography, as outlined in IETF's Domain Name System Security Extension (DNSSEC) specification."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55567r1_chk","severity":"medium","gid":"V-54941","rid":"SV-69187r1_rule","stig_id":"SRG-APP-000516-DNS-000097","gtitle":"SRG-APP-000516-DNS-000097","fix_id":"F-59803r1_fix","documentable":null,"cci":["CCI-000366"],"nist":["CM-6 b"]}},{"id":"SV-69189","code":"control 'SV-69189' do\n  title 'The DNS implementation must enforce a Discretionary Access Control (DAC) policy that limits propagation of access rights.'\n  desc 'Discretionary Access Control (DAC) is based on the premise that individual users are \"owners\" of objects and therefore have discretion over who should be authorized to access the object and in which mode (e.g., read or write). Ownership is usually acquired as a consequence of creating the object or via specified ownership assignment. In a DNS implementation, DAC should be granted to a minimal number of individuals and objects because DNS does not interact directly with users and users do not store and share data with the DNS application directly.\n\nThe primary objective of DNS authentication and access control is the integrity of DNS records; only authorized personnel must be able to create and modify resource records, and name servers should only accept updates from authoritative master servers for the relevant zones. Integrity is best assured through authentication and access control features within the name server software and the file system the name server resides on. In order to protect the zone files and configuration data, which should only be accessed by the name service or an administrator, access controls need to be implemented on files, and rights should not be easily propagated to other users. Lack of a stringent access control policy places the DNS infrastructure at risk to malicious persons and attackers, in addition to potential denial of service to network resources.\n\nDAC allows the owner to determine who will have access to objects they control. An example of DAC includes user-controlled file permissions. DAC models have the potential for the access controls to propagate without limit, resulting in unauthorized access to said objects.\n\nWhen applications provide a DAC mechanism, the DNS implementation must be able to limit the propagation of those access rights.'\n  desc 'check', 'Review the DNS configuration and access control structure to determine if DACs are in place to limit the propagation of rights as determined by the organization. Access control lists for user permissions, as well as zone transfers and updates, must be present. If they are not present, this is a finding.'\n  desc 'fix', 'Configure the DNS implementation to eliminate access rights propagation.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55569r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54943'\n  tag rid: 'SV-69189r1_rule'\n  tag stig_id: 'SRG-APP-000516-DNS-000099'\n  tag gtitle: 'SRG-APP-000516-DNS-000099'\n  tag fix_id: 'F-59805r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000366']\n  tag nist: ['CM-6 b']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69189.rb"},"title":"The DNS implementation must enforce a Discretionary Access Control (DAC) policy that limits propagation of access rights.","desc":"Discretionary Access Control (DAC) is based on the premise that individual users are \"owners\" of objects and therefore have discretion over who should be authorized to access the object and in which mode (e.g., read or write). Ownership is usually acquired as a consequence of creating the object or via specified ownership assignment. In a DNS implementation, DAC should be granted to a minimal number of individuals and objects because DNS does not interact directly with users and users do not store and share data with the DNS application directly.\n\nThe primary objective of DNS authentication and access control is the integrity of DNS records; only authorized personnel must be able to create and modify resource records, and name servers should only accept updates from authoritative master servers for the relevant zones. Integrity is best assured through authentication and access control features within the name server software and the file system the name server resides on. In order to protect the zone files and configuration data, which should only be accessed by the name service or an administrator, access controls need to be implemented on files, and rights should not be easily propagated to other users. Lack of a stringent access control policy places the DNS infrastructure at risk to malicious persons and attackers, in addition to potential denial of service to network resources.\n\nDAC allows the owner to determine who will have access to objects they control. An example of DAC includes user-controlled file permissions. DAC models have the potential for the access controls to propagate without limit, resulting in unauthorized access to said objects.\n\nWhen applications provide a DAC mechanism, the DNS implementation must be able to limit the propagation of those access rights.","descriptions":{"default":"Discretionary Access Control (DAC) is based on the premise that individual users are \"owners\" of objects and therefore have discretion over who should be authorized to access the object and in which mode (e.g., read or write). Ownership is usually acquired as a consequence of creating the object or via specified ownership assignment. In a DNS implementation, DAC should be granted to a minimal number of individuals and objects because DNS does not interact directly with users and users do not store and share data with the DNS application directly.\n\nThe primary objective of DNS authentication and access control is the integrity of DNS records; only authorized personnel must be able to create and modify resource records, and name servers should only accept updates from authoritative master servers for the relevant zones. Integrity is best assured through authentication and access control features within the name server software and the file system the name server resides on. In order to protect the zone files and configuration data, which should only be accessed by the name service or an administrator, access controls need to be implemented on files, and rights should not be easily propagated to other users. Lack of a stringent access control policy places the DNS infrastructure at risk to malicious persons and attackers, in addition to potential denial of service to network resources.\n\nDAC allows the owner to determine who will have access to objects they control. An example of DAC includes user-controlled file permissions. DAC models have the potential for the access controls to propagate without limit, resulting in unauthorized access to said objects.\n\nWhen applications provide a DAC mechanism, the DNS implementation must be able to limit the propagation of those access rights.","check":"Review the DNS configuration and access control structure to determine if DACs are in place to limit the propagation of rights as determined by the organization. Access control lists for user permissions, as well as zone transfers and updates, must be present. If they are not present, this is a finding.","fix":"Configure the DNS implementation to eliminate access rights propagation."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55569r1_chk","severity":"medium","gid":"V-54943","rid":"SV-69189r1_rule","stig_id":"SRG-APP-000516-DNS-000099","gtitle":"SRG-APP-000516-DNS-000099","fix_id":"F-59805r1_fix","documentable":null,"cci":["CCI-000366"],"nist":["CM-6 b"]}},{"id":"SV-69191","code":"control 'SV-69191' do\n  title 'The DNS implementation must implement internal/external role separation.'\n  desc 'DNS servers with an internal role only process name/address resolution requests from within the organization (i.e., internal clients). DNS servers with an external role only process name/address resolution information requests from clients external to the organization (i.e., on the external networks, including the Internet). The set of clients that can access an authoritative DNS server in a particular role is specified by the organization using address ranges, explicit access control lists, etc. In order to protect internal DNS resource information, it is important to isolate the requests to internal DNS servers. Separating internal and external roles in DNS prevents address space that is private (e.g., 10.0.0.0/24) or is otherwise concealed by some form of Network Address Translation from leaking into the public DNS system.'\n  desc 'check', 'Review the zone configuration with the DNS administrator and verify whether the zone has records on both the internal and external networks. If the zone is split, verify there is a separate external name server to handle the host records for external address space and an internal name server to handle the host records for internal address space.\n\nIf there are split zones and there are not internal and external roles to protect private address space, this is a finding.'\n  desc 'fix', 'Configure the DNS server to separate internal and external roles to protect private address space.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55571r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54945'\n  tag rid: 'SV-69191r1_rule'\n  tag stig_id: 'SRG-APP-000516-DNS-000101'\n  tag gtitle: 'SRG-APP-000516-DNS-000101'\n  tag fix_id: 'F-59807r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000366']\n  tag nist: ['CM-6 b']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69191.rb"},"title":"The DNS implementation must implement internal/external role separation.","desc":"DNS servers with an internal role only process name/address resolution requests from within the organization (i.e., internal clients). DNS servers with an external role only process name/address resolution information requests from clients external to the organization (i.e., on the external networks, including the Internet). The set of clients that can access an authoritative DNS server in a particular role is specified by the organization using address ranges, explicit access control lists, etc. In order to protect internal DNS resource information, it is important to isolate the requests to internal DNS servers. Separating internal and external roles in DNS prevents address space that is private (e.g., 10.0.0.0/24) or is otherwise concealed by some form of Network Address Translation from leaking into the public DNS system.","descriptions":{"default":"DNS servers with an internal role only process name/address resolution requests from within the organization (i.e., internal clients). DNS servers with an external role only process name/address resolution information requests from clients external to the organization (i.e., on the external networks, including the Internet). The set of clients that can access an authoritative DNS server in a particular role is specified by the organization using address ranges, explicit access control lists, etc. In order to protect internal DNS resource information, it is important to isolate the requests to internal DNS servers. Separating internal and external roles in DNS prevents address space that is private (e.g., 10.0.0.0/24) or is otherwise concealed by some form of Network Address Translation from leaking into the public DNS system.","check":"Review the zone configuration with the DNS administrator and verify whether the zone has records on both the internal and external networks. If the zone is split, verify there is a separate external name server to handle the host records for external address space and an internal name server to handle the host records for internal address space.\n\nIf there are split zones and there are not internal and external roles to protect private address space, this is a finding.","fix":"Configure the DNS server to separate internal and external roles to protect private address space."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55571r1_chk","severity":"medium","gid":"V-54945","rid":"SV-69191r1_rule","stig_id":"SRG-APP-000516-DNS-000101","gtitle":"SRG-APP-000516-DNS-000101","fix_id":"F-59807r1_fix","documentable":null,"cci":["CCI-000366"],"nist":["CM-6 b"]}},{"id":"SV-69193","code":"control 'SV-69193' do\n  title 'The DNS must utilize valid root name servers in the local root zone file.'\n  desc \"All caching name servers must be authoritative for the root zone because, without this starting point, they would have no knowledge of the DNS infrastructure and thus would be unable to respond to any queries. The security risk is that an adversary could change the root hints and direct the caching name server to a bogus root server. At that point, every query response from that name server is suspect, which would give the adversary substantial control over the network communication of the name servers' clients. When authoritative servers are sent queries for zones that they are not authoritative for, and they are configured as a non-caching server (as recommended), they can either be configured to return a referral to the root servers or they can be configured to refuse to answer the query. The recommendation is to configure authoritative servers to refuse to answer queries for any zones for which they are not authoritative. This is more efficient for the server and allows it to spend more of its resources doing what its intended purpose is, answering authoritatively for its zone.\"\n  desc 'check', 'Review the entries within the root hints file and validate that the entries are correct. G and H root servers are required on the NIPRNet, as a minimum. All default settings on servers must be verified and corrected if necessary. If valid root name servers are not configured, this is a finding.'\n  desc 'fix', 'Configure the DNS implementation to use valid root name servers.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55573r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54947'\n  tag rid: 'SV-69193r1_rule'\n  tag stig_id: 'SRG-APP-000516-DNS-000102'\n  tag gtitle: 'SRG-APP-000516-DNS-000102'\n  tag fix_id: 'F-59809r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000366']\n  tag nist: ['CM-6 b']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69193.rb"},"title":"The DNS must utilize valid root name servers in the local root zone file.","desc":"All caching name servers must be authoritative for the root zone because, without this starting point, they would have no knowledge of the DNS infrastructure and thus would be unable to respond to any queries. The security risk is that an adversary could change the root hints and direct the caching name server to a bogus root server. At that point, every query response from that name server is suspect, which would give the adversary substantial control over the network communication of the name servers' clients. When authoritative servers are sent queries for zones that they are not authoritative for, and they are configured as a non-caching server (as recommended), they can either be configured to return a referral to the root servers or they can be configured to refuse to answer the query. The recommendation is to configure authoritative servers to refuse to answer queries for any zones for which they are not authoritative. This is more efficient for the server and allows it to spend more of its resources doing what its intended purpose is, answering authoritatively for its zone.","descriptions":{"default":"All caching name servers must be authoritative for the root zone because, without this starting point, they would have no knowledge of the DNS infrastructure and thus would be unable to respond to any queries. The security risk is that an adversary could change the root hints and direct the caching name server to a bogus root server. At that point, every query response from that name server is suspect, which would give the adversary substantial control over the network communication of the name servers' clients. When authoritative servers are sent queries for zones that they are not authoritative for, and they are configured as a non-caching server (as recommended), they can either be configured to return a referral to the root servers or they can be configured to refuse to answer the query. The recommendation is to configure authoritative servers to refuse to answer queries for any zones for which they are not authoritative. This is more efficient for the server and allows it to spend more of its resources doing what its intended purpose is, answering authoritatively for its zone.","check":"Review the entries within the root hints file and validate that the entries are correct. G and H root servers are required on the NIPRNet, as a minimum. All default settings on servers must be verified and corrected if necessary. If valid root name servers are not configured, this is a finding.","fix":"Configure the DNS implementation to use valid root name servers."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55573r1_chk","severity":"medium","gid":"V-54947","rid":"SV-69193r1_rule","stig_id":"SRG-APP-000516-DNS-000102","gtitle":"SRG-APP-000516-DNS-000102","fix_id":"F-59809r1_fix","documentable":null,"cci":["CCI-000366"],"nist":["CM-6 b"]}},{"id":"SV-69195","code":"control 'SV-69195' do\n  title 'The DNS name server software must be at the latest version.'\n  desc 'Each newer version of the name server software, especially the BIND software, generally is devoid of vulnerabilities found in earlier versions because it has design changes incorporated to take care of those vulnerabilities. These vulnerabilities have been exploited (i.e., some form of attack was launched), and sufficient information has been generated with respect to the nature of those exploits. It makes good business sense to run the latest version of name server software because theoretically it is the safest version. Even if the software is the latest version, it is not safe to run it in default mode. The security administrator should always configure the software to run in the recommended secure mode of operation after becoming familiar with the new security settings for the latest version.'\n  desc 'check', 'Review the DNS implementation to determine the name server software version.\n\nIf the installed name server software version is not the latest production version, this is a finding.'\n  desc 'fix', 'Update the installed name server software with the latest production version.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55575r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54949'\n  tag rid: 'SV-69195r1_rule'\n  tag stig_id: 'SRG-APP-000516-DNS-000103'\n  tag gtitle: 'SRG-APP-000516-DNS-000103'\n  tag fix_id: 'F-59811r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000366']\n  tag nist: ['CM-6 b']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69195.rb"},"title":"The DNS name server software must be at the latest version.","desc":"Each newer version of the name server software, especially the BIND software, generally is devoid of vulnerabilities found in earlier versions because it has design changes incorporated to take care of those vulnerabilities. These vulnerabilities have been exploited (i.e., some form of attack was launched), and sufficient information has been generated with respect to the nature of those exploits. It makes good business sense to run the latest version of name server software because theoretically it is the safest version. Even if the software is the latest version, it is not safe to run it in default mode. The security administrator should always configure the software to run in the recommended secure mode of operation after becoming familiar with the new security settings for the latest version.","descriptions":{"default":"Each newer version of the name server software, especially the BIND software, generally is devoid of vulnerabilities found in earlier versions because it has design changes incorporated to take care of those vulnerabilities. These vulnerabilities have been exploited (i.e., some form of attack was launched), and sufficient information has been generated with respect to the nature of those exploits. It makes good business sense to run the latest version of name server software because theoretically it is the safest version. Even if the software is the latest version, it is not safe to run it in default mode. The security administrator should always configure the software to run in the recommended secure mode of operation after becoming familiar with the new security settings for the latest version.","check":"Review the DNS implementation to determine the name server software version.\n\nIf the installed name server software version is not the latest production version, this is a finding.","fix":"Update the installed name server software with the latest production version."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55575r1_chk","severity":"medium","gid":"V-54949","rid":"SV-69195r1_rule","stig_id":"SRG-APP-000516-DNS-000103","gtitle":"SRG-APP-000516-DNS-000103","fix_id":"F-59811r1_fix","documentable":null,"cci":["CCI-000366"],"nist":["CM-6 b"]}},{"id":"SV-69197","code":"control 'SV-69197' do\n  title 'The DNS Name Server software must run with restricted privileges.'\n  desc 'Failure to provide logical access restrictions associated with changes to application configuration may have significant effects on the overall security of the system. When dealing with access restrictions pertaining to change control, it should be noted that any changes to the hardware, software, and/or firmware components of the information system and/or application can have significant effects on the overall security of the system. Accordingly, only qualified and authorized individuals should be allowed to obtain access to application components for the purposes of initiating changes, including upgrades and modifications. \n\nLogical access restrictions include, for example, controls that restrict access to workflow automation, media libraries, abstract layers (e.g., changes implemented into third-party interfaces rather than directly into information systems), and change windows (e.g., changes occur only during specified times, making unauthorized changes easy to discover).\n\nIf the name server software is run as a privileged user (e.g., root in Unix systems), any break-in into the software can have disastrous consequences in terms of resources resident in the name server platform. Specifically, a hacker who breaks into the software acquires unrestricted access and therefore can execute any commands or modify or delete any files. It is necessary to run the name server software as a non-privileged user with access restricted to specified directories to contain damages resulting from break-in.'\n  desc 'check', 'Review the account under which the DNS software is running and determine the permissions that account has been assigned.\n\nIf the account under which the DNS software is running has not been restricted to the least privileged permissions required for the purpose of running the software, this is a finding.'\n  desc 'fix', 'Configured the permissions of the account being used to run the DNS software so that it has the least privileges required under which to run the DNS software.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55577r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54951'\n  tag rid: 'SV-69197r1_rule'\n  tag stig_id: 'SRG-APP-000516-DNS-000105'\n  tag gtitle: 'SRG-APP-000516-DNS-000105'\n  tag fix_id: 'F-59813r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000366']\n  tag nist: ['CM-6 b']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69197.rb"},"title":"The DNS Name Server software must run with restricted privileges.","desc":"Failure to provide logical access restrictions associated with changes to application configuration may have significant effects on the overall security of the system. When dealing with access restrictions pertaining to change control, it should be noted that any changes to the hardware, software, and/or firmware components of the information system and/or application can have significant effects on the overall security of the system. Accordingly, only qualified and authorized individuals should be allowed to obtain access to application components for the purposes of initiating changes, including upgrades and modifications. \n\nLogical access restrictions include, for example, controls that restrict access to workflow automation, media libraries, abstract layers (e.g., changes implemented into third-party interfaces rather than directly into information systems), and change windows (e.g., changes occur only during specified times, making unauthorized changes easy to discover).\n\nIf the name server software is run as a privileged user (e.g., root in Unix systems), any break-in into the software can have disastrous consequences in terms of resources resident in the name server platform. Specifically, a hacker who breaks into the software acquires unrestricted access and therefore can execute any commands or modify or delete any files. It is necessary to run the name server software as a non-privileged user with access restricted to specified directories to contain damages resulting from break-in.","descriptions":{"default":"Failure to provide logical access restrictions associated with changes to application configuration may have significant effects on the overall security of the system. When dealing with access restrictions pertaining to change control, it should be noted that any changes to the hardware, software, and/or firmware components of the information system and/or application can have significant effects on the overall security of the system. Accordingly, only qualified and authorized individuals should be allowed to obtain access to application components for the purposes of initiating changes, including upgrades and modifications. \n\nLogical access restrictions include, for example, controls that restrict access to workflow automation, media libraries, abstract layers (e.g., changes implemented into third-party interfaces rather than directly into information systems), and change windows (e.g., changes occur only during specified times, making unauthorized changes easy to discover).\n\nIf the name server software is run as a privileged user (e.g., root in Unix systems), any break-in into the software can have disastrous consequences in terms of resources resident in the name server platform. Specifically, a hacker who breaks into the software acquires unrestricted access and therefore can execute any commands or modify or delete any files. It is necessary to run the name server software as a non-privileged user with access restricted to specified directories to contain damages resulting from break-in.","check":"Review the account under which the DNS software is running and determine the permissions that account has been assigned.\n\nIf the account under which the DNS software is running has not been restricted to the least privileged permissions required for the purpose of running the software, this is a finding.","fix":"Configured the permissions of the account being used to run the DNS software so that it has the least privileges required under which to run the DNS software."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55577r1_chk","severity":"medium","gid":"V-54951","rid":"SV-69197r1_rule","stig_id":"SRG-APP-000516-DNS-000105","gtitle":"SRG-APP-000516-DNS-000105","fix_id":"F-59813r1_fix","documentable":null,"cci":["CCI-000366"],"nist":["CM-6 b"]}},{"id":"SV-69199","code":"control 'SV-69199' do\n  title 'The IP address for hidden master authoritative name servers must not appear in the name servers set in the zone database.'\n  desc 'A hidden master authoritative server is an authoritative DNS server whose IP address does not appear in the name server set for a zone.  All of the name servers that do appear in the zone database as designated name servers get their zone data from the hidden master via a zone transfer request. In effect, all visible name servers are actually secondary slave servers. This prevents potential attackers from targeting the master name server because its IP address may not appear in the zone database.'\n  desc 'check', 'Check the DNS documentation to determine if a hidden master authoritative name server is being used. If a hidden master authoritative name server is being used, check the NS records for all zones for which that hidden name server is authoritative and confirm there is not any NS record for that hidden name server.\n\nIf any zone for which a hidden name server is authoritative has an NS record for that hidden name server, this is a finding.\nIf the DNS implementation does not include any hidden name servers, this is not applicable.'\n  desc 'fix', \"Remove, from all zones' configuration files, any NS RRs for hidden name servers.\"\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55579r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54953'\n  tag rid: 'SV-69199r1_rule'\n  tag stig_id: 'SRG-APP-000516-DNS-000108'\n  tag gtitle: 'SRG-APP-000516-DNS-000108'\n  tag fix_id: 'F-59815r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000366']\n  tag nist: ['CM-6 b']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69199.rb"},"title":"The IP address for hidden master authoritative name servers must not appear in the name servers set in the zone database.","desc":"A hidden master authoritative server is an authoritative DNS server whose IP address does not appear in the name server set for a zone.  All of the name servers that do appear in the zone database as designated name servers get their zone data from the hidden master via a zone transfer request. In effect, all visible name servers are actually secondary slave servers. This prevents potential attackers from targeting the master name server because its IP address may not appear in the zone database.","descriptions":{"default":"A hidden master authoritative server is an authoritative DNS server whose IP address does not appear in the name server set for a zone.  All of the name servers that do appear in the zone database as designated name servers get their zone data from the hidden master via a zone transfer request. In effect, all visible name servers are actually secondary slave servers. This prevents potential attackers from targeting the master name server because its IP address may not appear in the zone database.","check":"Check the DNS documentation to determine if a hidden master authoritative name server is being used. If a hidden master authoritative name server is being used, check the NS records for all zones for which that hidden name server is authoritative and confirm there is not any NS record for that hidden name server.\n\nIf any zone for which a hidden name server is authoritative has an NS record for that hidden name server, this is a finding.\nIf the DNS implementation does not include any hidden name servers, this is not applicable.","fix":"Remove, from all zones' configuration files, any NS RRs for hidden name servers."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55579r1_chk","severity":"medium","gid":"V-54953","rid":"SV-69199r1_rule","stig_id":"SRG-APP-000516-DNS-000108","gtitle":"SRG-APP-000516-DNS-000108","fix_id":"F-59815r1_fix","documentable":null,"cci":["CCI-000366"],"nist":["CM-6 b"]}},{"id":"SV-69201","code":"control 'SV-69201' do\n  title 'The platform on which the name server software is hosted must be configured to respond to DNS traffic only.'\n  desc \"OS configuration practices as issued by the US Computer Emergency Response Team (US CERT) and the National Institute of Standards and Technology's (NIST's) National Vulnerability Database (NVD), based on identified vulnerabilities that pertain to the application profile into which the name server software fits, should be always followed. In particular, hosts that run the name server software should not provide any other services and therefore should be configured to respond to DNS traffic only. In other words, the only allowed incoming ports/protocols to these hosts should be 53/udp and 53/tcp. Outgoing DNS messages should be sent from a random port to minimize the risk of an attacker's guessing the outgoing message port and sending forged replies.\"\n  desc 'check', 'Review the name server configuration. Verify the server is configured to only respond to incoming 53/udp and 53/tcp and any other ports and protocols required for the underlying platform to function normally, as specified by the related OS STIG.\n\nIf the DNS server is not configured to only respond to incoming 53/udp and 53/tcp and any other ports and protocols required for the underlying platform to function normally, as specified by the related OS STIG, this is a finding.'\n  desc 'fix', 'Configure the DNS name server to only respond to incoming 53/udp and 53/tcp and any other ports and protocols required for the underlying platform to function normally, as specified by the related OS STIG.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55581r2_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54955'\n  tag rid: 'SV-69201r1_rule'\n  tag stig_id: 'SRG-APP-000516-DNS-000109'\n  tag gtitle: 'SRG-APP-000516-DNS-000109'\n  tag fix_id: 'F-59817r2_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000366']\n  tag nist: ['CM-6 b']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69201.rb"},"title":"The platform on which the name server software is hosted must be configured to respond to DNS traffic only.","desc":"OS configuration practices as issued by the US Computer Emergency Response Team (US CERT) and the National Institute of Standards and Technology's (NIST's) National Vulnerability Database (NVD), based on identified vulnerabilities that pertain to the application profile into which the name server software fits, should be always followed. In particular, hosts that run the name server software should not provide any other services and therefore should be configured to respond to DNS traffic only. In other words, the only allowed incoming ports/protocols to these hosts should be 53/udp and 53/tcp. Outgoing DNS messages should be sent from a random port to minimize the risk of an attacker's guessing the outgoing message port and sending forged replies.","descriptions":{"default":"OS configuration practices as issued by the US Computer Emergency Response Team (US CERT) and the National Institute of Standards and Technology's (NIST's) National Vulnerability Database (NVD), based on identified vulnerabilities that pertain to the application profile into which the name server software fits, should be always followed. In particular, hosts that run the name server software should not provide any other services and therefore should be configured to respond to DNS traffic only. In other words, the only allowed incoming ports/protocols to these hosts should be 53/udp and 53/tcp. Outgoing DNS messages should be sent from a random port to minimize the risk of an attacker's guessing the outgoing message port and sending forged replies.","check":"Review the name server configuration. Verify the server is configured to only respond to incoming 53/udp and 53/tcp and any other ports and protocols required for the underlying platform to function normally, as specified by the related OS STIG.\n\nIf the DNS server is not configured to only respond to incoming 53/udp and 53/tcp and any other ports and protocols required for the underlying platform to function normally, as specified by the related OS STIG, this is a finding.","fix":"Configure the DNS name server to only respond to incoming 53/udp and 53/tcp and any other ports and protocols required for the underlying platform to function normally, as specified by the related OS STIG."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55581r2_chk","severity":"medium","gid":"V-54955","rid":"SV-69201r1_rule","stig_id":"SRG-APP-000516-DNS-000109","gtitle":"SRG-APP-000516-DNS-000109","fix_id":"F-59817r2_fix","documentable":null,"cci":["CCI-000366"],"nist":["CM-6 b"]}},{"id":"SV-69203","code":"control 'SV-69203' do\n  title 'The platform on which the name server software is hosted must be configured to send outgoing DNS messages from a random port.'\n  desc \"OS configuration practices as issued by the US Computer Emergency Response Team (US CERT) and the National Institute of Standards and Technology's (NIST's) National Vulnerability Database (NVD), based on identified vulnerabilities that pertain to the application profile into which the name server software fits, should be always followed. In particular, hosts that run the name server software should not provide any other services and therefore should be configured to respond to DNS traffic only. In other words, the only allowed incoming ports/protocols to these hosts should be 53/udp and 53/tcp. \n\nOutgoing DNS messages should be sent from a random port to minimize the risk of an attacker guessing the outgoing message port and sending forged replies.\"\n  desc 'check', 'Review the DNS configuration. Determine if a static port is being used to send outgoing DNS messages or whether it is configured to use a random port.\n\nIf the DNS configuration specifies a static port to be used for outgoing DNS messages rather than a random port, this is a finding.'\n  desc 'fix', 'Configure the DNS server to use a random port for outgoing DNS messages.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55583r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54957'\n  tag rid: 'SV-69203r1_rule'\n  tag stig_id: 'SRG-APP-000516-DNS-000110'\n  tag gtitle: 'SRG-APP-000516-DNS-000110'\n  tag fix_id: 'F-59819r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000366']\n  tag nist: ['CM-6 b']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69203.rb"},"title":"The platform on which the name server software is hosted must be configured to send outgoing DNS messages from a random port.","desc":"OS configuration practices as issued by the US Computer Emergency Response Team (US CERT) and the National Institute of Standards and Technology's (NIST's) National Vulnerability Database (NVD), based on identified vulnerabilities that pertain to the application profile into which the name server software fits, should be always followed. In particular, hosts that run the name server software should not provide any other services and therefore should be configured to respond to DNS traffic only. In other words, the only allowed incoming ports/protocols to these hosts should be 53/udp and 53/tcp. \n\nOutgoing DNS messages should be sent from a random port to minimize the risk of an attacker guessing the outgoing message port and sending forged replies.","descriptions":{"default":"OS configuration practices as issued by the US Computer Emergency Response Team (US CERT) and the National Institute of Standards and Technology's (NIST's) National Vulnerability Database (NVD), based on identified vulnerabilities that pertain to the application profile into which the name server software fits, should be always followed. In particular, hosts that run the name server software should not provide any other services and therefore should be configured to respond to DNS traffic only. In other words, the only allowed incoming ports/protocols to these hosts should be 53/udp and 53/tcp. \n\nOutgoing DNS messages should be sent from a random port to minimize the risk of an attacker guessing the outgoing message port and sending forged replies.","check":"Review the DNS configuration. Determine if a static port is being used to send outgoing DNS messages or whether it is configured to use a random port.\n\nIf the DNS configuration specifies a static port to be used for outgoing DNS messages rather than a random port, this is a finding.","fix":"Configure the DNS server to use a random port for outgoing DNS messages."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55583r1_chk","severity":"medium","gid":"V-54957","rid":"SV-69203r1_rule","stig_id":"SRG-APP-000516-DNS-000110","gtitle":"SRG-APP-000516-DNS-000110","fix_id":"F-59819r1_fix","documentable":null,"cci":["CCI-000366"],"nist":["CM-6 b"]}},{"id":"SV-69205","code":"control 'SV-69205' do\n  title 'The private key corresponding to the ZSK, stored on name servers accepting dynamic updates, must have appropriate directory/file-level access control list-based or cryptography-based protections.'\n  desc 'The private keys in the KSK and ZSK key pairs must be protected from unauthorized access. If possible, the private keys should be stored off-line (with respect to the Internet-facing, DNSSEC-aware name server) in a physically secure, non-network-accessible machine along with the zone file master copy. \n\nThis strategy is not feasible in situations in which the DNSSEC-aware name server has to support dynamic updates. To support dynamic update transactions, the DNSSEC-aware name server (which usually is a primary authoritative name server) has to have both the zone file master copy and the private key corresponding to the zone-signing key (ZSK-private) online to immediately update the signatures for the updated RRsets. The private key corresponding to the key-signing key (KSK-private) can still be kept off-line.'\n  desc 'check', 'Review the DNS name server and documentation to determine whether it accepts dynamic updates. If dynamic updates are accepted, ensure the private key corresponding to the ZSK alone is protected with directory/file-level access control list-based or cryptography-based protections.\n\nIf the private key corresponding to the ZSK alone is not protected with directory/file-level access control list-based or cryptography-based protections, this is a finding.'\n  desc 'fix', 'Apply permissions to the private key corresponding to the ZSK alone with read/modify permissions for the account under which the name server software is run.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55585r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54959'\n  tag rid: 'SV-69205r1_rule'\n  tag stig_id: 'SRG-APP-000516-DNS-000111'\n  tag gtitle: 'SRG-APP-000516-DNS-000111'\n  tag fix_id: 'F-59821r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000366']\n  tag nist: ['CM-6 b']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69205.rb"},"title":"The private key corresponding to the ZSK, stored on name servers accepting dynamic updates, must have appropriate directory/file-level access control list-based or cryptography-based protections.","desc":"The private keys in the KSK and ZSK key pairs must be protected from unauthorized access. If possible, the private keys should be stored off-line (with respect to the Internet-facing, DNSSEC-aware name server) in a physically secure, non-network-accessible machine along with the zone file master copy. \n\nThis strategy is not feasible in situations in which the DNSSEC-aware name server has to support dynamic updates. To support dynamic update transactions, the DNSSEC-aware name server (which usually is a primary authoritative name server) has to have both the zone file master copy and the private key corresponding to the zone-signing key (ZSK-private) online to immediately update the signatures for the updated RRsets. The private key corresponding to the key-signing key (KSK-private) can still be kept off-line.","descriptions":{"default":"The private keys in the KSK and ZSK key pairs must be protected from unauthorized access. If possible, the private keys should be stored off-line (with respect to the Internet-facing, DNSSEC-aware name server) in a physically secure, non-network-accessible machine along with the zone file master copy. \n\nThis strategy is not feasible in situations in which the DNSSEC-aware name server has to support dynamic updates. To support dynamic update transactions, the DNSSEC-aware name server (which usually is a primary authoritative name server) has to have both the zone file master copy and the private key corresponding to the zone-signing key (ZSK-private) online to immediately update the signatures for the updated RRsets. The private key corresponding to the key-signing key (KSK-private) can still be kept off-line.","check":"Review the DNS name server and documentation to determine whether it accepts dynamic updates. If dynamic updates are accepted, ensure the private key corresponding to the ZSK alone is protected with directory/file-level access control list-based or cryptography-based protections.\n\nIf the private key corresponding to the ZSK alone is not protected with directory/file-level access control list-based or cryptography-based protections, this is a finding.","fix":"Apply permissions to the private key corresponding to the ZSK alone with read/modify permissions for the account under which the name server software is run."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55585r1_chk","severity":"medium","gid":"V-54959","rid":"SV-69205r1_rule","stig_id":"SRG-APP-000516-DNS-000111","gtitle":"SRG-APP-000516-DNS-000111","fix_id":"F-59821r1_fix","documentable":null,"cci":["CCI-000366"],"nist":["CM-6 b"]}},{"id":"SV-69207","code":"control 'SV-69207' do\n  title 'The private keys corresponding to both the ZSK and the KSK must not be kept on the DNSSEC-aware primary authoritative name server when the name server does not support dynamic updates.'\n  desc 'The private keys in the KSK and ZSK key pairs must be protected from unauthorized access. If possible, the private keys should be stored off-line (with respect to the Internet-facing, DNSSEC-aware name server) in a physically secure, non-network-accessible machine along with the zone file master copy. \n\nThis strategy is not feasible in situations in which the DNSSEC-aware name server has to support dynamic updates. To support dynamic update transactions, the DNSSEC-aware name server (which usually is a primary authoritative name server) has to have both the zone file master copy and the private key corresponding to the zone-signing key (ZSK-private) online to immediately update the signatures for the updated RRsets. The private key corresponding to the key-signing key (KSK-private) can still be kept off-line.'\n  desc 'check', 'Review the DNS name server and documentation to determine whether it accepts dynamic updates. If dynamic updates are not accepted, verify the private keys corresponding to both the ZSK (Zone Signing Key) and KSK (Key Signing Key) are not located on the name server.\n\nIf the private keys to the ZSK and/or the KSK are located on the name server, this is a finding.'\n  desc 'fix', 'Store the private keys of the ZSK and KSK off-line in an encrypted file system.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55587r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54961'\n  tag rid: 'SV-69207r1_rule'\n  tag stig_id: 'SRG-APP-000516-DNS-000112'\n  tag gtitle: 'SRG-APP-000516-DNS-000112'\n  tag fix_id: 'F-59823r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000366']\n  tag nist: ['CM-6 b']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69207.rb"},"title":"The private keys corresponding to both the ZSK and the KSK must not be kept on the DNSSEC-aware primary authoritative name server when the name server does not support dynamic updates.","desc":"The private keys in the KSK and ZSK key pairs must be protected from unauthorized access. If possible, the private keys should be stored off-line (with respect to the Internet-facing, DNSSEC-aware name server) in a physically secure, non-network-accessible machine along with the zone file master copy. \n\nThis strategy is not feasible in situations in which the DNSSEC-aware name server has to support dynamic updates. To support dynamic update transactions, the DNSSEC-aware name server (which usually is a primary authoritative name server) has to have both the zone file master copy and the private key corresponding to the zone-signing key (ZSK-private) online to immediately update the signatures for the updated RRsets. The private key corresponding to the key-signing key (KSK-private) can still be kept off-line.","descriptions":{"default":"The private keys in the KSK and ZSK key pairs must be protected from unauthorized access. If possible, the private keys should be stored off-line (with respect to the Internet-facing, DNSSEC-aware name server) in a physically secure, non-network-accessible machine along with the zone file master copy. \n\nThis strategy is not feasible in situations in which the DNSSEC-aware name server has to support dynamic updates. To support dynamic update transactions, the DNSSEC-aware name server (which usually is a primary authoritative name server) has to have both the zone file master copy and the private key corresponding to the zone-signing key (ZSK-private) online to immediately update the signatures for the updated RRsets. The private key corresponding to the key-signing key (KSK-private) can still be kept off-line.","check":"Review the DNS name server and documentation to determine whether it accepts dynamic updates. If dynamic updates are not accepted, verify the private keys corresponding to both the ZSK (Zone Signing Key) and KSK (Key Signing Key) are not located on the name server.\n\nIf the private keys to the ZSK and/or the KSK are located on the name server, this is a finding.","fix":"Store the private keys of the ZSK and KSK off-line in an encrypted file system."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55587r1_chk","severity":"medium","gid":"V-54961","rid":"SV-69207r1_rule","stig_id":"SRG-APP-000516-DNS-000112","gtitle":"SRG-APP-000516-DNS-000112","fix_id":"F-59823r1_fix","documentable":null,"cci":["CCI-000366"],"nist":["CM-6 b"]}},{"id":"SV-69209","code":"control 'SV-69209' do\n  title 'A zone file must not include resource records that resolve to a fully qualified domain name residing in another zone.'\n  desc \"If a name server were able to claim authority for a resource record in a domain for which it was not authoritative, this would pose a security risk. In this environment, an adversary could use illicit control of a name server to impact IP address resolution beyond the scope of that name server (i.e., by claiming authority for records outside of that server's zones). Fortunately, all but the oldest versions of BIND and most other DNS implementations do not allow for this behavior. Nevertheless, the best way to eliminate this risk is to eliminate from the zone files any records for hosts in another zone.\n\nThe exceptions are glue records supporting zone delegations, CNAME records supporting a system migration, or CNAME records that point to third-party Content Delivery Networks (CDN) or cloud computing platforms.  In the case of third-party CDNs or cloud offerings, an approved mission need must be demonstrated.\"\n  desc 'check', 'Review the zone files and confirm with the DNS administrator that the hosts defined in the zone files do not resolve to hosts in another zone with its fully qualified domain name.\n\nThe exceptions are glue records supporting zone delegations, CNAME records supporting a system migration, or CNAME records that point to third party Content Delivery Networks (CDN) or cloud computing platforms. In the case of third-party CDNs or cloud offerings, an approved mission need must be demonstrated.\n\nIf resource records are maintained that resolve to a fully qualified domain name in another zone, and the usage is not for resource records resolving to hosts that are glue records supporting zone delegations, CNAME records supporting a system migration, or CNAME records that point to third-party Content Delivery Networks (CDN) or cloud computing platforms with a documented and approved mission need, this is a finding.'\n  desc 'fix', 'Remove any resource records in a zone file if the resource record resolves to a fully qualified domain name residing in another zone.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55589r2_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54963'\n  tag rid: 'SV-69209r1_rule'\n  tag stig_id: 'SRG-APP-000516-DNS-000113'\n  tag gtitle: 'SRG-APP-000516-DNS-000113'\n  tag fix_id: 'F-59825r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000366']\n  tag nist: ['CM-6 b']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69209.rb"},"title":"A zone file must not include resource records that resolve to a fully qualified domain name residing in another zone.","desc":"If a name server were able to claim authority for a resource record in a domain for which it was not authoritative, this would pose a security risk. In this environment, an adversary could use illicit control of a name server to impact IP address resolution beyond the scope of that name server (i.e., by claiming authority for records outside of that server's zones). Fortunately, all but the oldest versions of BIND and most other DNS implementations do not allow for this behavior. Nevertheless, the best way to eliminate this risk is to eliminate from the zone files any records for hosts in another zone.\n\nThe exceptions are glue records supporting zone delegations, CNAME records supporting a system migration, or CNAME records that point to third-party Content Delivery Networks (CDN) or cloud computing platforms.  In the case of third-party CDNs or cloud offerings, an approved mission need must be demonstrated.","descriptions":{"default":"If a name server were able to claim authority for a resource record in a domain for which it was not authoritative, this would pose a security risk. In this environment, an adversary could use illicit control of a name server to impact IP address resolution beyond the scope of that name server (i.e., by claiming authority for records outside of that server's zones). Fortunately, all but the oldest versions of BIND and most other DNS implementations do not allow for this behavior. Nevertheless, the best way to eliminate this risk is to eliminate from the zone files any records for hosts in another zone.\n\nThe exceptions are glue records supporting zone delegations, CNAME records supporting a system migration, or CNAME records that point to third-party Content Delivery Networks (CDN) or cloud computing platforms.  In the case of third-party CDNs or cloud offerings, an approved mission need must be demonstrated.","check":"Review the zone files and confirm with the DNS administrator that the hosts defined in the zone files do not resolve to hosts in another zone with its fully qualified domain name.\n\nThe exceptions are glue records supporting zone delegations, CNAME records supporting a system migration, or CNAME records that point to third party Content Delivery Networks (CDN) or cloud computing platforms. In the case of third-party CDNs or cloud offerings, an approved mission need must be demonstrated.\n\nIf resource records are maintained that resolve to a fully qualified domain name in another zone, and the usage is not for resource records resolving to hosts that are glue records supporting zone delegations, CNAME records supporting a system migration, or CNAME records that point to third-party Content Delivery Networks (CDN) or cloud computing platforms with a documented and approved mission need, this is a finding.","fix":"Remove any resource records in a zone file if the resource record resolves to a fully qualified domain name residing in another zone."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55589r2_chk","severity":"medium","gid":"V-54963","rid":"SV-69209r1_rule","stig_id":"SRG-APP-000516-DNS-000113","gtitle":"SRG-APP-000516-DNS-000113","fix_id":"F-59825r1_fix","documentable":null,"cci":["CCI-000366"],"nist":["CM-6 b"]}},{"id":"SV-69211","code":"control 'SV-69211' do\n  title 'CNAME records must not point to a zone with lesser security for more than six months.'\n  desc \"The use of CNAME records for exercises, tests, or zone-spanning aliases should be temporary (e.g., to facilitate a migration). When a host name is an alias for a record in another zone, an adversary has two points of attack: the zone in which the alias is defined and the zone authoritative for the alias's canonical name. This configuration also reduces the speed of client resolution because it requires a second lookup after obtaining the canonical name. Furthermore, in the case of an authoritative name server, this information is promulgated throughout the enterprise to caching servers and thus compounds the vulnerability.\"\n  desc 'check', \"Review the DNS server's hosted zones and respective records. Within the zone statement will be a file option that will display the name of the zone file. The record type column will display CNAME. This is usually the third or fourth field in a record depending on whether the TTL value is utilized. Without a TTL value, the CNAME type will be in the third field; otherwise, it will display as the fourth field.\n\nReview the zone files and the DNS zone record documentation to confirm that there are no CNAME records older than 6 months.\n\nThe exceptions are glue records supporting zone delegations, CNAME records supporting a system migration, or CNAME records that point to third party Content Delivery Networks (CDN) or cloud computing platforms.  In the case of third-party CDNs or cloud offerings, an approved mission need must be demonstrated (AO approval of use of a commercial cloud offering would satisfy this requirement).\n\nIf there are zone-spanning CNAME records older than 6 months and the CNAME records resolves to anything other than fully qualified domain name for glue records supporting zone delegations, CNAME records supporting a system migration, or CNAME records that point to third-party Content Delivery Networks (CDN) or cloud computing platforms with a AO-approved and documented mission need, this is a finding.\"\n  desc 'fix', 'Remove any zone-spanning CNAME records that have been active for more than six months.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55591r3_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54965'\n  tag rid: 'SV-69211r1_rule'\n  tag stig_id: 'SRG-APP-000516-DNS-000114'\n  tag gtitle: 'SRG-APP-000516-DNS-000114'\n  tag fix_id: 'F-59827r2_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000366']\n  tag nist: ['CM-6 b']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69211.rb"},"title":"CNAME records must not point to a zone with lesser security for more than six months.","desc":"The use of CNAME records for exercises, tests, or zone-spanning aliases should be temporary (e.g., to facilitate a migration). When a host name is an alias for a record in another zone, an adversary has two points of attack: the zone in which the alias is defined and the zone authoritative for the alias's canonical name. This configuration also reduces the speed of client resolution because it requires a second lookup after obtaining the canonical name. Furthermore, in the case of an authoritative name server, this information is promulgated throughout the enterprise to caching servers and thus compounds the vulnerability.","descriptions":{"default":"The use of CNAME records for exercises, tests, or zone-spanning aliases should be temporary (e.g., to facilitate a migration). When a host name is an alias for a record in another zone, an adversary has two points of attack: the zone in which the alias is defined and the zone authoritative for the alias's canonical name. This configuration also reduces the speed of client resolution because it requires a second lookup after obtaining the canonical name. Furthermore, in the case of an authoritative name server, this information is promulgated throughout the enterprise to caching servers and thus compounds the vulnerability.","check":"Review the DNS server's hosted zones and respective records. Within the zone statement will be a file option that will display the name of the zone file. The record type column will display CNAME. This is usually the third or fourth field in a record depending on whether the TTL value is utilized. Without a TTL value, the CNAME type will be in the third field; otherwise, it will display as the fourth field.\n\nReview the zone files and the DNS zone record documentation to confirm that there are no CNAME records older than 6 months.\n\nThe exceptions are glue records supporting zone delegations, CNAME records supporting a system migration, or CNAME records that point to third party Content Delivery Networks (CDN) or cloud computing platforms.  In the case of third-party CDNs or cloud offerings, an approved mission need must be demonstrated (AO approval of use of a commercial cloud offering would satisfy this requirement).\n\nIf there are zone-spanning CNAME records older than 6 months and the CNAME records resolves to anything other than fully qualified domain name for glue records supporting zone delegations, CNAME records supporting a system migration, or CNAME records that point to third-party Content Delivery Networks (CDN) or cloud computing platforms with a AO-approved and documented mission need, this is a finding.","fix":"Remove any zone-spanning CNAME records that have been active for more than six months."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55591r3_chk","severity":"medium","gid":"V-54965","rid":"SV-69211r1_rule","stig_id":"SRG-APP-000516-DNS-000114","gtitle":"SRG-APP-000516-DNS-000114","fix_id":"F-59827r2_fix","documentable":null,"cci":["CCI-000366"],"nist":["CM-6 b"]}},{"id":"SV-69213","code":"control 'SV-69213' do\n  title 'All authoritative name servers for a zone must be geographically disbursed.'\n  desc %q(In addition to network-based dispersion, authoritative name servers should be dispersed geographically as well. In other words, in addition to being located on different network segments, the authoritative name servers should not all be located within the same building. One approach that some organizations follow is to locate some authoritative name servers in their own premises and others in their ISPs' data centers or in partnering organizations.\n\nA network administrator may choose to use a \"hidden\" master authoritative server and only have secondary servers visible on the network. A hidden master authoritative server is an authoritative DNS server whose IP address does not appear in the name server set for a zone.  If the master authoritative name server is \"hidden\", a secondary authoritative name server may reside in the same building as the hidden master.)\n  desc 'check', 'Review the NS records for each zone hosted and confirm that each authoritative name server is located at a different physical location than the remaining name servers.\n\nIf the master, or primary, authoritative name server is configured to be \"hidden\", it will not have an NS record. One other name server may be at the same physical location as the hidden name server.\n\nIf all name servers, for which NS records are listed, are not physically at different locations, this is a finding.'\n  desc 'fix', 'Physically move name servers so that they are geographically at different locations. If moving a name server is not feasible, one of the co-located name servers could be reconfigured to be hidden.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55593r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54967'\n  tag rid: 'SV-69213r1_rule'\n  tag stig_id: 'SRG-APP-000218-DNS-000027'\n  tag gtitle: 'SRG-APP-000218-DNS-000027'\n  tag fix_id: 'F-59829r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000366']\n  tag nist: ['CM-6 b']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69213.rb"},"title":"All authoritative name servers for a zone must be geographically disbursed.","desc":"In addition to network-based dispersion, authoritative name servers should be dispersed geographically as well. In other words, in addition to being located on different network segments, the authoritative name servers should not all be located within the same building. One approach that some organizations follow is to locate some authoritative name servers in their own premises and others in their ISPs' data centers or in partnering organizations.\n\nA network administrator may choose to use a \"hidden\" master authoritative server and only have secondary servers visible on the network. A hidden master authoritative server is an authoritative DNS server whose IP address does not appear in the name server set for a zone.  If the master authoritative name server is \"hidden\", a secondary authoritative name server may reside in the same building as the hidden master.","descriptions":{"default":"In addition to network-based dispersion, authoritative name servers should be dispersed geographically as well. In other words, in addition to being located on different network segments, the authoritative name servers should not all be located within the same building. One approach that some organizations follow is to locate some authoritative name servers in their own premises and others in their ISPs' data centers or in partnering organizations.\n\nA network administrator may choose to use a \"hidden\" master authoritative server and only have secondary servers visible on the network. A hidden master authoritative server is an authoritative DNS server whose IP address does not appear in the name server set for a zone.  If the master authoritative name server is \"hidden\", a secondary authoritative name server may reside in the same building as the hidden master.","check":"Review the NS records for each zone hosted and confirm that each authoritative name server is located at a different physical location than the remaining name servers.\n\nIf the master, or primary, authoritative name server is configured to be \"hidden\", it will not have an NS record. One other name server may be at the same physical location as the hidden name server.\n\nIf all name servers, for which NS records are listed, are not physically at different locations, this is a finding.","fix":"Physically move name servers so that they are geographically at different locations. If moving a name server is not feasible, one of the co-located name servers could be reconfigured to be hidden."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55593r1_chk","severity":"medium","gid":"V-54967","rid":"SV-69213r1_rule","stig_id":"SRG-APP-000218-DNS-000027","gtitle":"SRG-APP-000218-DNS-000027","fix_id":"F-59829r1_fix","documentable":null,"cci":["CCI-000366"],"nist":["CM-6 b"]}},{"id":"SV-69215","code":"control 'SV-69215' do\n  title 'The DNS server implementation must, when a component failure is detected, activate a notification to the system administrator.'\n  desc 'Predictable failure prevention requires organizational planning to address system failure issues. If components key to maintaining systems security fail to function, the system could continue operating in an insecure state. The organization must be prepared and the application must support requirements that specify if the application must alarm for such conditions and/or automatically shut down the application or the system. \n\nThis can include conducting a graceful application shutdown to avoid losing information. Automatic or manual transfer of components from standby to active mode can occur, for example, upon detection of component failures.\n\nIf a component such as the DNSSEC or TSIG/SIG(0) signing capabilities were to fail, the DNS server should shut itself down to prevent continued execution without the necessary security components in place. Transactions such as zone transfers would not be able to work correctly anyway in this state.'\n  desc 'check', 'Review the DNS server implementation configuration to determine if the DNS server activates a notification to the system administrator when a component failure is detected. \n\nIf the DNS server does not activate a notification to the system administrator when a failure is detected, this is a finding.'\n  desc 'fix', 'Configure the DNS server so that when a component failure is detected, the server activates a notification to the system administrator.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55595r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54969'\n  tag rid: 'SV-69215r1_rule'\n  tag stig_id: 'SRG-APP-000268-DNS-000039'\n  tag gtitle: 'SRG-APP-000268-DNS-000039'\n  tag fix_id: 'F-59831r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000366', 'CCI-001328']\n  tag nist: ['CM-6 b', 'SI-13 (4) (b)']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69215.rb"},"title":"The DNS server implementation must, when a component failure is detected, activate a notification to the system administrator.","desc":"Predictable failure prevention requires organizational planning to address system failure issues. If components key to maintaining systems security fail to function, the system could continue operating in an insecure state. The organization must be prepared and the application must support requirements that specify if the application must alarm for such conditions and/or automatically shut down the application or the system. \n\nThis can include conducting a graceful application shutdown to avoid losing information. Automatic or manual transfer of components from standby to active mode can occur, for example, upon detection of component failures.\n\nIf a component such as the DNSSEC or TSIG/SIG(0) signing capabilities were to fail, the DNS server should shut itself down to prevent continued execution without the necessary security components in place. Transactions such as zone transfers would not be able to work correctly anyway in this state.","descriptions":{"default":"Predictable failure prevention requires organizational planning to address system failure issues. If components key to maintaining systems security fail to function, the system could continue operating in an insecure state. The organization must be prepared and the application must support requirements that specify if the application must alarm for such conditions and/or automatically shut down the application or the system. \n\nThis can include conducting a graceful application shutdown to avoid losing information. Automatic or manual transfer of components from standby to active mode can occur, for example, upon detection of component failures.\n\nIf a component such as the DNSSEC or TSIG/SIG(0) signing capabilities were to fail, the DNS server should shut itself down to prevent continued execution without the necessary security components in place. Transactions such as zone transfers would not be able to work correctly anyway in this state.","check":"Review the DNS server implementation configuration to determine if the DNS server activates a notification to the system administrator when a component failure is detected. \n\nIf the DNS server does not activate a notification to the system administrator when a failure is detected, this is a finding.","fix":"Configure the DNS server so that when a component failure is detected, the server activates a notification to the system administrator."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55595r1_chk","severity":"medium","gid":"V-54969","rid":"SV-69215r1_rule","stig_id":"SRG-APP-000268-DNS-000039","gtitle":"SRG-APP-000268-DNS-000039","fix_id":"F-59831r1_fix","documentable":null,"cci":["CCI-000366","CCI-001328"],"nist":["CM-6 b","SI-13 (4) (b)"]}},{"id":"SV-69217","code":"control 'SV-69217' do\n  title 'The DNS server implementation must strongly bind the identity of the DNS server with the DNS information.'\n  desc 'Weakly bound credentials can be modified without invalidating the credential; therefore, non-repudiation can be violated.\n\nThis requirement supports audit requirements that provide organizational personnel with the means to identify who produced specific information in the event of an information transfer. Organizations and/or data owners determine and approve the strength of the binding between the information producer and the information based on the security category of the information and relevant risk factors.\n\nDNSSEC and TSIG/SIG(0) both use digital signatures to establish the identity of the producer of particular pieces of information.'\n  desc 'check', 'Review the DNS server implementation configuration to determine if the DNS server strongly binds the identity of the DNS server with the DNS information. Examples include enabling DNSSEC and enabling TSIG or SIG(0). If the DNS server does not strongly bind the identity of the DNS server with the DNS information, this is a finding.'\n  desc 'fix', 'Configure the DNS server to strongly bind the identity of the DNS server with the DNS information.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55597r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54971'\n  tag rid: 'SV-69217r1_rule'\n  tag stig_id: 'SRG-APP-000347-DNS-000041'\n  tag gtitle: 'SRG-APP-000347-DNS-000041'\n  tag fix_id: 'F-59833r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000366', 'CCI-001901']\n  tag nist: ['CM-6 b', 'AU-10 (1) (a)']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69217.rb"},"title":"The DNS server implementation must strongly bind the identity of the DNS server with the DNS information.","desc":"Weakly bound credentials can be modified without invalidating the credential; therefore, non-repudiation can be violated.\n\nThis requirement supports audit requirements that provide organizational personnel with the means to identify who produced specific information in the event of an information transfer. Organizations and/or data owners determine and approve the strength of the binding between the information producer and the information based on the security category of the information and relevant risk factors.\n\nDNSSEC and TSIG/SIG(0) both use digital signatures to establish the identity of the producer of particular pieces of information.","descriptions":{"default":"Weakly bound credentials can be modified without invalidating the credential; therefore, non-repudiation can be violated.\n\nThis requirement supports audit requirements that provide organizational personnel with the means to identify who produced specific information in the event of an information transfer. Organizations and/or data owners determine and approve the strength of the binding between the information producer and the information based on the security category of the information and relevant risk factors.\n\nDNSSEC and TSIG/SIG(0) both use digital signatures to establish the identity of the producer of particular pieces of information.","check":"Review the DNS server implementation configuration to determine if the DNS server strongly binds the identity of the DNS server with the DNS information. Examples include enabling DNSSEC and enabling TSIG or SIG(0). If the DNS server does not strongly bind the identity of the DNS server with the DNS information, this is a finding.","fix":"Configure the DNS server to strongly bind the identity of the DNS server with the DNS information."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55597r1_chk","severity":"medium","gid":"V-54971","rid":"SV-69217r1_rule","stig_id":"SRG-APP-000347-DNS-000041","gtitle":"SRG-APP-000347-DNS-000041","fix_id":"F-59833r1_fix","documentable":null,"cci":["CCI-000366","CCI-001901"],"nist":["CM-6 b","AU-10 (1) (a)"]}},{"id":"SV-69219","code":"control 'SV-69219' do\n  title 'The DNS server implementation must provide the means for authorized individuals to determine the identity of the source of the DNS server-provided information.'\n  desc 'Without a means for identifying the individual that produced the information, the information cannot be relied upon. Identifying the validity of information may be delayed or deterred.\n\nThis requirement provides organizational personnel with the means to identify who produced specific information in the event of an information transfer. DNSSEC and TSIG/SIG(0) both use digital signatures to establish the identity of the producer of particular pieces of information. These signatures can be examined and verified to determine the identity of the producer of the information.'\n  desc 'check', 'Review the DNS server implementation configuration to determine if the DNS server provides the means for authorized individuals to determine the identity of the source of the DNS server-provided information. If the DNS server does not provide such means, this is a finding.'\n  desc 'fix', 'Configure the DNS server to provide the means for authorized individuals to determine the identity of the source of the DNS server-provided information.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55599r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54973'\n  tag rid: 'SV-69219r1_rule'\n  tag stig_id: 'SRG-APP-000348-DNS-000042'\n  tag gtitle: 'SRG-APP-000348-DNS-000042'\n  tag fix_id: 'F-59835r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000366', 'CCI-001902']\n  tag nist: ['CM-6 b', 'AU-10 (1) (b)']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69219.rb"},"title":"The DNS server implementation must provide the means for authorized individuals to determine the identity of the source of the DNS server-provided information.","desc":"Without a means for identifying the individual that produced the information, the information cannot be relied upon. Identifying the validity of information may be delayed or deterred.\n\nThis requirement provides organizational personnel with the means to identify who produced specific information in the event of an information transfer. DNSSEC and TSIG/SIG(0) both use digital signatures to establish the identity of the producer of particular pieces of information. These signatures can be examined and verified to determine the identity of the producer of the information.","descriptions":{"default":"Without a means for identifying the individual that produced the information, the information cannot be relied upon. Identifying the validity of information may be delayed or deterred.\n\nThis requirement provides organizational personnel with the means to identify who produced specific information in the event of an information transfer. DNSSEC and TSIG/SIG(0) both use digital signatures to establish the identity of the producer of particular pieces of information. These signatures can be examined and verified to determine the identity of the producer of the information.","check":"Review the DNS server implementation configuration to determine if the DNS server provides the means for authorized individuals to determine the identity of the source of the DNS server-provided information. If the DNS server does not provide such means, this is a finding.","fix":"Configure the DNS server to provide the means for authorized individuals to determine the identity of the source of the DNS server-provided information."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55599r1_chk","severity":"medium","gid":"V-54973","rid":"SV-69219r1_rule","stig_id":"SRG-APP-000348-DNS-000042","gtitle":"SRG-APP-000348-DNS-000042","fix_id":"F-59835r1_fix","documentable":null,"cci":["CCI-000366","CCI-001902"],"nist":["CM-6 b","AU-10 (1) (b)"]}},{"id":"SV-69221","code":"control 'SV-69221' do\n  title 'The DNS server implementation must validate the binding of the other DNS servers identity to the DNS information for a server-to-server transaction (e.g., zone transfer).'\n  desc \"Validation of the binding of the information prevents the modification of information between production and review. The validation of bindings can be achieved, for example, by the use of cryptographic checksums. Validations must be performed automatically.\n\nDNSSEC and TSIG/SIG(0) technologies are not effective unless the digital signatures they generate are validated to ensure that the information has not been tampered with and that the producer's identity is legitimate.\"\n  desc 'check', \"Review the DNS server implementation configuration to determine if the DNS server validates the binding of the other DNS server's identity to the DNS information for a server-to-server transaction (e.g., zone transfer). If the DNS server does not validate the binding of the other DNS server's identity to the DNS information, this is a finding.\"\n  desc 'fix', \"Configure the DNS server to validate the binding of the other DNS server's identity to the DNS information for a server-to-server transaction (e.g., zone transfer).\"\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55601r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54975'\n  tag rid: 'SV-69221r1_rule'\n  tag stig_id: 'SRG-APP-000349-DNS-000043'\n  tag gtitle: 'SRG-APP-000349-DNS-000043'\n  tag fix_id: 'F-59837r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000366', 'CCI-001904']\n  tag nist: ['CM-6 b', 'AU-10 (2) (a)']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69221.rb"},"title":"The DNS server implementation must validate the binding of the other DNS servers identity to the DNS information for a server-to-server transaction (e.g., zone transfer).","desc":"Validation of the binding of the information prevents the modification of information between production and review. The validation of bindings can be achieved, for example, by the use of cryptographic checksums. Validations must be performed automatically.\n\nDNSSEC and TSIG/SIG(0) technologies are not effective unless the digital signatures they generate are validated to ensure that the information has not been tampered with and that the producer's identity is legitimate.","descriptions":{"default":"Validation of the binding of the information prevents the modification of information between production and review. The validation of bindings can be achieved, for example, by the use of cryptographic checksums. Validations must be performed automatically.\n\nDNSSEC and TSIG/SIG(0) technologies are not effective unless the digital signatures they generate are validated to ensure that the information has not been tampered with and that the producer's identity is legitimate.","check":"Review the DNS server implementation configuration to determine if the DNS server validates the binding of the other DNS server's identity to the DNS information for a server-to-server transaction (e.g., zone transfer). If the DNS server does not validate the binding of the other DNS server's identity to the DNS information, this is a finding.","fix":"Configure the DNS server to validate the binding of the other DNS server's identity to the DNS information for a server-to-server transaction (e.g., zone transfer)."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55601r1_chk","severity":"medium","gid":"V-54975","rid":"SV-69221r1_rule","stig_id":"SRG-APP-000349-DNS-000043","gtitle":"SRG-APP-000349-DNS-000043","fix_id":"F-59837r1_fix","documentable":null,"cci":["CCI-000366","CCI-001904"],"nist":["CM-6 b","AU-10 (2) (a)"]}},{"id":"SV-69223","code":"control 'SV-69223' do\n  title 'In the event of an error when validating the binding of another DNS servers identity to the DNS information, the DNS server implementation must log the event and send notification to the DNS administrator.'\n  desc \"Failing to act on the validation errors may result in the use of invalid, corrupted, or compromised information. The validation of bindings can be achieved, for example, by the use of cryptographic checksums. Validations must be performed automatically.\n\nAt a minimum, the application must log the validation error. However, more stringent actions can be taken based on the security posture and value of the information. The organization should consider the system's environment and impact of the errors when defining the actions. Additional examples of actions include automated notification to administrators, halting system process, or halting the specific operation.\n\nThe DNS server should audit all failed attempts at server authentication through DNSSEC and TSIG/SIG(0). The actual auditing is performed by the OS/NDM but the configuration to trigger the auditing is controlled by the DNS server.\"\n  desc 'check', \"Review the DNS server implementation configuration to determine if the DNS server, when it encounters an event or an error when validating the binding of another DNS server's identity to the DNS information, is configured to log the event and send notification to the DNS administrator.\n\nIf the DNS server does not log the event and send notification to the DNS administrator in the event of such a validation error, this is a finding.\"\n  desc 'fix', \"Configure the DNS server to log the event and send notification to the DNS administrator in the event an error occurs when validating the binding of another DNS server's identity to the DNS information.\"\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55603r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54977'\n  tag rid: 'SV-69223r1_rule'\n  tag stig_id: 'SRG-APP-000350-DNS-000044'\n  tag gtitle: 'SRG-APP-000350-DNS-000044'\n  tag fix_id: 'F-59839r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000366', 'CCI-001906']\n  tag nist: ['CM-6 b', 'AU-10 (2) (b)']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69223.rb"},"title":"In the event of an error when validating the binding of another DNS servers identity to the DNS information, the DNS server implementation must log the event and send notification to the DNS administrator.","desc":"Failing to act on the validation errors may result in the use of invalid, corrupted, or compromised information. The validation of bindings can be achieved, for example, by the use of cryptographic checksums. Validations must be performed automatically.\n\nAt a minimum, the application must log the validation error. However, more stringent actions can be taken based on the security posture and value of the information. The organization should consider the system's environment and impact of the errors when defining the actions. Additional examples of actions include automated notification to administrators, halting system process, or halting the specific operation.\n\nThe DNS server should audit all failed attempts at server authentication through DNSSEC and TSIG/SIG(0). The actual auditing is performed by the OS/NDM but the configuration to trigger the auditing is controlled by the DNS server.","descriptions":{"default":"Failing to act on the validation errors may result in the use of invalid, corrupted, or compromised information. The validation of bindings can be achieved, for example, by the use of cryptographic checksums. Validations must be performed automatically.\n\nAt a minimum, the application must log the validation error. However, more stringent actions can be taken based on the security posture and value of the information. The organization should consider the system's environment and impact of the errors when defining the actions. Additional examples of actions include automated notification to administrators, halting system process, or halting the specific operation.\n\nThe DNS server should audit all failed attempts at server authentication through DNSSEC and TSIG/SIG(0). The actual auditing is performed by the OS/NDM but the configuration to trigger the auditing is controlled by the DNS server.","check":"Review the DNS server implementation configuration to determine if the DNS server, when it encounters an event or an error when validating the binding of another DNS server's identity to the DNS information, is configured to log the event and send notification to the DNS administrator.\n\nIf the DNS server does not log the event and send notification to the DNS administrator in the event of such a validation error, this is a finding.","fix":"Configure the DNS server to log the event and send notification to the DNS administrator in the event an error occurs when validating the binding of another DNS server's identity to the DNS information."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55603r1_chk","severity":"medium","gid":"V-54977","rid":"SV-69223r1_rule","stig_id":"SRG-APP-000350-DNS-000044","gtitle":"SRG-APP-000350-DNS-000044","fix_id":"F-59839r1_fix","documentable":null,"cci":["CCI-000366","CCI-001906"],"nist":["CM-6 b","AU-10 (2) (b)"]}},{"id":"SV-69225","code":"control 'SV-69225' do\n  title 'Digital signature algorithm used for DNSSEC-enabled zones must be FIPS-compatible.'\n  desc \"The choice of digital signature algorithm will be based on recommended algorithms in well-known standards. NIST's Digital Signature Standard (DSS) [FIPS186] provides three algorithm choices:\n* Digital Signature Algorithm (DSA)\n* RSA\n* Elliptic Curve DSA (ECDSA).\nOf these three algorithms, RSA and DSA are more widely available and hence are considered candidates of choice for DNSSEC. In terms of performance, both RSA and DSA have comparable signature generation speeds, but DSA is much slower for signature verification. Hence, RSA is the recommended algorithm as far as this guideline is concerned. RSA with SHA-1 is currently the only cryptographic algorithm mandated to be implemented with DNSSEC, although other algorithm suites (i.e. RSA/SHA-256, ECDSA) are also specified. It can be expected that name servers and clients will be able to use the RSA algorithm at the minimum. It is suggested that at least one ZSK for a zone use the RSA algorithm.\nNIST's Secure Hash Standard (SHS) (FIPS 180-3) specifies SHA-1, SHA-224, SHA-256, SHA-384, and SHA-512 as approved hash algorithms to be used as part of the algorithm suite for generating digital signatures using the digital signature algorithms in NIST's DSS[FIPS186]. It is expected that there will be support for Elliptic Curve Cryptography in the DNSSEC. The migration path for USG DNSSEC operation will be to ECDSA (or similar) from RSA/SHA-1 and RSA/SHA-256 before September 30th, 2015.\"\n  desc 'check', 'Review the DNS implementation and documentation. Confirm the signature algorithm used for DNSSEC-enabled zones is FIPS-compatible.\n\nIf the signature algorithm used for DNSSEC-enabled zones is not FIPS-compatible, this is a finding.'\n  desc 'fix', 'Regenerate signatures for all DNSSEC-enabled zones with FIPS-compatible algorithms.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55605r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-54979'\n  tag rid: 'SV-69225r1_rule'\n  tag stig_id: 'SRG-APP-000516-DNS-000090'\n  tag gtitle: 'SRG-APP-000516-DNS-000090'\n  tag fix_id: 'F-59841r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000366']\n  tag nist: ['CM-6 b']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69225.rb"},"title":"Digital signature algorithm used for DNSSEC-enabled zones must be FIPS-compatible.","desc":"The choice of digital signature algorithm will be based on recommended algorithms in well-known standards. NIST's Digital Signature Standard (DSS) [FIPS186] provides three algorithm choices:\n* Digital Signature Algorithm (DSA)\n* RSA\n* Elliptic Curve DSA (ECDSA).\nOf these three algorithms, RSA and DSA are more widely available and hence are considered candidates of choice for DNSSEC. In terms of performance, both RSA and DSA have comparable signature generation speeds, but DSA is much slower for signature verification. Hence, RSA is the recommended algorithm as far as this guideline is concerned. RSA with SHA-1 is currently the only cryptographic algorithm mandated to be implemented with DNSSEC, although other algorithm suites (i.e. RSA/SHA-256, ECDSA) are also specified. It can be expected that name servers and clients will be able to use the RSA algorithm at the minimum. It is suggested that at least one ZSK for a zone use the RSA algorithm.\nNIST's Secure Hash Standard (SHS) (FIPS 180-3) specifies SHA-1, SHA-224, SHA-256, SHA-384, and SHA-512 as approved hash algorithms to be used as part of the algorithm suite for generating digital signatures using the digital signature algorithms in NIST's DSS[FIPS186]. It is expected that there will be support for Elliptic Curve Cryptography in the DNSSEC. The migration path for USG DNSSEC operation will be to ECDSA (or similar) from RSA/SHA-1 and RSA/SHA-256 before September 30th, 2015.","descriptions":{"default":"The choice of digital signature algorithm will be based on recommended algorithms in well-known standards. NIST's Digital Signature Standard (DSS) [FIPS186] provides three algorithm choices:\n* Digital Signature Algorithm (DSA)\n* RSA\n* Elliptic Curve DSA (ECDSA).\nOf these three algorithms, RSA and DSA are more widely available and hence are considered candidates of choice for DNSSEC. In terms of performance, both RSA and DSA have comparable signature generation speeds, but DSA is much slower for signature verification. Hence, RSA is the recommended algorithm as far as this guideline is concerned. RSA with SHA-1 is currently the only cryptographic algorithm mandated to be implemented with DNSSEC, although other algorithm suites (i.e. RSA/SHA-256, ECDSA) are also specified. It can be expected that name servers and clients will be able to use the RSA algorithm at the minimum. It is suggested that at least one ZSK for a zone use the RSA algorithm.\nNIST's Secure Hash Standard (SHS) (FIPS 180-3) specifies SHA-1, SHA-224, SHA-256, SHA-384, and SHA-512 as approved hash algorithms to be used as part of the algorithm suite for generating digital signatures using the digital signature algorithms in NIST's DSS[FIPS186]. It is expected that there will be support for Elliptic Curve Cryptography in the DNSSEC. The migration path for USG DNSSEC operation will be to ECDSA (or similar) from RSA/SHA-1 and RSA/SHA-256 before September 30th, 2015.","check":"Review the DNS implementation and documentation. Confirm the signature algorithm used for DNSSEC-enabled zones is FIPS-compatible.\n\nIf the signature algorithm used for DNSSEC-enabled zones is not FIPS-compatible, this is a finding.","fix":"Regenerate signatures for all DNSSEC-enabled zones with FIPS-compatible algorithms."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55605r1_chk","severity":"medium","gid":"V-54979","rid":"SV-69225r1_rule","stig_id":"SRG-APP-000516-DNS-000090","gtitle":"SRG-APP-000516-DNS-000090","fix_id":"F-59841r1_fix","documentable":null,"cci":["CCI-000366"],"nist":["CM-6 b"]}},{"id":"SV-69471","code":"control 'SV-69471' do\n  title 'The DNS server implementation must produce audit records containing information to establish when (date and time) the events occurred.'\n  desc 'Without establishing when events occurred, it is impossible to establish, correlate, and investigate the events relating to an incident. \n\nAssociating event types with detected events in the application and audit logs provides a means of investigating an attack, recognizing resource utilization or capacity thresholds, or identifying an improperly configured application. In order to compile an accurate risk assessment and provide forensic analysis, it is essential for security personnel to know when events occurred (date and time).'\n  desc 'check', 'Review the DNS system configuration to determine if it is configured to produce, capture, and store log records that contain information to establish when (date and time) events have occurred on the system. \n\nIf the logging function is not configured to produce log records with information regarding when the event took place, this is a finding.'\n  desc 'fix', 'Configure the DNS server to produce log records that contain information that establishes when (date and time) events have occurred on the system.\n\nAdditionally, configure the audit facility of the DNS system to provide information when events have occurred.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55845r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-55225'\n  tag rid: 'SV-69471r1_rule'\n  tag stig_id: 'SRG-APP-000096-DNS-000007'\n  tag gtitle: 'SRG-APP-000096-DNS-000007'\n  tag fix_id: 'F-60089r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000131']\n  tag nist: ['AU-3 b']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69471.rb"},"title":"The DNS server implementation must produce audit records containing information to establish when (date and time) the events occurred.","desc":"Without establishing when events occurred, it is impossible to establish, correlate, and investigate the events relating to an incident. \n\nAssociating event types with detected events in the application and audit logs provides a means of investigating an attack, recognizing resource utilization or capacity thresholds, or identifying an improperly configured application. In order to compile an accurate risk assessment and provide forensic analysis, it is essential for security personnel to know when events occurred (date and time).","descriptions":{"default":"Without establishing when events occurred, it is impossible to establish, correlate, and investigate the events relating to an incident. \n\nAssociating event types with detected events in the application and audit logs provides a means of investigating an attack, recognizing resource utilization or capacity thresholds, or identifying an improperly configured application. In order to compile an accurate risk assessment and provide forensic analysis, it is essential for security personnel to know when events occurred (date and time).","check":"Review the DNS system configuration to determine if it is configured to produce, capture, and store log records that contain information to establish when (date and time) events have occurred on the system. \n\nIf the logging function is not configured to produce log records with information regarding when the event took place, this is a finding.","fix":"Configure the DNS server to produce log records that contain information that establishes when (date and time) events have occurred on the system.\n\nAdditionally, configure the audit facility of the DNS system to provide information when events have occurred."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55845r1_chk","severity":"medium","gid":"V-55225","rid":"SV-69471r1_rule","stig_id":"SRG-APP-000096-DNS-000007","gtitle":"SRG-APP-000096-DNS-000007","fix_id":"F-60089r1_fix","documentable":null,"cci":["CCI-000131"],"nist":["AU-3 b"]}},{"id":"SV-69473","code":"control 'SV-69473' do\n  title 'The DNS server implementation must utilize cryptographic mechanisms to prevent unauthorized modification of DNS zone data.'\n  desc 'Applications handling data requiring \"data at rest\" protections must employ cryptographic mechanisms to prevent unauthorized disclosure and modification of the information at rest.\n\nSelection of a cryptographic mechanism is based on the need to protect the integrity of organizational information. The strength of the mechanism is commensurate with the security category and/or classification of the information. Organizations have the flexibility to either encrypt all information on storage devices (i.e., full disk encryption) or encrypt specific data structures (e.g., files, records, or fields). \n\nThe DNS server must protect the integrity of keys (for TSIG/SIG(0) and DNSSEC) and DNS information.'\n  desc 'check', 'Review the DNS server implementation configuration to determine if the DNS server utilizes cryptographic mechanisms to prevent unauthorized modification of zone data. If the DNS server does not utilize cryptographic mechanisms to prevent unauthorized modification, this is a finding.'\n  desc 'fix', 'Configure the DNS server to utilize cryptographic mechanisms to prevent unauthorized modification of zone data.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55847r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-55227'\n  tag rid: 'SV-69473r1_rule'\n  tag stig_id: 'SRG-APP-000428-DNS-000061'\n  tag gtitle: 'SRG-APP-000428-DNS-000061'\n  tag fix_id: 'F-60091r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-002475']\n  tag nist: ['SC-28 (1)']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69473.rb"},"title":"The DNS server implementation must utilize cryptographic mechanisms to prevent unauthorized modification of DNS zone data.","desc":"Applications handling data requiring \"data at rest\" protections must employ cryptographic mechanisms to prevent unauthorized disclosure and modification of the information at rest.\n\nSelection of a cryptographic mechanism is based on the need to protect the integrity of organizational information. The strength of the mechanism is commensurate with the security category and/or classification of the information. Organizations have the flexibility to either encrypt all information on storage devices (i.e., full disk encryption) or encrypt specific data structures (e.g., files, records, or fields). \n\nThe DNS server must protect the integrity of keys (for TSIG/SIG(0) and DNSSEC) and DNS information.","descriptions":{"default":"Applications handling data requiring \"data at rest\" protections must employ cryptographic mechanisms to prevent unauthorized disclosure and modification of the information at rest.\n\nSelection of a cryptographic mechanism is based on the need to protect the integrity of organizational information. The strength of the mechanism is commensurate with the security category and/or classification of the information. Organizations have the flexibility to either encrypt all information on storage devices (i.e., full disk encryption) or encrypt specific data structures (e.g., files, records, or fields). \n\nThe DNS server must protect the integrity of keys (for TSIG/SIG(0) and DNSSEC) and DNS information.","check":"Review the DNS server implementation configuration to determine if the DNS server utilizes cryptographic mechanisms to prevent unauthorized modification of zone data. If the DNS server does not utilize cryptographic mechanisms to prevent unauthorized modification, this is a finding.","fix":"Configure the DNS server to utilize cryptographic mechanisms to prevent unauthorized modification of zone data."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55847r1_chk","severity":"medium","gid":"V-55227","rid":"SV-69473r1_rule","stig_id":"SRG-APP-000428-DNS-000061","gtitle":"SRG-APP-000428-DNS-000061","fix_id":"F-60091r1_fix","documentable":null,"cci":["CCI-002475"],"nist":["SC-28 (1)"]}},{"id":"SV-69475","code":"control 'SV-69475' do\n  title 'The DNS server implementation must be configured in accordance with the security configuration settings based on DoD security configuration or implementation guidance, including STIGs, NSA configuration guides, CTOs, and DTMs.'\n  desc 'Configuration settings are the set of parameters that can be changed that affect the security posture and/or functionality of the system. Security-related parameters are those parameters impacting the security state of the application, including the parameters required to satisfy other security control requirements.\n\nConfiguring the DNS server implementation to follow organization-wide security implementation guides and security checklists ensures compliance with federal standards and establishes a common security baseline across DoD that reflects the most restrictive security posture consistent with operational requirements.'\n  desc 'check', 'Review the DNS server implementation configuration to determine if the DNS server is configured in accordance with the security configuration settings based on DoD security configuration or implementation guidance, including STIGs, NSA configuration guides, CTOs, and DTMs. If the DNS server is not configured in accordance with these settings, this is a finding.'\n  desc 'fix', 'Configure the DNS server to be in accordance with the security configuration settings based on DoD security configuration or implementation guidance, including STIGs, NSA configuration guides, CTOs, and DTMs.'\n  impact 0.5\n  ref 'DPMS Target SRG-APP-DNS'\n  tag check_id: 'C-55849r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-55229'\n  tag rid: 'SV-69475r1_rule'\n  tag stig_id: 'SRG-APP-000516-DNS-000500'\n  tag gtitle: 'SRG-APP-000516-DNS-000500'\n  tag fix_id: 'F-60093r1_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000366']\n  tag nist: ['CM-6 b']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Domain_Name_System_V2R4/controls/SV-69475.rb"},"title":"The DNS server implementation must be configured in accordance with the security configuration settings based on DoD security configuration or implementation guidance, including STIGs, NSA configuration guides, CTOs, and DTMs.","desc":"Configuration settings are the set of parameters that can be changed that affect the security posture and/or functionality of the system. Security-related parameters are those parameters impacting the security state of the application, including the parameters required to satisfy other security control requirements.\n\nConfiguring the DNS server implementation to follow organization-wide security implementation guides and security checklists ensures compliance with federal standards and establishes a common security baseline across DoD that reflects the most restrictive security posture consistent with operational requirements.","descriptions":{"default":"Configuration settings are the set of parameters that can be changed that affect the security posture and/or functionality of the system. Security-related parameters are those parameters impacting the security state of the application, including the parameters required to satisfy other security control requirements.\n\nConfiguring the DNS server implementation to follow organization-wide security implementation guides and security checklists ensures compliance with federal standards and establishes a common security baseline across DoD that reflects the most restrictive security posture consistent with operational requirements.","check":"Review the DNS server implementation configuration to determine if the DNS server is configured in accordance with the security configuration settings based on DoD security configuration or implementation guidance, including STIGs, NSA configuration guides, CTOs, and DTMs. If the DNS server is not configured in accordance with these settings, this is a finding.","fix":"Configure the DNS server to be in accordance with the security configuration settings based on DoD security configuration or implementation guidance, including STIGs, NSA configuration guides, CTOs, and DTMs."},"impact":0.5,"refs":[{"ref":"DPMS Target SRG-APP-DNS"}],"tags":{"check_id":"C-55849r1_chk","severity":"medium","gid":"V-55229","rid":"SV-69475r1_rule","stig_id":"SRG-APP-000516-DNS-000500","gtitle":"SRG-APP-000516-DNS-000500","fix_id":"F-60093r1_fix","documentable":null,"cci":["CCI-000366"],"nist":["CM-6 b"]}}],"groups":[{"id":"controls/SV-69023.rb","title":null,"controls":["SV-69023"]},{"id":"controls/SV-69027.rb","title":null,"controls":["SV-69027"]},{"id":"controls/SV-69029.rb","title":null,"controls":["SV-69029"]},{"id":"controls/SV-69031.rb","title":null,"controls":["SV-69031"]},{"id":"controls/SV-69033.rb","title":null,"controls":["SV-69033"]},{"id":"controls/SV-69035.rb","title":null,"controls":["SV-69035"]},{"id":"controls/SV-69037.rb","title":null,"controls":["SV-69037"]},{"id":"controls/SV-69039.rb","title":null,"controls":["SV-69039"]},{"id":"controls/SV-69041.rb","title":null,"controls":["SV-69041"]},{"id":"controls/SV-69043.rb","title":null,"controls":["SV-69043"]},{"id":"controls/SV-69045.rb","title":null,"controls":["SV-69045"]},{"id":"controls/SV-69047.rb","title":null,"controls":["SV-69047"]},{"id":"controls/SV-69049.rb","title":null,"controls":["SV-69049"]},{"id":"controls/SV-69051.rb","title":null,"controls":["SV-69051"]},{"id":"controls/SV-69053.rb","title":null,"controls":["SV-69053"]},{"id":"controls/SV-69055.rb","title":null,"controls":["SV-69055"]},{"id":"controls/SV-69057.rb","title":null,"controls":["SV-69057"]},{"id":"controls/SV-69059.rb","title":null,"controls":["SV-69059"]},{"id":"controls/SV-69061.rb","title":null,"controls":["SV-69061"]},{"id":"controls/SV-69063.rb","title":null,"controls":["SV-69063"]},{"id":"controls/SV-69065.rb","title":null,"controls":["SV-69065"]},{"id":"controls/SV-69067.rb","title":null,"controls":["SV-69067"]},{"id":"controls/SV-69069.rb","title":null,"controls":["SV-69069"]},{"id":"controls/SV-69071.rb","title":null,"controls":["SV-69071"]},{"id":"controls/SV-69073.rb","title":null,"controls":["SV-69073"]},{"id":"controls/SV-69075.rb","title":null,"controls":["SV-69075"]},{"id":"controls/SV-69077.rb","title":null,"controls":["SV-69077"]},{"id":"controls/SV-69079.rb","title":null,"controls":["SV-69079"]},{"id":"controls/SV-69081.rb","title":null,"controls":["SV-69081"]},{"id":"controls/SV-69083.rb","title":null,"controls":["SV-69083"]},{"id":"controls/SV-69085.rb","title":null,"controls":["SV-69085"]},{"id":"controls/SV-69087.rb","title":null,"controls":["SV-69087"]},{"id":"controls/SV-69089.rb","title":null,"controls":["SV-69089"]},{"id":"controls/SV-69091.rb","title":null,"controls":["SV-69091"]},{"id":"controls/SV-69093.rb","title":null,"controls":["SV-69093"]},{"id":"controls/SV-69095.rb","title":null,"controls":["SV-69095"]},{"id":"controls/SV-69097.rb","title":null,"controls":["SV-69097"]},{"id":"controls/SV-69099.rb","title":null,"controls":["SV-69099"]},{"id":"controls/SV-69101.rb","title":null,"controls":["SV-69101"]},{"id":"controls/SV-69103.rb","title":null,"controls":["SV-69103"]},{"id":"controls/SV-69107.rb","title":null,"controls":["SV-69107"]},{"id":"controls/SV-69109.rb","title":null,"controls":["SV-69109"]},{"id":"controls/SV-69111.rb","title":null,"controls":["SV-69111"]},{"id":"controls/SV-69113.rb","title":null,"controls":["SV-69113"]},{"id":"controls/SV-69115.rb","title":null,"controls":["SV-69115"]},{"id":"controls/SV-69117.rb","title":null,"controls":["SV-69117"]},{"id":"controls/SV-69119.rb","title":null,"controls":["SV-69119"]},{"id":"controls/SV-69121.rb","title":null,"controls":["SV-69121"]},{"id":"controls/SV-69123.rb","title":null,"controls":["SV-69123"]},{"id":"controls/SV-69131.rb","title":null,"controls":["SV-69131"]},{"id":"controls/SV-69133.rb","title":null,"controls":["SV-69133"]},{"id":"controls/SV-69135.rb","title":null,"controls":["SV-69135"]},{"id":"controls/SV-69137.rb","title":null,"controls":["SV-69137"]},{"id":"controls/SV-69141.rb","title":null,"controls":["SV-69141"]},{"id":"controls/SV-69143.rb","title":null,"controls":["SV-69143"]},{"id":"controls/SV-69145.rb","title":null,"controls":["SV-69145"]},{"id":"controls/SV-69147.rb","title":null,"controls":["SV-69147"]},{"id":"controls/SV-69149.rb","title":null,"controls":["SV-69149"]},{"id":"controls/SV-69151.rb","title":null,"controls":["SV-69151"]},{"id":"controls/SV-69153.rb","title":null,"controls":["SV-69153"]},{"id":"controls/SV-69155.rb","title":null,"controls":["SV-69155"]},{"id":"controls/SV-69157.rb","title":null,"controls":["SV-69157"]},{"id":"controls/SV-69161.rb","title":null,"controls":["SV-69161"]},{"id":"controls/SV-69163.rb","title":null,"controls":["SV-69163"]},{"id":"controls/SV-69165.rb","title":null,"controls":["SV-69165"]},{"id":"controls/SV-69167.rb","title":null,"controls":["SV-69167"]},{"id":"controls/SV-69169.rb","title":null,"controls":["SV-69169"]},{"id":"controls/SV-69171.rb","title":null,"controls":["SV-69171"]},{"id":"controls/SV-69173.rb","title":null,"controls":["SV-69173"]},{"id":"controls/SV-69175.rb","title":null,"controls":["SV-69175"]},{"id":"controls/SV-69177.rb","title":null,"controls":["SV-69177"]},{"id":"controls/SV-69179.rb","title":null,"controls":["SV-69179"]},{"id":"controls/SV-69181.rb","title":null,"controls":["SV-69181"]},{"id":"controls/SV-69183.rb","title":null,"controls":["SV-69183"]},{"id":"controls/SV-69185.rb","title":null,"controls":["SV-69185"]},{"id":"controls/SV-69187.rb","title":null,"controls":["SV-69187"]},{"id":"controls/SV-69189.rb","title":null,"controls":["SV-69189"]},{"id":"controls/SV-69191.rb","title":null,"controls":["SV-69191"]},{"id":"controls/SV-69193.rb","title":null,"controls":["SV-69193"]},{"id":"controls/SV-69195.rb","title":null,"controls":["SV-69195"]},{"id":"controls/SV-69197.rb","title":null,"controls":["SV-69197"]},{"id":"controls/SV-69199.rb","title":null,"controls":["SV-69199"]},{"id":"controls/SV-69201.rb","title":null,"controls":["SV-69201"]},{"id":"controls/SV-69203.rb","title":null,"controls":["SV-69203"]},{"id":"controls/SV-69205.rb","title":null,"controls":["SV-69205"]},{"id":"controls/SV-69207.rb","title":null,"controls":["SV-69207"]},{"id":"controls/SV-69209.rb","title":null,"controls":["SV-69209"]},{"id":"controls/SV-69211.rb","title":null,"controls":["SV-69211"]},{"id":"controls/SV-69213.rb","title":null,"controls":["SV-69213"]},{"id":"controls/SV-69215.rb","title":null,"controls":["SV-69215"]},{"id":"controls/SV-69217.rb","title":null,"controls":["SV-69217"]},{"id":"controls/SV-69219.rb","title":null,"controls":["SV-69219"]},{"id":"controls/SV-69221.rb","title":null,"controls":["SV-69221"]},{"id":"controls/SV-69223.rb","title":null,"controls":["SV-69223"]},{"id":"controls/SV-69225.rb","title":null,"controls":["SV-69225"]},{"id":"controls/SV-69471.rb","title":null,"controls":["SV-69471"]},{"id":"controls/SV-69473.rb","title":null,"controls":["SV-69473"]},{"id":"controls/SV-69475.rb","title":null,"controls":["SV-69475"]}],"name":"DNS_SRG","title":null,"maintainer":null,"copyright":null,"copyright_email":null,"license":null,"summary":null,"description":null,"version":"1.0.0","supports":[],"depends":[],"inspec_version":null,"inputs":[],"sha256":"70b03d7ba46c1fd81776a80c0671cf55b6ba605213979c78f7242d9da8032e02","status_message":"","status":"loaded","generator":{"name":"inspec","version":"6.6.0"}}
