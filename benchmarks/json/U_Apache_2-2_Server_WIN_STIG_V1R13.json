{"controls":[{"id":"SV-32880","code":"control 'SV-32880' do\n  title 'The KeepAliveTimeout directive must be defined.'\n  desc 'The number of seconds Apache will wait for a subsequent request before closing the connection. Once a request has been received, the timeout value specified by the Timeout directive applies. Setting KeepAliveTimeout to a high value may cause performance problems in heavily loaded servers. The higher the timeout, the more server processes will be kept occupied waiting on connections with idle clients. These requirements are set to mitigate the effects of several types of denial of service attacks.'\n  desc 'check', 'NOTE: This setting must be explicitly set.\n\nLocate the Apache httpd.conf file.\n\nOpen the httpd.conf file with an editor such as notepad, and search for the following uncommented directive: KeepAliveTimeout\n\nIf any directive is not set to 15 or less, this is a finding.\n\nNOTE: This vulnerability can be documented locally with the ISSM/ISSO if the site has an operational reason for not using persistent connections. If the site has this documented, this should be marked as Not a Finding.'\n  desc 'fix', 'Modify the KeepAliveTimeout directive in the applicable Apache configuration files to have a value of 15 or less.'\n  impact 0.5\n  ref 'DPMS Target Apache Instance 2.x'\n  tag check_id: 'C-33611r3_chk'\n  tag severity: 'medium'\n  tag gid: 'V-13726'\n  tag rid: 'SV-32880r3_rule'\n  tag stig_id: 'WA000-WWA024 W22'\n  tag gtitle: 'WA000-WWA024'\n  tag fix_id: 'F-29218r1_fix'\n  tag 'documentable'\n  tag responsibility: 'Web Administrator'\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Apache_2-2_Server_WIN_STIG_V1R13/controls/SV-32880.rb"},"title":"The KeepAliveTimeout directive must be defined.","desc":"The number of seconds Apache will wait for a subsequent request before closing the connection. Once a request has been received, the timeout value specified by the Timeout directive applies. Setting KeepAliveTimeout to a high value may cause performance problems in heavily loaded servers. The higher the timeout, the more server processes will be kept occupied waiting on connections with idle clients. These requirements are set to mitigate the effects of several types of denial of service attacks.","descriptions":{"default":"The number of seconds Apache will wait for a subsequent request before closing the connection. Once a request has been received, the timeout value specified by the Timeout directive applies. Setting KeepAliveTimeout to a high value may cause performance problems in heavily loaded servers. The higher the timeout, the more server processes will be kept occupied waiting on connections with idle clients. These requirements are set to mitigate the effects of several types of denial of service attacks.","check":"NOTE: This setting must be explicitly set.\n\nLocate the Apache httpd.conf file.\n\nOpen the httpd.conf file with an editor such as notepad, and search for the following uncommented directive: KeepAliveTimeout\n\nIf any directive is not set to 15 or less, this is a finding.\n\nNOTE: This vulnerability can be documented locally with the ISSM/ISSO if the site has an operational reason for not using persistent connections. If the site has this documented, this should be marked as Not a Finding.","fix":"Modify the KeepAliveTimeout directive in the applicable Apache configuration files to have a value of 15 or less."},"impact":0.5,"refs":[{"ref":"DPMS Target Apache Instance 2.x"}],"tags":{"check_id":"C-33611r3_chk","severity":"medium","gid":"V-13726","rid":"SV-32880r3_rule","stig_id":"WA000-WWA024 W22","gtitle":"WA000-WWA024","fix_id":"F-29218r1_fix","documentable":null,"responsibility":"Web Administrator"}},{"id":"SV-32980","code":"control 'SV-32980' do\n  title 'The Timeout directive must be properly set.'\n  desc 'These Timeout requirements are set to mitigate the effects of several types of denial of service attacks. Although there is some latitude concerning the settings themselves, the requirements attempt to provide reasonable limits for the protection of the web server. If necessary, these limits can be adjusted to accommodate the operational requirement of a given system.'\n  desc 'check', 'NOTE: This setting must be explicitly set.\n\nLocate the Apache httpd.conf file.\n\nOpen the httpd.conf file with an editor such as notepad, and search for the following uncommented directive: Timeout\n\nEvery enabled Timeout directive value needs to be 300 or less. If any directive is set improperly, this is a finding.\n\nNOTE: This vulnerability can be documented locally with the ISSM/ISSO if the site has an operational reason for the use of an increased value. If the site has this documented, this should be marked as Not a Finding.'\n  desc 'fix', 'Modify the Timeout directive in the applicable Apache configuration files to have a value of 300 seconds or less.'\n  impact 0.5\n  ref 'DPMS Target Apache Instance 2.x'\n  tag check_id: 'C-33660r3_chk'\n  tag severity: 'medium'\n  tag gid: 'V-13724'\n  tag rid: 'SV-32980r3_rule'\n  tag stig_id: 'WA000-WWA020 W22'\n  tag gtitle: 'WA000-WWA020'\n  tag fix_id: 'F-29296r1_fix'\n  tag 'documentable'\n  tag responsibility: 'Web Administrator'\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Apache_2-2_Server_WIN_STIG_V1R13/controls/SV-32980.rb"},"title":"The Timeout directive must be properly set.","desc":"These Timeout requirements are set to mitigate the effects of several types of denial of service attacks. Although there is some latitude concerning the settings themselves, the requirements attempt to provide reasonable limits for the protection of the web server. If necessary, these limits can be adjusted to accommodate the operational requirement of a given system.","descriptions":{"default":"These Timeout requirements are set to mitigate the effects of several types of denial of service attacks. Although there is some latitude concerning the settings themselves, the requirements attempt to provide reasonable limits for the protection of the web server. If necessary, these limits can be adjusted to accommodate the operational requirement of a given system.","check":"NOTE: This setting must be explicitly set.\n\nLocate the Apache httpd.conf file.\n\nOpen the httpd.conf file with an editor such as notepad, and search for the following uncommented directive: Timeout\n\nEvery enabled Timeout directive value needs to be 300 or less. If any directive is set improperly, this is a finding.\n\nNOTE: This vulnerability can be documented locally with the ISSM/ISSO if the site has an operational reason for the use of an increased value. If the site has this documented, this should be marked as Not a Finding.","fix":"Modify the Timeout directive in the applicable Apache configuration files to have a value of 300 seconds or less."},"impact":0.5,"refs":[{"ref":"DPMS Target Apache Instance 2.x"}],"tags":{"check_id":"C-33660r3_chk","severity":"medium","gid":"V-13724","rid":"SV-32980r3_rule","stig_id":"WA000-WWA020 W22","gtitle":"WA000-WWA020","fix_id":"F-29296r1_fix","documentable":null,"responsibility":"Web Administrator"}},{"id":"SV-32987","code":"control 'SV-32987' do\n  title 'The KeepAlive directive must be enabled.'\n  desc 'The KeepAlive extension to HTTP/1.0 and the persistent connection feature of HTTP/1.1 provide long lived HTTP sessions which allow multiple requests to be sent over the same connection. These requirements are set to mitigate the effects of several types of denial of service attacks. Although there is some latitude concerning the settings themselves, the requirements attempt to provide reasonable limits for the protection of the web server. If necessary, these limits can be adjusted to accommodate the operational requirement of a given system.'\n  desc 'check', 'NOTE: This setting must be explicitly set. \n\nLocate the Apache httpd.conf file.\n\nOpen the httpd.conf file with an editor such as notepad, and search for the following uncommented directive: KeepAlive\n\nEvery enabled KeepAlive value needs to be set to “On”. If any directive is set improperly, this is a finding. If any directive is set to “Off”, this is a finding.\n\nNOTE: This vulnerability can be documented locally with the ISSM/ISSO if the site has an operational reason for not using persistent connections. If the site has this documented, this should be marked as Not a Finding.'\n  desc 'fix', 'Modify the KeepAlive directive in the applicable Apache configuration files to have a value of On.'\n  impact 0.5\n  ref 'DPMS Target Apache Instance 2.x'\n  tag check_id: 'C-33661r3_chk'\n  tag severity: 'medium'\n  tag gid: 'V-13725'\n  tag rid: 'SV-32987r3_rule'\n  tag stig_id: 'WA000-WWA022 W22'\n  tag gtitle: 'WA000-WWA022'\n  tag fix_id: 'F-29298r1_fix'\n  tag 'documentable'\n  tag responsibility: 'Web Administrator'\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Apache_2-2_Server_WIN_STIG_V1R13/controls/SV-32987.rb"},"title":"The KeepAlive directive must be enabled.","desc":"The KeepAlive extension to HTTP/1.0 and the persistent connection feature of HTTP/1.1 provide long lived HTTP sessions which allow multiple requests to be sent over the same connection. These requirements are set to mitigate the effects of several types of denial of service attacks. Although there is some latitude concerning the settings themselves, the requirements attempt to provide reasonable limits for the protection of the web server. If necessary, these limits can be adjusted to accommodate the operational requirement of a given system.","descriptions":{"default":"The KeepAlive extension to HTTP/1.0 and the persistent connection feature of HTTP/1.1 provide long lived HTTP sessions which allow multiple requests to be sent over the same connection. These requirements are set to mitigate the effects of several types of denial of service attacks. Although there is some latitude concerning the settings themselves, the requirements attempt to provide reasonable limits for the protection of the web server. If necessary, these limits can be adjusted to accommodate the operational requirement of a given system.","check":"NOTE: This setting must be explicitly set. \n\nLocate the Apache httpd.conf file.\n\nOpen the httpd.conf file with an editor such as notepad, and search for the following uncommented directive: KeepAlive\n\nEvery enabled KeepAlive value needs to be set to “On”. If any directive is set improperly, this is a finding. If any directive is set to “Off”, this is a finding.\n\nNOTE: This vulnerability can be documented locally with the ISSM/ISSO if the site has an operational reason for not using persistent connections. If the site has this documented, this should be marked as Not a Finding.","fix":"Modify the KeepAlive directive in the applicable Apache configuration files to have a value of On."},"impact":0.5,"refs":[{"ref":"DPMS Target Apache Instance 2.x"}],"tags":{"check_id":"C-33661r3_chk","severity":"medium","gid":"V-13725","rid":"SV-32987r3_rule","stig_id":"WA000-WWA022 W22","gtitle":"WA000-WWA022","fix_id":"F-29298r1_fix","documentable":null,"responsibility":"Web Administrator"}},{"id":"SV-32998","code":"control 'SV-32998' do\n  title 'All interactive programs must be placed in a designated directory with appropriate permissions.'\n  desc 'CGI scripts are one of the most exploited vulnerabilities on web servers.  CGI script execution in Apache can be accomplished via two methods.  The first method uses the ScriptAlias directive to tell the server everything in that directory is a CGI script.  The second method uses a combination of the Options directive and AddHandler or SetHandler directives.  For situations where the combination of the Options directive and Handler directives are used, the ability to centrally manage scripts is lost, creating vulnerability on the web server.  It is best to manage scripts using the ScriptAlias directive.'\n  desc 'check', 'Locate the Apache httpd.conf file.\n\nOpen the httpd.conf file with an editor such as notepad, and search for the following uncommented directives:  SetHandler, AddHandler, and Options.\n\nFor all occurrences of the SetHandler and AddHandler directives query the Web Administrator to determine if the directives are allowing CGI scripts to be used. \n\nIf CGI Scripts are used via the SetHandler or AddHandler directives, this is a finding.\n\nFor all occurrences of the Options directive that are using +ExecCGI or ExecCGI, this is a finding. \n\nIf the Options directive is found with -ExecCGI, this is not a finding. \n\nIf the value does not exist, this would be a finding unless the Options statement is set to “None”.'\n  desc 'fix', 'Locate the scripts in a ScriptAlias directory, and/or add the appropriate symbol to explicitly disable ExecCGI, or set the options directive to None.'\n  impact 0.5\n  ref 'DPMS Target Apache Instance 2.x'\n  tag check_id: 'C-33663r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-13731'\n  tag rid: 'SV-32998r1_rule'\n  tag stig_id: 'WA000-WWA050 W22'\n  tag gtitle: 'WA000-WWA050'\n  tag fix_id: 'F-29302r1_fix'\n  tag 'documentable'\n  tag responsibility: 'Web Administrator'\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Apache_2-2_Server_WIN_STIG_V1R13/controls/SV-32998.rb"},"title":"All interactive programs must be placed in a designated directory with appropriate permissions.","desc":"CGI scripts are one of the most exploited vulnerabilities on web servers.  CGI script execution in Apache can be accomplished via two methods.  The first method uses the ScriptAlias directive to tell the server everything in that directory is a CGI script.  The second method uses a combination of the Options directive and AddHandler or SetHandler directives.  For situations where the combination of the Options directive and Handler directives are used, the ability to centrally manage scripts is lost, creating vulnerability on the web server.  It is best to manage scripts using the ScriptAlias directive.","descriptions":{"default":"CGI scripts are one of the most exploited vulnerabilities on web servers.  CGI script execution in Apache can be accomplished via two methods.  The first method uses the ScriptAlias directive to tell the server everything in that directory is a CGI script.  The second method uses a combination of the Options directive and AddHandler or SetHandler directives.  For situations where the combination of the Options directive and Handler directives are used, the ability to centrally manage scripts is lost, creating vulnerability on the web server.  It is best to manage scripts using the ScriptAlias directive.","check":"Locate the Apache httpd.conf file.\n\nOpen the httpd.conf file with an editor such as notepad, and search for the following uncommented directives:  SetHandler, AddHandler, and Options.\n\nFor all occurrences of the SetHandler and AddHandler directives query the Web Administrator to determine if the directives are allowing CGI scripts to be used. \n\nIf CGI Scripts are used via the SetHandler or AddHandler directives, this is a finding.\n\nFor all occurrences of the Options directive that are using +ExecCGI or ExecCGI, this is a finding. \n\nIf the Options directive is found with -ExecCGI, this is not a finding. \n\nIf the value does not exist, this would be a finding unless the Options statement is set to “None”.","fix":"Locate the scripts in a ScriptAlias directory, and/or add the appropriate symbol to explicitly disable ExecCGI, or set the options directive to None."},"impact":0.5,"refs":[{"ref":"DPMS Target Apache Instance 2.x"}],"tags":{"check_id":"C-33663r1_chk","severity":"medium","gid":"V-13731","rid":"SV-32998r1_rule","stig_id":"WA000-WWA050 W22","gtitle":"WA000-WWA050","fix_id":"F-29302r1_fix","documentable":null,"responsibility":"Web Administrator"}},{"id":"SV-33001","code":"control 'SV-33001' do\n  title 'The FollowSymLinks setting must be disabled.'\n  desc 'The Options directive configures the web server features that are available in particular directories. The FollowSymLinks option controls the ability of the server to follow symbolic links. A symbolic link allows a file or a directory to be referenced using a symbolic name raising a potential hazard if symbolic linkage is made to a sensitive area. When web scripts are executed and symbolic links are allowed, the web user could be allowed to access locations on the web server that are outside the scope of the web document root or home directory.'\n  desc 'check', 'Locate the Apache httpd.conf file.\n\nOpen the httpd.conf file with an editor such as notepad, and search for the following uncommented directive: Options\n\nReview all uncommented Options statements for the following value: -FollowSymLinks\n\nIf the value is found with an Options statement, and it does not have a preceding “-”, this is a finding.\n\nNotes:\n- If the value does NOT exist, this is a finding.\n- If all enabled Options statement are set to None this is not a finding.'\n  desc 'fix', 'Add a \"-\" to the FollowSymLinks setting, or set the options directive to None.'\n  impact 0.5\n  ref 'DPMS Target Apache Instance 2.x'\n  tag check_id: 'C-33665r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-13732'\n  tag rid: 'SV-33001r1_rule'\n  tag stig_id: 'WA000-WWA052 W22'\n  tag gtitle: 'WA000-WWA052'\n  tag fix_id: 'F-29303r1_fix'\n  tag 'documentable'\n  tag responsibility: 'Web Administrator'\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Apache_2-2_Server_WIN_STIG_V1R13/controls/SV-33001.rb"},"title":"The FollowSymLinks setting must be disabled.","desc":"The Options directive configures the web server features that are available in particular directories. The FollowSymLinks option controls the ability of the server to follow symbolic links. A symbolic link allows a file or a directory to be referenced using a symbolic name raising a potential hazard if symbolic linkage is made to a sensitive area. When web scripts are executed and symbolic links are allowed, the web user could be allowed to access locations on the web server that are outside the scope of the web document root or home directory.","descriptions":{"default":"The Options directive configures the web server features that are available in particular directories. The FollowSymLinks option controls the ability of the server to follow symbolic links. A symbolic link allows a file or a directory to be referenced using a symbolic name raising a potential hazard if symbolic linkage is made to a sensitive area. When web scripts are executed and symbolic links are allowed, the web user could be allowed to access locations on the web server that are outside the scope of the web document root or home directory.","check":"Locate the Apache httpd.conf file.\n\nOpen the httpd.conf file with an editor such as notepad, and search for the following uncommented directive: Options\n\nReview all uncommented Options statements for the following value: -FollowSymLinks\n\nIf the value is found with an Options statement, and it does not have a preceding “-”, this is a finding.\n\nNotes:\n- If the value does NOT exist, this is a finding.\n- If all enabled Options statement are set to None this is not a finding.","fix":"Add a \"-\" to the FollowSymLinks setting, or set the options directive to None."},"impact":0.5,"refs":[{"ref":"DPMS Target Apache Instance 2.x"}],"tags":{"check_id":"C-33665r1_chk","severity":"medium","gid":"V-13732","rid":"SV-33001r1_rule","stig_id":"WA000-WWA052 W22","gtitle":"WA000-WWA052","fix_id":"F-29303r1_fix","documentable":null,"responsibility":"Web Administrator"}},{"id":"SV-33003","code":"control 'SV-33003' do\n  title 'Server side includes (SSIs) must run with execution capability disabled.'\n  desc 'The Options directive configures the web server features that are available in particular directories.  The IncludesNOEXEC feature controls the ability of the server to utilize SSIs while disabling the exec command, which is used to execute external scripts.  If the full includes feature is used it could allow the execution of malware leading to a system compromise.'\n  desc 'check', 'Locate the Apache httpd.conf file.\n\nIf unable to locate the file, perform a search of the system to find the location of the file.\n\nOpen the httpd.conf file with an editor such as notepad, and search for the following uncommented directive: Options\n\nReview all uncommented Options statements for the following values: +IncludesNoExec, -IncludesNoExec, or -Includes\n\nIf these values are found on an enabled Options statement, this is not a finding. If these values do not exist at all, this would be a finding unless the enabled Options statement is set to “None”. If any enabled Options statement has \"Includes” or \"+Includes” as part of its statement, this is a finding.'\n  desc 'fix', 'Add one of the following to the enabled Options directive +IncludesNoExec, -IncludesNoExec, or -Includes. Remove the \"Includes\" or \"+Includes\" setting from the options statement.'\n  impact 0.7\n  ref 'DPMS Target Apache Instance 2.x'\n  tag check_id: 'C-33670r1_chk'\n  tag severity: 'high'\n  tag gid: 'V-13733'\n  tag rid: 'SV-33003r1_rule'\n  tag stig_id: 'WA000-WWA054 W22'\n  tag gtitle: 'WA000-WWA054'\n  tag fix_id: 'F-29305r1_fix'\n  tag 'documentable'\n  tag responsibility: 'Web Administrator'\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Apache_2-2_Server_WIN_STIG_V1R13/controls/SV-33003.rb"},"title":"Server side includes (SSIs) must run with execution capability disabled.","desc":"The Options directive configures the web server features that are available in particular directories.  The IncludesNOEXEC feature controls the ability of the server to utilize SSIs while disabling the exec command, which is used to execute external scripts.  If the full includes feature is used it could allow the execution of malware leading to a system compromise.","descriptions":{"default":"The Options directive configures the web server features that are available in particular directories.  The IncludesNOEXEC feature controls the ability of the server to utilize SSIs while disabling the exec command, which is used to execute external scripts.  If the full includes feature is used it could allow the execution of malware leading to a system compromise.","check":"Locate the Apache httpd.conf file.\n\nIf unable to locate the file, perform a search of the system to find the location of the file.\n\nOpen the httpd.conf file with an editor such as notepad, and search for the following uncommented directive: Options\n\nReview all uncommented Options statements for the following values: +IncludesNoExec, -IncludesNoExec, or -Includes\n\nIf these values are found on an enabled Options statement, this is not a finding. If these values do not exist at all, this would be a finding unless the enabled Options statement is set to “None”. If any enabled Options statement has \"Includes” or \"+Includes” as part of its statement, this is a finding.","fix":"Add one of the following to the enabled Options directive +IncludesNoExec, -IncludesNoExec, or -Includes. Remove the \"Includes\" or \"+Includes\" setting from the options statement."},"impact":0.7,"refs":[{"ref":"DPMS Target Apache Instance 2.x"}],"tags":{"check_id":"C-33670r1_chk","severity":"high","gid":"V-13733","rid":"SV-33003r1_rule","stig_id":"WA000-WWA054 W22","gtitle":"WA000-WWA054","fix_id":"F-29305r1_fix","documentable":null,"responsibility":"Web Administrator"}},{"id":"SV-33004","code":"control 'SV-33004' do\n  title 'The MultiViews directive must be disabled.'\n  desc '<0> [object Object]'\n  desc 'check', 'Locate the Apache httpd.conf file.\n\nOpen the httpd.conf file with an editor such as Notepad, and search for all occurrences of the following directive: Options.\n\nThis check validates occurrences of the Options directive which are uncommented.\nReview all uncommented Options statements for \"-MultiViews\"and validate a preceding \"-\" to the MultiViews option exists.\n\nIf the value is found on the Options statement, and it does not have a preceding \"-\", this is a finding. \nIf the value does not exist at all, this would be a finding unless the enabled Options statement is set to \"none\".'\n  desc 'fix', 'Add a \"-\" to the MultiViews setting, or set the options directive to None.'\n  impact 0.5\n  ref 'DPMS Target Apache Instance 2.x'\n  tag check_id: 'C-33671r2_chk'\n  tag severity: 'medium'\n  tag gid: 'V-13734'\n  tag rid: 'SV-33004r2_rule'\n  tag stig_id: 'WA000-WWA056 W22'\n  tag gtitle: 'WA000-WWA056'\n  tag fix_id: 'F-29306r1_fix'\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Apache_2-2_Server_WIN_STIG_V1R13/controls/SV-33004.rb"},"title":"The MultiViews directive must be disabled.","desc":"<0> [object Object]","descriptions":{"default":"<0> [object Object]","check":"Locate the Apache httpd.conf file.\n\nOpen the httpd.conf file with an editor such as Notepad, and search for all occurrences of the following directive: Options.\n\nThis check validates occurrences of the Options directive which are uncommented.\nReview all uncommented Options statements for \"-MultiViews\"and validate a preceding \"-\" to the MultiViews option exists.\n\nIf the value is found on the Options statement, and it does not have a preceding \"-\", this is a finding. \nIf the value does not exist at all, this would be a finding unless the enabled Options statement is set to \"none\".","fix":"Add a \"-\" to the MultiViews setting, or set the options directive to None."},"impact":0.5,"refs":[{"ref":"DPMS Target Apache Instance 2.x"}],"tags":{"check_id":"C-33671r2_chk","severity":"medium","gid":"V-13734","rid":"SV-33004r2_rule","stig_id":"WA000-WWA056 W22","gtitle":"WA000-WWA056","fix_id":"F-29306r1_fix"}},{"id":"SV-33006","code":"control 'SV-33006' do\n  title 'Directory indexing must be disabled on directories not containing index files.'\n  desc 'Directory options directives are directives that can be applied to further restrict access to file and directories. \nIf a URL which maps to a directory is requested, and there is no DirectoryIndex (e.g., index.html) in that directory, then mod_autoindex will return a formatted listing of the directory. \nThe Indexes option allows for the functionality of presenting a formatted listing of the directory.\nReturning a formatted listing of the directory represents a vulnerability since it will allow an attacker to have knowledge of the directory contents and potentially gather sensitive information.\nTo explicitly disable an Options functionality, the option must be listed on every uncommented Options directive with a preceding the option. The \"-\" preceding the option configures Apache to explicitly disable the option. An Options directive with \"none\" will also disable the functionality.\nIf the option is listed on an Options directive line without a preceding - or without anything preceding it or with a \"+\" preceding it or not configured at all, the Indexes option is enabled and is vulnerable.'\n  desc 'check', 'Open the httpd.conf file with an editor such as Notepad, and search for all occurrences of the following directive: Options.\n\nThis check validates occurrences of the Options directive which are uncommented.\nReview all uncommented Options statements for \"-Indexes\" and validate a preceding \"-\" to the Indexes option exists.\n\nIf the value is found on the Options statement, and it does not have a preceding \"-\", this is a finding. \nIf the value does not exist at all, this would be a finding unless the enabled Options statement is set to \"none\".'\n  desc 'fix', 'Add a \"-\" to the Indexes setting, or set the options directive to None.'\n  impact 0.5\n  ref 'DPMS Target Apache Instance 2.x'\n  tag check_id: 'C-33681r2_chk'\n  tag severity: 'medium'\n  tag gid: 'V-13735'\n  tag rid: 'SV-33006r2_rule'\n  tag stig_id: 'WA000-WWA058 W22'\n  tag gtitle: 'WA000-WWA058'\n  tag fix_id: 'F-29307r1_fix'\n  tag 'documentable'\n  tag responsibility: 'Web Administrator'\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Apache_2-2_Server_WIN_STIG_V1R13/controls/SV-33006.rb"},"title":"Directory indexing must be disabled on directories not containing index files.","desc":"Directory options directives are directives that can be applied to further restrict access to file and directories. \nIf a URL which maps to a directory is requested, and there is no DirectoryIndex (e.g., index.html) in that directory, then mod_autoindex will return a formatted listing of the directory. \nThe Indexes option allows for the functionality of presenting a formatted listing of the directory.\nReturning a formatted listing of the directory represents a vulnerability since it will allow an attacker to have knowledge of the directory contents and potentially gather sensitive information.\nTo explicitly disable an Options functionality, the option must be listed on every uncommented Options directive with a preceding the option. The \"-\" preceding the option configures Apache to explicitly disable the option. An Options directive with \"none\" will also disable the functionality.\nIf the option is listed on an Options directive line without a preceding - or without anything preceding it or with a \"+\" preceding it or not configured at all, the Indexes option is enabled and is vulnerable.","descriptions":{"default":"Directory options directives are directives that can be applied to further restrict access to file and directories. \nIf a URL which maps to a directory is requested, and there is no DirectoryIndex (e.g., index.html) in that directory, then mod_autoindex will return a formatted listing of the directory. \nThe Indexes option allows for the functionality of presenting a formatted listing of the directory.\nReturning a formatted listing of the directory represents a vulnerability since it will allow an attacker to have knowledge of the directory contents and potentially gather sensitive information.\nTo explicitly disable an Options functionality, the option must be listed on every uncommented Options directive with a preceding the option. The \"-\" preceding the option configures Apache to explicitly disable the option. An Options directive with \"none\" will also disable the functionality.\nIf the option is listed on an Options directive line without a preceding - or without anything preceding it or with a \"+\" preceding it or not configured at all, the Indexes option is enabled and is vulnerable.","check":"Open the httpd.conf file with an editor such as Notepad, and search for all occurrences of the following directive: Options.\n\nThis check validates occurrences of the Options directive which are uncommented.\nReview all uncommented Options statements for \"-Indexes\" and validate a preceding \"-\" to the Indexes option exists.\n\nIf the value is found on the Options statement, and it does not have a preceding \"-\", this is a finding. \nIf the value does not exist at all, this would be a finding unless the enabled Options statement is set to \"none\".","fix":"Add a \"-\" to the Indexes setting, or set the options directive to None."},"impact":0.5,"refs":[{"ref":"DPMS Target Apache Instance 2.x"}],"tags":{"check_id":"C-33681r2_chk","severity":"medium","gid":"V-13735","rid":"SV-33006r2_rule","stig_id":"WA000-WWA058 W22","gtitle":"WA000-WWA058","fix_id":"F-29307r1_fix","documentable":null,"responsibility":"Web Administrator"}},{"id":"SV-33008","code":"control 'SV-33008' do\n  title 'The HTTP request message body size must be limited.'\n  desc 'Buffer overflow attacks are carried out by a malicious attacker sending amounts of data that the web server cannot store in a given size buffer. The eventual overflow of this buffer can overwrite system memory. Subsequently an attacker may be able to elevate privileges and take control of the server. The Apache directives listed below limit the size of the various HTTP header sizes thereby limiting the chances for a buffer overflow.\nThe LimitRequestBody directive allows the user to set a limit on the allowed size of an HTTP request message body within the context in which the directive is given (server, per-directory, per-file or per-location). If the client request exceeds that limit, the server will return an error response instead of servicing the request. The size of a normal request message body will vary greatly depending on the nature of the resource and the methods allowed on that resource. CGI scripts typically use the message body for retrieving form information. Implementations of the PUT method will require a value at least as large as any representation that the server wishes to accept for that resource.\n\nThis directive gives the server administrator greater control over abnormal client request behavior, which may be useful for avoiding some forms of denial-of-service attacks.'\n  desc 'check', 'Locate the Apache httpd.conf file.\n\nOpen the httpd.conf file with an editor such as notepad, and search for the following uncommented directive: LimitRequestBody\n\nIf the value of LimitRequestBody is not greater than 0 or does not exist, this is a finding.'\n  desc 'fix', 'Specify a size for the LimitRequestBody directive.'\n  impact 0.5\n  ref 'DPMS Target Apache Instance 2.x'\n  tag check_id: 'C-33685r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-13736'\n  tag rid: 'SV-33008r1_rule'\n  tag stig_id: 'WA000-WWA060 W22'\n  tag gtitle: 'WA000-WWA060'\n  tag fix_id: 'F-29308r1_fix'\n  tag 'documentable'\n  tag responsibility: 'Web Administrator'\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Apache_2-2_Server_WIN_STIG_V1R13/controls/SV-33008.rb"},"title":"The HTTP request message body size must be limited.","desc":"Buffer overflow attacks are carried out by a malicious attacker sending amounts of data that the web server cannot store in a given size buffer. The eventual overflow of this buffer can overwrite system memory. Subsequently an attacker may be able to elevate privileges and take control of the server. The Apache directives listed below limit the size of the various HTTP header sizes thereby limiting the chances for a buffer overflow.\nThe LimitRequestBody directive allows the user to set a limit on the allowed size of an HTTP request message body within the context in which the directive is given (server, per-directory, per-file or per-location). If the client request exceeds that limit, the server will return an error response instead of servicing the request. The size of a normal request message body will vary greatly depending on the nature of the resource and the methods allowed on that resource. CGI scripts typically use the message body for retrieving form information. Implementations of the PUT method will require a value at least as large as any representation that the server wishes to accept for that resource.\n\nThis directive gives the server administrator greater control over abnormal client request behavior, which may be useful for avoiding some forms of denial-of-service attacks.","descriptions":{"default":"Buffer overflow attacks are carried out by a malicious attacker sending amounts of data that the web server cannot store in a given size buffer. The eventual overflow of this buffer can overwrite system memory. Subsequently an attacker may be able to elevate privileges and take control of the server. The Apache directives listed below limit the size of the various HTTP header sizes thereby limiting the chances for a buffer overflow.\nThe LimitRequestBody directive allows the user to set a limit on the allowed size of an HTTP request message body within the context in which the directive is given (server, per-directory, per-file or per-location). If the client request exceeds that limit, the server will return an error response instead of servicing the request. The size of a normal request message body will vary greatly depending on the nature of the resource and the methods allowed on that resource. CGI scripts typically use the message body for retrieving form information. Implementations of the PUT method will require a value at least as large as any representation that the server wishes to accept for that resource.\n\nThis directive gives the server administrator greater control over abnormal client request behavior, which may be useful for avoiding some forms of denial-of-service attacks.","check":"Locate the Apache httpd.conf file.\n\nOpen the httpd.conf file with an editor such as notepad, and search for the following uncommented directive: LimitRequestBody\n\nIf the value of LimitRequestBody is not greater than 0 or does not exist, this is a finding.","fix":"Specify a size for the LimitRequestBody directive."},"impact":0.5,"refs":[{"ref":"DPMS Target Apache Instance 2.x"}],"tags":{"check_id":"C-33685r1_chk","severity":"medium","gid":"V-13736","rid":"SV-33008r1_rule","stig_id":"WA000-WWA060 W22","gtitle":"WA000-WWA060","fix_id":"F-29308r1_fix","documentable":null,"responsibility":"Web Administrator"}},{"id":"SV-33009","code":"control 'SV-33009' do\n  title 'The HTTP request header fields must be limited.'\n  desc 'Buffer overflow attacks are carried out by a malicious attacker sending amounts of data that the web server cannot store in a given size buffer. The eventual overflow of this buffer can overwrite system memory. Subsequently an attacker may be able to elevate privileges and take control of the server. This Apache directive limits the size of the various HTTP header sizes, thereby limiting the chances for a buffer overflow.\n\nThe LimitRequestFields directive allows the server administrator to modify the limit on the number of request header fields allowed in an HTTP request. A server needs this value to be larger than the number of fields that a normal client request might include. The number of request header fields used by a client rarely exceeds 20, but this may vary among different client implementations, often depending upon the extent to which a user has configured their browser to support detailed content negotiation. Optional HTTP extensions are often expressed using request header fields.\n\nThis directive gives the server administrator greater control over abnormal client request behavior, which may be useful for avoiding some forms of denial-of-service attacks. The value should be increased if normal clients see an error response from the server that indicates too many fields were sent in the request.'\n  desc 'check', 'Locate the Apache httpd.conf file.\n\nIf unable to locate the file, perform a search of the system to find the location of the file.\n\nOpen the httpd.conf file with an editor such as notepad, and search for the following uncommented directive: LimitRequestFields\n\nEvery enabled LimitRequestFields value needs to be greater than 0. If any directive is set improperly, this is a finding.\n\nNote: This can be set to a really high number (Current max is 32767), it just cannot be unspecified.'\n  desc 'fix', 'Set LimitRequestFields Directive to a value greater than 0.'\n  impact 0.5\n  ref 'DPMS Target Apache Instance 2.x'\n  tag check_id: 'C-33690r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-13737'\n  tag rid: 'SV-33009r1_rule'\n  tag stig_id: 'WA000-WWA062 W22'\n  tag gtitle: 'WA000-WWA062'\n  tag fix_id: 'F-29309r1_fix'\n  tag 'documentable'\n  tag responsibility: 'Web Administrator'\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Apache_2-2_Server_WIN_STIG_V1R13/controls/SV-33009.rb"},"title":"The HTTP request header fields must be limited.","desc":"Buffer overflow attacks are carried out by a malicious attacker sending amounts of data that the web server cannot store in a given size buffer. The eventual overflow of this buffer can overwrite system memory. Subsequently an attacker may be able to elevate privileges and take control of the server. This Apache directive limits the size of the various HTTP header sizes, thereby limiting the chances for a buffer overflow.\n\nThe LimitRequestFields directive allows the server administrator to modify the limit on the number of request header fields allowed in an HTTP request. A server needs this value to be larger than the number of fields that a normal client request might include. The number of request header fields used by a client rarely exceeds 20, but this may vary among different client implementations, often depending upon the extent to which a user has configured their browser to support detailed content negotiation. Optional HTTP extensions are often expressed using request header fields.\n\nThis directive gives the server administrator greater control over abnormal client request behavior, which may be useful for avoiding some forms of denial-of-service attacks. The value should be increased if normal clients see an error response from the server that indicates too many fields were sent in the request.","descriptions":{"default":"Buffer overflow attacks are carried out by a malicious attacker sending amounts of data that the web server cannot store in a given size buffer. The eventual overflow of this buffer can overwrite system memory. Subsequently an attacker may be able to elevate privileges and take control of the server. This Apache directive limits the size of the various HTTP header sizes, thereby limiting the chances for a buffer overflow.\n\nThe LimitRequestFields directive allows the server administrator to modify the limit on the number of request header fields allowed in an HTTP request. A server needs this value to be larger than the number of fields that a normal client request might include. The number of request header fields used by a client rarely exceeds 20, but this may vary among different client implementations, often depending upon the extent to which a user has configured their browser to support detailed content negotiation. Optional HTTP extensions are often expressed using request header fields.\n\nThis directive gives the server administrator greater control over abnormal client request behavior, which may be useful for avoiding some forms of denial-of-service attacks. The value should be increased if normal clients see an error response from the server that indicates too many fields were sent in the request.","check":"Locate the Apache httpd.conf file.\n\nIf unable to locate the file, perform a search of the system to find the location of the file.\n\nOpen the httpd.conf file with an editor such as notepad, and search for the following uncommented directive: LimitRequestFields\n\nEvery enabled LimitRequestFields value needs to be greater than 0. If any directive is set improperly, this is a finding.\n\nNote: This can be set to a really high number (Current max is 32767), it just cannot be unspecified.","fix":"Set LimitRequestFields Directive to a value greater than 0."},"impact":0.5,"refs":[{"ref":"DPMS Target Apache Instance 2.x"}],"tags":{"check_id":"C-33690r1_chk","severity":"medium","gid":"V-13737","rid":"SV-33009r1_rule","stig_id":"WA000-WWA062 W22","gtitle":"WA000-WWA062","fix_id":"F-29309r1_fix","documentable":null,"responsibility":"Web Administrator"}},{"id":"SV-33010","code":"control 'SV-33010' do\n  title 'The HTTP request header field size must be limited.'\n  desc 'Buffer overflow attacks are carried out by a malicious attacker sending amounts of data that the web server cannot store in a given size buffer. The eventual overflow of this buffer can overwrite system memory. Subsequently an attacker may be able to elevate privileges and take control of the server. This Apache directive limits the size of the various HTTP header sizes, thereby limiting the chances for a buffer overflow. \n\nThe LimitRequestFieldSize directive allows the server administrator to reduce or increase the limit on the allowed size of an HTTP request header field. A server needs this value to be large enough to hold any one header field from a normal client request. The size of a normal request header field will vary greatly among different client implementations, often depending upon the extent to which a user has configured their browser to support detailed content negotiation. SPNEGO authentication headers can be up to 12392 bytes.\n\nThis directive gives the server administrator greater control over abnormal client request behavior, which may be useful for avoiding some forms of denial-of-service attacks.'\n  desc 'check', 'Locate the Apache httpd.conf file.\n\nOpen the httpd.conf file with an editor such as notepad, and search for the following uncommented directive: LimitRequestFieldSize\n\nIf no LimitRequestFieldSize directives exist, this is a Finding. Although the default value is 8190, this directive must be explicitly set.\n\nFor every LimitRequestFieldSize directive found, the value needs to be 8190. If any directive is set improperly, this is a finding.\n\nNOTE: This value may vary in size based on the application that is being supported by the web server. This vulnerability can be documented locally by the ISSM/ISSO if the site has operational reasons for an increased or decreased value. If the ISSM/ISSO has approved this change in writing, this should be marked as Not a Finding.'\n  desc 'fix', 'Ensure the LimitRequestFieldSize is explicitly configured and set to 8190 or ISSO/ISSM-approved value.'\n  impact 0.5\n  ref 'DPMS Target Apache Instance 2.x'\n  tag check_id: 'C-33692r5_chk'\n  tag severity: 'medium'\n  tag gid: 'V-13738'\n  tag rid: 'SV-33010r3_rule'\n  tag stig_id: 'WA000-WWA064 W22'\n  tag gtitle: 'WA000-WWA064'\n  tag fix_id: 'F-29310r4_fix'\n  tag 'documentable'\n  tag responsibility: 'Web Administrator'\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Apache_2-2_Server_WIN_STIG_V1R13/controls/SV-33010.rb"},"title":"The HTTP request header field size must be limited.","desc":"Buffer overflow attacks are carried out by a malicious attacker sending amounts of data that the web server cannot store in a given size buffer. The eventual overflow of this buffer can overwrite system memory. Subsequently an attacker may be able to elevate privileges and take control of the server. This Apache directive limits the size of the various HTTP header sizes, thereby limiting the chances for a buffer overflow. \n\nThe LimitRequestFieldSize directive allows the server administrator to reduce or increase the limit on the allowed size of an HTTP request header field. A server needs this value to be large enough to hold any one header field from a normal client request. The size of a normal request header field will vary greatly among different client implementations, often depending upon the extent to which a user has configured their browser to support detailed content negotiation. SPNEGO authentication headers can be up to 12392 bytes.\n\nThis directive gives the server administrator greater control over abnormal client request behavior, which may be useful for avoiding some forms of denial-of-service attacks.","descriptions":{"default":"Buffer overflow attacks are carried out by a malicious attacker sending amounts of data that the web server cannot store in a given size buffer. The eventual overflow of this buffer can overwrite system memory. Subsequently an attacker may be able to elevate privileges and take control of the server. This Apache directive limits the size of the various HTTP header sizes, thereby limiting the chances for a buffer overflow. \n\nThe LimitRequestFieldSize directive allows the server administrator to reduce or increase the limit on the allowed size of an HTTP request header field. A server needs this value to be large enough to hold any one header field from a normal client request. The size of a normal request header field will vary greatly among different client implementations, often depending upon the extent to which a user has configured their browser to support detailed content negotiation. SPNEGO authentication headers can be up to 12392 bytes.\n\nThis directive gives the server administrator greater control over abnormal client request behavior, which may be useful for avoiding some forms of denial-of-service attacks.","check":"Locate the Apache httpd.conf file.\n\nOpen the httpd.conf file with an editor such as notepad, and search for the following uncommented directive: LimitRequestFieldSize\n\nIf no LimitRequestFieldSize directives exist, this is a Finding. Although the default value is 8190, this directive must be explicitly set.\n\nFor every LimitRequestFieldSize directive found, the value needs to be 8190. If any directive is set improperly, this is a finding.\n\nNOTE: This value may vary in size based on the application that is being supported by the web server. This vulnerability can be documented locally by the ISSM/ISSO if the site has operational reasons for an increased or decreased value. If the ISSM/ISSO has approved this change in writing, this should be marked as Not a Finding.","fix":"Ensure the LimitRequestFieldSize is explicitly configured and set to 8190 or ISSO/ISSM-approved value."},"impact":0.5,"refs":[{"ref":"DPMS Target Apache Instance 2.x"}],"tags":{"check_id":"C-33692r5_chk","severity":"medium","gid":"V-13738","rid":"SV-33010r3_rule","stig_id":"WA000-WWA064 W22","gtitle":"WA000-WWA064","fix_id":"F-29310r4_fix","documentable":null,"responsibility":"Web Administrator"}},{"id":"SV-33011","code":"control 'SV-33011' do\n  title 'The HTTP request line must be limited.'\n  desc \"Buffer overflow attacks are carried out by a malicious attacker sending amounts of data that the web server cannot store in a given size buffer. The eventual overflow of this buffer can overwrite system memory. Subsequently an attacker may be able to elevate privileges and take control of the server. This Apache directive limits the size of the various HTTP header sizes, thereby limiting the chances for a buffer overflow. \n\nThe LimitRequestLine directive allows the server administrator to reduce or increase the limit on the allowed size of a client's HTTP request-line. Since the request-line consists of the HTTP method, URI, and protocol version, the LimitRequestLine directive places a restriction on the length of a request-URI allowed for a request on the server. A server needs this value to be large enough to hold any of its resource names, including any information that might be passed in the query part of a GET request.\n\nThis directive gives the server administrator greater control over abnormal client request behavior, which may be useful for avoiding some forms of denial-of-service attacks.\"\n  desc 'check', 'Locate the Apache httpd.conf file.\n\nOpen the httpd.conf file with an editor such as notepad, and search for the following uncommented directive: LimitRequestLine\n\nEvery enabled LimitRequestLine value needs to be 8190. If any directive is set improperly, this is a Finding.\nIf no LimitRequestLine directives exist, this is a Finding. Although the default value is 8190, this directive must be explicitly set.\n\nNOTE: This value may vary in size based on the application that is being supported by the web server. This vulnerability can be documented locally by the ISSM/ISSO if the site has operational reasons for an increased or decreased value. If the ISSM/ISSO has approved this change in writing, this should be marked as Not a Finding.'\n  desc 'fix', 'Set LimitRequestLine to 8190 or approved value. If no LimitRequestLine directives exist, explicitly add the directive and set to 8190.'\n  impact 0.5\n  ref 'DPMS Target Apache Instance 2.x'\n  tag check_id: 'C-33693r3_chk'\n  tag severity: 'medium'\n  tag gid: 'V-13739'\n  tag rid: 'SV-33011r3_rule'\n  tag stig_id: 'WA000-WWA066 W22'\n  tag gtitle: 'WA000-WWA066'\n  tag fix_id: 'F-29311r2_fix'\n  tag 'documentable'\n  tag responsibility: 'Web Administrator'\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Apache_2-2_Server_WIN_STIG_V1R13/controls/SV-33011.rb"},"title":"The HTTP request line must be limited.","desc":"Buffer overflow attacks are carried out by a malicious attacker sending amounts of data that the web server cannot store in a given size buffer. The eventual overflow of this buffer can overwrite system memory. Subsequently an attacker may be able to elevate privileges and take control of the server. This Apache directive limits the size of the various HTTP header sizes, thereby limiting the chances for a buffer overflow. \n\nThe LimitRequestLine directive allows the server administrator to reduce or increase the limit on the allowed size of a client's HTTP request-line. Since the request-line consists of the HTTP method, URI, and protocol version, the LimitRequestLine directive places a restriction on the length of a request-URI allowed for a request on the server. A server needs this value to be large enough to hold any of its resource names, including any information that might be passed in the query part of a GET request.\n\nThis directive gives the server administrator greater control over abnormal client request behavior, which may be useful for avoiding some forms of denial-of-service attacks.","descriptions":{"default":"Buffer overflow attacks are carried out by a malicious attacker sending amounts of data that the web server cannot store in a given size buffer. The eventual overflow of this buffer can overwrite system memory. Subsequently an attacker may be able to elevate privileges and take control of the server. This Apache directive limits the size of the various HTTP header sizes, thereby limiting the chances for a buffer overflow. \n\nThe LimitRequestLine directive allows the server administrator to reduce or increase the limit on the allowed size of a client's HTTP request-line. Since the request-line consists of the HTTP method, URI, and protocol version, the LimitRequestLine directive places a restriction on the length of a request-URI allowed for a request on the server. A server needs this value to be large enough to hold any of its resource names, including any information that might be passed in the query part of a GET request.\n\nThis directive gives the server administrator greater control over abnormal client request behavior, which may be useful for avoiding some forms of denial-of-service attacks.","check":"Locate the Apache httpd.conf file.\n\nOpen the httpd.conf file with an editor such as notepad, and search for the following uncommented directive: LimitRequestLine\n\nEvery enabled LimitRequestLine value needs to be 8190. If any directive is set improperly, this is a Finding.\nIf no LimitRequestLine directives exist, this is a Finding. Although the default value is 8190, this directive must be explicitly set.\n\nNOTE: This value may vary in size based on the application that is being supported by the web server. This vulnerability can be documented locally by the ISSM/ISSO if the site has operational reasons for an increased or decreased value. If the ISSM/ISSO has approved this change in writing, this should be marked as Not a Finding.","fix":"Set LimitRequestLine to 8190 or approved value. If no LimitRequestLine directives exist, explicitly add the directive and set to 8190."},"impact":0.5,"refs":[{"ref":"DPMS Target Apache Instance 2.x"}],"tags":{"check_id":"C-33693r3_chk","severity":"medium","gid":"V-13739","rid":"SV-33011r3_rule","stig_id":"WA000-WWA066 W22","gtitle":"WA000-WWA066","fix_id":"F-29311r2_fix","documentable":null,"responsibility":"Web Administrator"}},{"id":"SV-33012","code":"control 'SV-33012' do\n  title 'A public web server, if hosted on the NIPRNet, must be isolated in an accredited DoD DMZ Extension.'\n  desc 'To minimize exposure of private assets to unnecessary risk by attackers, public web servers must be isolated from internal systems.  Public web servers are by nature more vulnerable to attack from publically based sources, such as the public Internet. Once compromised, a public web server might be used as a base for further attack on private resources, unless additional layers of protection are implemented. Public web servers must be located in a DoD DMZ Extension, if hosted on the NIPRNet, with carefully controlled access. Failure to isolate resources in this way increase risk that private assets are exposed to attacks from public sources.'\n  desc 'check', 'Interview the SA or web administrator to see where the public web server is logically located in the data center. Review the site’s network diagram to see how the web server is connected to the LAN. Visually check the web server hardware connections to see if it conforms to the site’s network diagram.   An improperly located public web server is a potential threat to the entire network.  If the web server is not isolated in an accredited DoD DMZ Extension, this is a finding.'\n  desc 'fix', 'Logically relocate the public web server to be isolated from internal systems. In addition, ensure the public web server does not have trusted connections with assets outside the confines of the demilitarized zone (DMZ) other than application and/or database servers that are a part of the same system as the web server.'\n  impact 0.5\n  ref 'DPMS Target Apache Instance 2.x'\n  tag check_id: 'C-33694r2_chk'\n  tag severity: 'medium'\n  tag gid: 'V-2242'\n  tag rid: 'SV-33012r2_rule'\n  tag stig_id: 'WA060 W22'\n  tag gtitle: 'WA060'\n  tag fix_id: 'F-29314r2_fix'\n  tag 'documentable'\n  tag responsibility: 'System Administrator'\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Apache_2-2_Server_WIN_STIG_V1R13/controls/SV-33012.rb"},"title":"A public web server, if hosted on the NIPRNet, must be isolated in an accredited DoD DMZ Extension.","desc":"To minimize exposure of private assets to unnecessary risk by attackers, public web servers must be isolated from internal systems.  Public web servers are by nature more vulnerable to attack from publically based sources, such as the public Internet. Once compromised, a public web server might be used as a base for further attack on private resources, unless additional layers of protection are implemented. Public web servers must be located in a DoD DMZ Extension, if hosted on the NIPRNet, with carefully controlled access. Failure to isolate resources in this way increase risk that private assets are exposed to attacks from public sources.","descriptions":{"default":"To minimize exposure of private assets to unnecessary risk by attackers, public web servers must be isolated from internal systems.  Public web servers are by nature more vulnerable to attack from publically based sources, such as the public Internet. Once compromised, a public web server might be used as a base for further attack on private resources, unless additional layers of protection are implemented. Public web servers must be located in a DoD DMZ Extension, if hosted on the NIPRNet, with carefully controlled access. Failure to isolate resources in this way increase risk that private assets are exposed to attacks from public sources.","check":"Interview the SA or web administrator to see where the public web server is logically located in the data center. Review the site’s network diagram to see how the web server is connected to the LAN. Visually check the web server hardware connections to see if it conforms to the site’s network diagram.   An improperly located public web server is a potential threat to the entire network.  If the web server is not isolated in an accredited DoD DMZ Extension, this is a finding.","fix":"Logically relocate the public web server to be isolated from internal systems. In addition, ensure the public web server does not have trusted connections with assets outside the confines of the demilitarized zone (DMZ) other than application and/or database servers that are a part of the same system as the web server."},"impact":0.5,"refs":[{"ref":"DPMS Target Apache Instance 2.x"}],"tags":{"check_id":"C-33694r2_chk","severity":"medium","gid":"V-2242","rid":"SV-33012r2_rule","stig_id":"WA060 W22","gtitle":"WA060","fix_id":"F-29314r2_fix","documentable":null,"responsibility":"System Administrator"}},{"id":"SV-33013","code":"control 'SV-33013' do\n  title 'A private web server must be located on a separate controlled access subnet.'\n  desc 'Private web servers, which host sites that serve controlled access data, must be protected from outside threats in addition to insider threats. Insider threat may be accidental or intentional but, in either case, can cause a disruption in service of the web server. To protect the private web server from these threats, it must be located on a separate controlled access subnet and must not be a part of the public DMZ that houses the public web servers. It also cannot be located inside the enclave as part of the local general population LAN.'\n  desc 'check', 'This check verifies that the private web server is located on a separate controlled access subnet and is not a part of the public DMZ that houses the public web servers. In addition, the private web server needs to be isolated via a controlled access mechanism from the local general population LAN.\n\nInterview the ISSO and confirm with the SA, the Web Manager, or the individual in an equivalent role. Ask for the web server’s documented procedures and processes.\n\nVerify the documented procedures and processes include verbiage and a diagram clearly showing what devices (router, switch, firewall) lie between the private web server and the Internet, showing the private web server’s location on a separate subnet dedicated to functions not intended for public access. \n\nIf the documented procedures and processes do include verbiage and/or do not include a diagram clearly showing what devices (router, switch, firewall) lie between the private web server and the Internet, showing the private web server’s location on a separate subnet dedicated to functions not intended for public access, this is a finding.'\n  desc 'fix', 'Isolate the private web server from the public DMZ and separate it from the internal general population LAN. This separation must have access control in place to protect the web server from internal threats.'\n  impact 0.5\n  ref 'DPMS Target Apache Instance 2.x'\n  tag check_id: 'C-33695r2_chk'\n  tag severity: 'medium'\n  tag gid: 'V-2243'\n  tag rid: 'SV-33013r2_rule'\n  tag stig_id: 'WA070 W22'\n  tag gtitle: 'WA070'\n  tag fix_id: 'F-29317r1_fix'\n  tag 'documentable'\n  tag responsibility: 'System Administrator'\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Apache_2-2_Server_WIN_STIG_V1R13/controls/SV-33013.rb"},"title":"A private web server must be located on a separate controlled access subnet.","desc":"Private web servers, which host sites that serve controlled access data, must be protected from outside threats in addition to insider threats. Insider threat may be accidental or intentional but, in either case, can cause a disruption in service of the web server. To protect the private web server from these threats, it must be located on a separate controlled access subnet and must not be a part of the public DMZ that houses the public web servers. It also cannot be located inside the enclave as part of the local general population LAN.","descriptions":{"default":"Private web servers, which host sites that serve controlled access data, must be protected from outside threats in addition to insider threats. Insider threat may be accidental or intentional but, in either case, can cause a disruption in service of the web server. To protect the private web server from these threats, it must be located on a separate controlled access subnet and must not be a part of the public DMZ that houses the public web servers. It also cannot be located inside the enclave as part of the local general population LAN.","check":"This check verifies that the private web server is located on a separate controlled access subnet and is not a part of the public DMZ that houses the public web servers. In addition, the private web server needs to be isolated via a controlled access mechanism from the local general population LAN.\n\nInterview the ISSO and confirm with the SA, the Web Manager, or the individual in an equivalent role. Ask for the web server’s documented procedures and processes.\n\nVerify the documented procedures and processes include verbiage and a diagram clearly showing what devices (router, switch, firewall) lie between the private web server and the Internet, showing the private web server’s location on a separate subnet dedicated to functions not intended for public access. \n\nIf the documented procedures and processes do include verbiage and/or do not include a diagram clearly showing what devices (router, switch, firewall) lie between the private web server and the Internet, showing the private web server’s location on a separate subnet dedicated to functions not intended for public access, this is a finding.","fix":"Isolate the private web server from the public DMZ and separate it from the internal general population LAN. This separation must have access control in place to protect the web server from internal threats."},"impact":0.5,"refs":[{"ref":"DPMS Target Apache Instance 2.x"}],"tags":{"check_id":"C-33695r2_chk","severity":"medium","gid":"V-2243","rid":"SV-33013r2_rule","stig_id":"WA070 W22","gtitle":"WA070","fix_id":"F-29317r1_fix","documentable":null,"responsibility":"System Administrator"}},{"id":"SV-33014","code":"control 'SV-33014' do\n  title 'Web server content and configuration files must be part of a routine backup program.'\n  desc 'Backing up web server data and web server application software after upgrades or maintenance ensures that recovery can be accomplished up to the current version.  It also provides a means to determine and recover from subsequent unauthorized changes to the software and data.\nA tested and verifiable backup strategy will be implemented for web server software as well as all web server data files.  Backup and recovery procedures will be documented and the Web Manager or SA for the specific application will be responsible for the design, test, and implementation of the procedures.\n The site will have a contingency processing plan/disaster recovery plan that includes web servers. The contingency plan will be periodically tested in accordance with DoDI 8500.2 requirements.\nThe site will identify an off-site storage facility in accordance with DoDI 8500.2 requirements.  Off-site backups will be updated on a regular basis and the frequency will be documented in the contingency plan.'\n  desc 'check', 'The reviewer should query the Information Systems Security Officer (ISSO), SA, Web Manager, Webmaster or developers as necessary to determine whether or not a tested and verifiable backup strategy has been implemented for web server software as well as all web server data files.\n\nProposed Questions:\n\nWho maintains the backup and recovery procedures?\nDo you have a copy of the backup and recovery procedures?\nWhere is the off-site backup location?\nIs the contingency plan documented?\nWhen was the last time the contingency plan was tested?\nAre the test dates and results documented?\n\nIf there is not a backup and recovery process for the web server, this is a finding.'\n  desc 'fix', 'Document the backup procedures.'\n  impact 0.3\n  ref 'DPMS Target Apache Instance 2.x'\n  tag check_id: 'C-33696r2_chk'\n  tag severity: 'low'\n  tag gid: 'V-6485'\n  tag rid: 'SV-33014r2_rule'\n  tag stig_id: 'WA140 W22'\n  tag gtitle: 'WA140'\n  tag fix_id: 'F-29319r1_fix'\n  tag 'documentable'\n  tag responsibility: 'System Administrator'\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Apache_2-2_Server_WIN_STIG_V1R13/controls/SV-33014.rb"},"title":"Web server content and configuration files must be part of a routine backup program.","desc":"Backing up web server data and web server application software after upgrades or maintenance ensures that recovery can be accomplished up to the current version.  It also provides a means to determine and recover from subsequent unauthorized changes to the software and data.\nA tested and verifiable backup strategy will be implemented for web server software as well as all web server data files.  Backup and recovery procedures will be documented and the Web Manager or SA for the specific application will be responsible for the design, test, and implementation of the procedures.\n The site will have a contingency processing plan/disaster recovery plan that includes web servers. The contingency plan will be periodically tested in accordance with DoDI 8500.2 requirements.\nThe site will identify an off-site storage facility in accordance with DoDI 8500.2 requirements.  Off-site backups will be updated on a regular basis and the frequency will be documented in the contingency plan.","descriptions":{"default":"Backing up web server data and web server application software after upgrades or maintenance ensures that recovery can be accomplished up to the current version.  It also provides a means to determine and recover from subsequent unauthorized changes to the software and data.\nA tested and verifiable backup strategy will be implemented for web server software as well as all web server data files.  Backup and recovery procedures will be documented and the Web Manager or SA for the specific application will be responsible for the design, test, and implementation of the procedures.\n The site will have a contingency processing plan/disaster recovery plan that includes web servers. The contingency plan will be periodically tested in accordance with DoDI 8500.2 requirements.\nThe site will identify an off-site storage facility in accordance with DoDI 8500.2 requirements.  Off-site backups will be updated on a regular basis and the frequency will be documented in the contingency plan.","check":"The reviewer should query the Information Systems Security Officer (ISSO), SA, Web Manager, Webmaster or developers as necessary to determine whether or not a tested and verifiable backup strategy has been implemented for web server software as well as all web server data files.\n\nProposed Questions:\n\nWho maintains the backup and recovery procedures?\nDo you have a copy of the backup and recovery procedures?\nWhere is the off-site backup location?\nIs the contingency plan documented?\nWhen was the last time the contingency plan was tested?\nAre the test dates and results documented?\n\nIf there is not a backup and recovery process for the web server, this is a finding.","fix":"Document the backup procedures."},"impact":0.3,"refs":[{"ref":"DPMS Target Apache Instance 2.x"}],"tags":{"check_id":"C-33696r2_chk","severity":"low","gid":"V-6485","rid":"SV-33014r2_rule","stig_id":"WA140 W22","gtitle":"WA140","fix_id":"F-29319r1_fix","documentable":null,"responsibility":"System Administrator"}},{"id":"SV-33015","code":"control 'SV-33015' do\n  title 'Classified web servers will be afforded physical security commensurate with the classification of its content.'\n  desc 'When data of a classified nature is migrated to a web server, fundamental principles applicable to the safeguarding of classified material must be followed. A classified web server needs to be afforded physical security commensurate with the classification of its content to ensure the protection of the data it houses.'\n  desc 'check', 'The reviewer should query the ISSO, the SA, the web administrator, or developers as necessary to determine if a classified web server is afforded physical security commensurate with the classification of its content (i.e., is located in a vault or a room approved for classified storage at the highest classification processed on that system).\n\nAsk what the classification of the web server is, and based on the classification, evaluate the location of the web server to determine if it is approved for storage of that classification level.\n\nIf the web server is not appropriately physically protected based on its classification, this is a finding.'\n  desc 'fix', 'Relocate the web server to a location appropriate to classified devices.'\n  impact 0.7\n  ref 'DPMS Target Apache Instance 2.x'\n  tag check_id: 'C-33697r2_chk'\n  tag severity: 'high'\n  tag gid: 'V-13591'\n  tag rid: 'SV-33015r2_rule'\n  tag stig_id: 'WA155 W22'\n  tag gtitle: 'WA155'\n  tag fix_id: 'F-29321r1_fix'\n  tag 'documentable'\n  tag responsibility: ['System Administrator', 'Information Assurance Officer']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Apache_2-2_Server_WIN_STIG_V1R13/controls/SV-33015.rb"},"title":"Classified web servers will be afforded physical security commensurate with the classification of its content.","desc":"When data of a classified nature is migrated to a web server, fundamental principles applicable to the safeguarding of classified material must be followed. A classified web server needs to be afforded physical security commensurate with the classification of its content to ensure the protection of the data it houses.","descriptions":{"default":"When data of a classified nature is migrated to a web server, fundamental principles applicable to the safeguarding of classified material must be followed. A classified web server needs to be afforded physical security commensurate with the classification of its content to ensure the protection of the data it houses.","check":"The reviewer should query the ISSO, the SA, the web administrator, or developers as necessary to determine if a classified web server is afforded physical security commensurate with the classification of its content (i.e., is located in a vault or a room approved for classified storage at the highest classification processed on that system).\n\nAsk what the classification of the web server is, and based on the classification, evaluate the location of the web server to determine if it is approved for storage of that classification level.\n\nIf the web server is not appropriately physically protected based on its classification, this is a finding.","fix":"Relocate the web server to a location appropriate to classified devices."},"impact":0.7,"refs":[{"ref":"DPMS Target Apache Instance 2.x"}],"tags":{"check_id":"C-33697r2_chk","severity":"high","gid":"V-13591","rid":"SV-33015r2_rule","stig_id":"WA155 W22","gtitle":"WA155","fix_id":"F-29321r1_fix","documentable":null,"responsibility":["System Administrator","Information Assurance Officer"]}},{"id":"SV-33016","code":"control 'SV-33016' do\n  title 'The site software used with the web server must have all applicable security patches applied and documented.'\n  desc 'The IAVM process does not address all patches that have been identified for the host operating system or, in this case, the web server software environment. Many vendors have subscription services available to notify users of known security threats. The site needs to be aware of these fixes and make determinations based on local policy and what software features are installed, if these patches need to be applied. \n\nIn some cases, patches also apply to middleware and database systems. Maintaining the security of web servers requires frequent reviews of security notices. Many security notices mandate the installation of a software patch to overcome security vulnerabilities. \n\nSAs and ISSOs should regularly check the vendor support web site for patches and information related to the web server software. All applicable security patches will be applied to the operating system and to the web server software. Security patches are deemed applicable if the product is installed, even if it is not used or is disabled.'\n  desc 'check', 'Query the web administrator to determine if the site has a detailed process as part of its configuration management plan to stay compliant with all security-related patches.\n\nProposed Questions:\n\nHow does the SA stay current with web server vendor patches?\nHow is the SA notified when a new security patch is issued by the vendor? (Exclude the IAVM.)\nWhat is the process followed for applying patches to the web server?\n\nIf the site is not in compliance with all applicable security patches, this is a finding.'\n  desc 'fix', 'Establish a detailed process as part of the configuration management plan to stay compliant with all web server security-related patches.'\n  impact 0.5\n  ref 'DPMS Target Apache Instance 2.x'\n  tag check_id: 'C-33698r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-13613'\n  tag rid: 'SV-33016r2_rule'\n  tag stig_id: 'WA230 W22'\n  tag gtitle: 'WA230'\n  tag fix_id: 'F-29323r1_fix'\n  tag 'documentable'\n  tag responsibility: 'Information Assurance Officer'\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Apache_2-2_Server_WIN_STIG_V1R13/controls/SV-33016.rb"},"title":"The site software used with the web server must have all applicable security patches applied and documented.","desc":"The IAVM process does not address all patches that have been identified for the host operating system or, in this case, the web server software environment. Many vendors have subscription services available to notify users of known security threats. The site needs to be aware of these fixes and make determinations based on local policy and what software features are installed, if these patches need to be applied. \n\nIn some cases, patches also apply to middleware and database systems. Maintaining the security of web servers requires frequent reviews of security notices. Many security notices mandate the installation of a software patch to overcome security vulnerabilities. \n\nSAs and ISSOs should regularly check the vendor support web site for patches and information related to the web server software. All applicable security patches will be applied to the operating system and to the web server software. Security patches are deemed applicable if the product is installed, even if it is not used or is disabled.","descriptions":{"default":"The IAVM process does not address all patches that have been identified for the host operating system or, in this case, the web server software environment. Many vendors have subscription services available to notify users of known security threats. The site needs to be aware of these fixes and make determinations based on local policy and what software features are installed, if these patches need to be applied. \n\nIn some cases, patches also apply to middleware and database systems. Maintaining the security of web servers requires frequent reviews of security notices. Many security notices mandate the installation of a software patch to overcome security vulnerabilities. \n\nSAs and ISSOs should regularly check the vendor support web site for patches and information related to the web server software. All applicable security patches will be applied to the operating system and to the web server software. Security patches are deemed applicable if the product is installed, even if it is not used or is disabled.","check":"Query the web administrator to determine if the site has a detailed process as part of its configuration management plan to stay compliant with all security-related patches.\n\nProposed Questions:\n\nHow does the SA stay current with web server vendor patches?\nHow is the SA notified when a new security patch is issued by the vendor? (Exclude the IAVM.)\nWhat is the process followed for applying patches to the web server?\n\nIf the site is not in compliance with all applicable security patches, this is a finding.","fix":"Establish a detailed process as part of the configuration management plan to stay compliant with all web server security-related patches."},"impact":0.5,"refs":[{"ref":"DPMS Target Apache Instance 2.x"}],"tags":{"check_id":"C-33698r1_chk","severity":"medium","gid":"V-13613","rid":"SV-33016r2_rule","stig_id":"WA230 W22","gtitle":"WA230","fix_id":"F-29323r1_fix","documentable":null,"responsibility":"Information Assurance Officer"}},{"id":"SV-33017","code":"control 'SV-33017' do\n  title 'Administrative users and groups that have access rights to the web server must be documented.'\n  desc 'There are typically several individuals and groups that are involved in running a production web site. In most cases, we can identify several types of users on a web server. These are the System Administrators (SAs), Web Managers, Auditors, Authors, Developers, and the Clients.  Accounts will be restricted to those who are necessary to maintain web services, review the server’s operation, and the operating system. A detailed record of these accounts must be maintained.'\n  desc 'check', 'Proposed Questions:\n\nHow many user accounts are associated with the web site operation and maintenance?\nWhere are these accounts documented? \n\nWorking with the SA or the web administrator, determine if the documentation matches an examination of the privileged IDs on the server. Using User Manager, User Manager for Domains, or Local Users and Groups, examine user accounts to verify the above information. Query the SA or the Web Manager regarding the use of each account and each group found on the server.\n\nIf the documentation does not match the users and groups found on the server, this is a finding.'\n  desc 'fix', 'Document the administrative users and groups which have access rights to the web server in the site SOP or equivalent document.'\n  impact 0.3\n  ref 'DPMS Target Apache Instance 2.x'\n  tag check_id: 'C-33699r1_chk'\n  tag severity: 'low'\n  tag gid: 'V-2257'\n  tag rid: 'SV-33017r1_rule'\n  tag stig_id: 'WA120 W22'\n  tag gtitle: 'WA120'\n  tag fix_id: 'F-29327r1_fix'\n  tag 'documentable'\n  tag responsibility: 'System Administrator'\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Apache_2-2_Server_WIN_STIG_V1R13/controls/SV-33017.rb"},"title":"Administrative users and groups that have access rights to the web server must be documented.","desc":"There are typically several individuals and groups that are involved in running a production web site. In most cases, we can identify several types of users on a web server. These are the System Administrators (SAs), Web Managers, Auditors, Authors, Developers, and the Clients.  Accounts will be restricted to those who are necessary to maintain web services, review the server’s operation, and the operating system. A detailed record of these accounts must be maintained.","descriptions":{"default":"There are typically several individuals and groups that are involved in running a production web site. In most cases, we can identify several types of users on a web server. These are the System Administrators (SAs), Web Managers, Auditors, Authors, Developers, and the Clients.  Accounts will be restricted to those who are necessary to maintain web services, review the server’s operation, and the operating system. A detailed record of these accounts must be maintained.","check":"Proposed Questions:\n\nHow many user accounts are associated with the web site operation and maintenance?\nWhere are these accounts documented? \n\nWorking with the SA or the web administrator, determine if the documentation matches an examination of the privileged IDs on the server. Using User Manager, User Manager for Domains, or Local Users and Groups, examine user accounts to verify the above information. Query the SA or the Web Manager regarding the use of each account and each group found on the server.\n\nIf the documentation does not match the users and groups found on the server, this is a finding.","fix":"Document the administrative users and groups which have access rights to the web server in the site SOP or equivalent document."},"impact":0.3,"refs":[{"ref":"DPMS Target Apache Instance 2.x"}],"tags":{"check_id":"C-33699r1_chk","severity":"low","gid":"V-2257","rid":"SV-33017r1_rule","stig_id":"WA120 W22","gtitle":"WA120","fix_id":"F-29327r1_fix","documentable":null,"responsibility":"System Administrator"}},{"id":"SV-33044","code":"control 'SV-33044' do\n  title 'Public web server resources must not be shared with private assets.'\n  desc 'It is important to segregate public web server resources from private resources located behind the DoD DMZ in order to protect private assets. When folders, drives or other resources are directly shared between the public web server and private servers the intent of data and resource segregation can be compromised.'\n  desc 'check', 'The reviewer should query the ISSO, the SA, or the web administrator as necessary to determine if the public web server has a two-way trusted relationship with any private asset. Private web server resources (e.g., drives, folders, printers, etc.) will not be directly mapped to or shared with public web servers.\n\nThe following check indicates an inappropriate sharing of public web server resources:\n\nNavigate to the web server content folders/directories. These directories must not be shared. On the web server content folder, right-click on Properties, then select sharing. All entries must be disabled. \n\nIf sharing is selected for any web folder, this is a finding.\n\nThe following checks indicate inappropriate sharing of private resources with the public web server:\n\n1. From a command prompt, type net share and Enter. This will provide a list of available shares. \n2. Check to see if file and printer or file-sharing is enabled under the Network icon in the Control Panel. \n\nIf private resources (e.g., drives, partitions, folders/directories, printers, etc.) are shared with the public web server, this is a finding.'\n  desc 'fix', 'Configure the public web server to not have a trusted relationship with any system resource that is not accessible to the public. Web content is not to be shared via Microsoft shares or NFS mounts.'\n  impact 0.5\n  ref 'DPMS Target Apache Instance 2.x'\n  tag check_id: 'C-33720r2_chk'\n  tag severity: 'medium'\n  tag gid: 'V-2234'\n  tag rid: 'SV-33044r2_rule'\n  tag stig_id: 'WG040 W22'\n  tag gtitle: 'WG040'\n  tag fix_id: 'F-29355r1_fix'\n  tag 'documentable'\n  tag responsibility: 'Web Administrator'\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Apache_2-2_Server_WIN_STIG_V1R13/controls/SV-33044.rb"},"title":"Public web server resources must not be shared with private assets.","desc":"It is important to segregate public web server resources from private resources located behind the DoD DMZ in order to protect private assets. When folders, drives or other resources are directly shared between the public web server and private servers the intent of data and resource segregation can be compromised.","descriptions":{"default":"It is important to segregate public web server resources from private resources located behind the DoD DMZ in order to protect private assets. When folders, drives or other resources are directly shared between the public web server and private servers the intent of data and resource segregation can be compromised.","check":"The reviewer should query the ISSO, the SA, or the web administrator as necessary to determine if the public web server has a two-way trusted relationship with any private asset. Private web server resources (e.g., drives, folders, printers, etc.) will not be directly mapped to or shared with public web servers.\n\nThe following check indicates an inappropriate sharing of public web server resources:\n\nNavigate to the web server content folders/directories. These directories must not be shared. On the web server content folder, right-click on Properties, then select sharing. All entries must be disabled. \n\nIf sharing is selected for any web folder, this is a finding.\n\nThe following checks indicate inappropriate sharing of private resources with the public web server:\n\n1. From a command prompt, type net share and Enter. This will provide a list of available shares. \n2. Check to see if file and printer or file-sharing is enabled under the Network icon in the Control Panel. \n\nIf private resources (e.g., drives, partitions, folders/directories, printers, etc.) are shared with the public web server, this is a finding.","fix":"Configure the public web server to not have a trusted relationship with any system resource that is not accessible to the public. Web content is not to be shared via Microsoft shares or NFS mounts."},"impact":0.5,"refs":[{"ref":"DPMS Target Apache Instance 2.x"}],"tags":{"check_id":"C-33720r2_chk","severity":"medium","gid":"V-2234","rid":"SV-33044r2_rule","stig_id":"WG040 W22","gtitle":"WG040","fix_id":"F-29355r1_fix","documentable":null,"responsibility":"Web Administrator"}},{"id":"SV-33048","code":"control 'SV-33048' do\n  title 'The web server service password(s) must be entrusted to the SA or Web Manager.'\n  desc 'Normally, a service account is established for the web server. This is because a privileged account is not desirable and the server is designed to run for long uninterrupted periods of time. The SA or Web Manager will need password access to the web server to restart the service in the event of an emergency as the web server is not to restart automatically after an unscheduled interruption.  If the password is not entrusted to an SA or web manager the ability to ensure the availability of the web server is compromised.'\n  desc 'check', 'The reviewer should make a note of the name of the account being used for the web service.  There may also be other server services running related to the web server in support of a particular web application, these passwords must be entrusted to the SA or Web Manager as well. \n\nQuery the SA or Web Manager to determine if they have the web service password(s).\n\nIf the web services password(s) are not entrusted to the SA or Web Manager, this is a finding.\n\nNOTE: For installations that use the LocalService or NetworkService accounts, the password is OS generated, so the SA or Web Manager having an Admin account on the system would meet the intent of this check.'\n  desc 'fix', 'Ensure the SA or Web Manager is entrusted with the web service(s) password.'\n  impact 0.5\n  ref 'DPMS Target Apache Instance 2.x'\n  tag check_id: 'C-33724r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-2232'\n  tag rid: 'SV-33048r1_rule'\n  tag stig_id: 'WG050 W22'\n  tag gtitle: 'WG050'\n  tag fix_id: 'F-29358r1_fix'\n  tag 'documentable'\n  tag responsibility: ['System Administrator', 'Information Assurance Officer', 'Web Administrator']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Apache_2-2_Server_WIN_STIG_V1R13/controls/SV-33048.rb"},"title":"The web server service password(s) must be entrusted to the SA or Web Manager.","desc":"Normally, a service account is established for the web server. This is because a privileged account is not desirable and the server is designed to run for long uninterrupted periods of time. The SA or Web Manager will need password access to the web server to restart the service in the event of an emergency as the web server is not to restart automatically after an unscheduled interruption.  If the password is not entrusted to an SA or web manager the ability to ensure the availability of the web server is compromised.","descriptions":{"default":"Normally, a service account is established for the web server. This is because a privileged account is not desirable and the server is designed to run for long uninterrupted periods of time. The SA or Web Manager will need password access to the web server to restart the service in the event of an emergency as the web server is not to restart automatically after an unscheduled interruption.  If the password is not entrusted to an SA or web manager the ability to ensure the availability of the web server is compromised.","check":"The reviewer should make a note of the name of the account being used for the web service.  There may also be other server services running related to the web server in support of a particular web application, these passwords must be entrusted to the SA or Web Manager as well. \n\nQuery the SA or Web Manager to determine if they have the web service password(s).\n\nIf the web services password(s) are not entrusted to the SA or Web Manager, this is a finding.\n\nNOTE: For installations that use the LocalService or NetworkService accounts, the password is OS generated, so the SA or Web Manager having an Admin account on the system would meet the intent of this check.","fix":"Ensure the SA or Web Manager is entrusted with the web service(s) password."},"impact":0.5,"refs":[{"ref":"DPMS Target Apache Instance 2.x"}],"tags":{"check_id":"C-33724r1_chk","severity":"medium","gid":"V-2232","rid":"SV-33048r1_rule","stig_id":"WG050 W22","gtitle":"WG050","fix_id":"F-29358r1_fix","documentable":null,"responsibility":["System Administrator","Information Assurance Officer","Web Administrator"]}},{"id":"SV-33061","code":"control 'SV-33061' do\n  title 'Installation of a compiler on production web server must be prohibited.'\n  desc 'The presence of a compiler on a production server facilitates the malicious user’s task of creating custom versions of programs and installing Trojan Horses or viruses. For example, the attacker’s code can be uploaded and compiled on the server under attack.'\n  desc 'check', 'Using Windows Explorer, search the system for the existence of known compilers such as msc.exe, msvc.exe, Python.exe, javac.exe, Lcc-win32.exe, or equivalent. Look in all hard drives. \n\nAlso, query the SA and the Web Manager to determine if a compiler is present on the server. \n\nQuery the SA and the Web Manager to determine if a compiler is present on the server.  If a compiler is present, this is a finding.\n\nNOTE:  When Apache is part of a suite install, e.g. application server, and a compiler is needed for installation and patching of the product, document the installation of the compiler with the ISSO/ISSM and verify that the compiler is restricted to administrative users only.  If documented and restricted to administrative users, this is not a finding.'\n  desc 'fix', 'Remove any compiler found on the production web server.  If the compiler is needed to patch the product in a production environment, document the compiler installation with the ISSO/ISSM and ensure that the compiler is restricted to only administrative users.'\n  impact 0.5\n  ref 'DPMS Target Apache Instance 2.x'\n  tag check_id: 'C-33733r3_chk'\n  tag severity: 'medium'\n  tag gid: 'V-2236'\n  tag rid: 'SV-33061r3_rule'\n  tag stig_id: 'WG080 W22'\n  tag gtitle: 'WG080'\n  tag fix_id: 'F-29368r3_fix'\n  tag 'documentable'\n  tag responsibility: 'Web Administrator'\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Apache_2-2_Server_WIN_STIG_V1R13/controls/SV-33061.rb"},"title":"Installation of a compiler on production web server must be prohibited.","desc":"The presence of a compiler on a production server facilitates the malicious user’s task of creating custom versions of programs and installing Trojan Horses or viruses. For example, the attacker’s code can be uploaded and compiled on the server under attack.","descriptions":{"default":"The presence of a compiler on a production server facilitates the malicious user’s task of creating custom versions of programs and installing Trojan Horses or viruses. For example, the attacker’s code can be uploaded and compiled on the server under attack.","check":"Using Windows Explorer, search the system for the existence of known compilers such as msc.exe, msvc.exe, Python.exe, javac.exe, Lcc-win32.exe, or equivalent. Look in all hard drives. \n\nAlso, query the SA and the Web Manager to determine if a compiler is present on the server. \n\nQuery the SA and the Web Manager to determine if a compiler is present on the server.  If a compiler is present, this is a finding.\n\nNOTE:  When Apache is part of a suite install, e.g. application server, and a compiler is needed for installation and patching of the product, document the installation of the compiler with the ISSO/ISSM and verify that the compiler is restricted to administrative users only.  If documented and restricted to administrative users, this is not a finding.","fix":"Remove any compiler found on the production web server.  If the compiler is needed to patch the product in a production environment, document the compiler installation with the ISSO/ISSM and ensure that the compiler is restricted to only administrative users."},"impact":0.5,"refs":[{"ref":"DPMS Target Apache Instance 2.x"}],"tags":{"check_id":"C-33733r3_chk","severity":"medium","gid":"V-2236","rid":"SV-33061r3_rule","stig_id":"WG080 W22","gtitle":"WG080","fix_id":"F-29368r3_fix","documentable":null,"responsibility":"Web Administrator"}},{"id":"SV-33062","code":"control 'SV-33062' do\n  title 'All utility programs, not necessary for operations, must be removed or disabled.'\n  desc 'Just as running unneeded services and protocols is a danger to the web server at the lower levels of the OSI model, running unneeded utilities and programs is also a danger at the application layer of the OSI model. Office suites, development tools, and graphical editors are examples of such programs that are troublesome. Individual productivity tools have no legitimate place or use on an enterprise, production web server and they are also prone to their own security risks.'\n  desc 'check', 'Query the ISSO, the SA, the web administrator, or developers as necessary to determine if the web server is configured with unnecessary software. \n\nQuery the SA to determine if processes other than those that support the web server are loaded and/or run on the web server. \n\nExamples of software that should not be on the web server are all web development tools, office suites (unless the web server is a private web development server), compilers, and other utilities that are not part of the web server suite or the basic operating system. \n\n1) Check the directory structure of the server and ensure that additional, unintended, or unneeded applications are not loaded on the system. \n\n2) Start >> All Programs >> check for programs services such as:\nFront Page\nMS Access\nMS Excel\nMS Money\nMS Word\nThird-party text editors\nGraphics editors\n\nIf, after review of the application on the system, the SA cannot provide justification for the requirement of the identified software, this is a finding.'\n  desc 'fix', 'Install only web support software on the web server. When other processes are supported by the web server, ensure that a risk assessment has been performed and documented. If a database server is installed on the same platform as the web server, it must be on a separate drive or partition. Remove all unnecessary applications and programs.'\n  impact 0.3\n  ref 'DPMS Target Apache Instance 2.x'\n  tag check_id: 'C-33735r2_chk'\n  tag severity: 'low'\n  tag gid: 'V-2251'\n  tag rid: 'SV-33062r2_rule'\n  tag stig_id: 'WG130 W22'\n  tag gtitle: 'WG130'\n  tag fix_id: 'F-29370r1_fix'\n  tag 'documentable'\n  tag responsibility: 'System Administrator'\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Apache_2-2_Server_WIN_STIG_V1R13/controls/SV-33062.rb"},"title":"All utility programs, not necessary for operations, must be removed or disabled.","desc":"Just as running unneeded services and protocols is a danger to the web server at the lower levels of the OSI model, running unneeded utilities and programs is also a danger at the application layer of the OSI model. Office suites, development tools, and graphical editors are examples of such programs that are troublesome. Individual productivity tools have no legitimate place or use on an enterprise, production web server and they are also prone to their own security risks.","descriptions":{"default":"Just as running unneeded services and protocols is a danger to the web server at the lower levels of the OSI model, running unneeded utilities and programs is also a danger at the application layer of the OSI model. Office suites, development tools, and graphical editors are examples of such programs that are troublesome. Individual productivity tools have no legitimate place or use on an enterprise, production web server and they are also prone to their own security risks.","check":"Query the ISSO, the SA, the web administrator, or developers as necessary to determine if the web server is configured with unnecessary software. \n\nQuery the SA to determine if processes other than those that support the web server are loaded and/or run on the web server. \n\nExamples of software that should not be on the web server are all web development tools, office suites (unless the web server is a private web development server), compilers, and other utilities that are not part of the web server suite or the basic operating system. \n\n1) Check the directory structure of the server and ensure that additional, unintended, or unneeded applications are not loaded on the system. \n\n2) Start >> All Programs >> check for programs services such as:\nFront Page\nMS Access\nMS Excel\nMS Money\nMS Word\nThird-party text editors\nGraphics editors\n\nIf, after review of the application on the system, the SA cannot provide justification for the requirement of the identified software, this is a finding.","fix":"Install only web support software on the web server. When other processes are supported by the web server, ensure that a risk assessment has been performed and documented. If a database server is installed on the same platform as the web server, it must be on a separate drive or partition. Remove all unnecessary applications and programs."},"impact":0.3,"refs":[{"ref":"DPMS Target Apache Instance 2.x"}],"tags":{"check_id":"C-33735r2_chk","severity":"low","gid":"V-2251","rid":"SV-33062r2_rule","stig_id":"WG130 W22","gtitle":"WG130","fix_id":"F-29370r1_fix","documentable":null,"responsibility":"System Administrator"}},{"id":"SV-33065","code":"control 'SV-33065' do\n  title 'The private web server must use an approved DoD certificate validation process.'\n  desc 'Without the use of a certificate validation process, the site is vulnerable to accepting certificates that have expired or have been revoked. This would allow unauthorized individuals access to the web server. This also defeats the purpose of the multi-factor authentication provided by the PKI process.'\n  desc 'check', 'The reviewer should query the ISSO, the SA, the web administrator, or developers as necessary to determine if the web server is configured to utilize an approved DoD certificate validation process.\n\nThe web administrator should be questioned to determine if a validation process is being utilized on the web server.\n\nTo validate this, the reviewer can ask the web administrator to describe the validation process being used. They should be able to identify either the use of certificate revocation lists (CRLs) or Online Certificate Status Protocol (OCSP).\n\nIf the production web server is accessible, the SA or the web administrator should be able to demonstrate the validation of good certificates and the rejection of bad certificates.\n\nIf CRLs are being used, the SA should be able to identify how often the CRL is updated and the location from which the CRL is downloaded.\n\nIf the web administrator cannot identify the type of validation process being used, this is a finding.'\n  desc 'fix', 'Configure DoD Private Web Servers to conduct certificate revocation checking utilizing certificate revocation lists (CRLs) or Online Certificate Status Protocol (OCSP).'\n  impact 0.5\n  ref 'DPMS Target Apache Instance 2.x'\n  tag check_id: 'C-33736r2_chk'\n  tag severity: 'medium'\n  tag gid: 'V-13672'\n  tag rid: 'SV-33065r2_rule'\n  tag stig_id: 'WG145 W22'\n  tag gtitle: 'WG145'\n  tag fix_id: 'F-29371r1_fix'\n  tag 'documentable'\n  tag responsibility: 'System Administrator'\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Apache_2-2_Server_WIN_STIG_V1R13/controls/SV-33065.rb"},"title":"The private web server must use an approved DoD certificate validation process.","desc":"Without the use of a certificate validation process, the site is vulnerable to accepting certificates that have expired or have been revoked. This would allow unauthorized individuals access to the web server. This also defeats the purpose of the multi-factor authentication provided by the PKI process.","descriptions":{"default":"Without the use of a certificate validation process, the site is vulnerable to accepting certificates that have expired or have been revoked. This would allow unauthorized individuals access to the web server. This also defeats the purpose of the multi-factor authentication provided by the PKI process.","check":"The reviewer should query the ISSO, the SA, the web administrator, or developers as necessary to determine if the web server is configured to utilize an approved DoD certificate validation process.\n\nThe web administrator should be questioned to determine if a validation process is being utilized on the web server.\n\nTo validate this, the reviewer can ask the web administrator to describe the validation process being used. They should be able to identify either the use of certificate revocation lists (CRLs) or Online Certificate Status Protocol (OCSP).\n\nIf the production web server is accessible, the SA or the web administrator should be able to demonstrate the validation of good certificates and the rejection of bad certificates.\n\nIf CRLs are being used, the SA should be able to identify how often the CRL is updated and the location from which the CRL is downloaded.\n\nIf the web administrator cannot identify the type of validation process being used, this is a finding.","fix":"Configure DoD Private Web Servers to conduct certificate revocation checking utilizing certificate revocation lists (CRLs) or Online Certificate Status Protocol (OCSP)."},"impact":0.5,"refs":[{"ref":"DPMS Target Apache Instance 2.x"}],"tags":{"check_id":"C-33736r2_chk","severity":"medium","gid":"V-13672","rid":"SV-33065r2_rule","stig_id":"WG145 W22","gtitle":"WG145","fix_id":"F-29371r1_fix","documentable":null,"responsibility":"System Administrator"}},{"id":"SV-33068","code":"control 'SV-33068' do\n  title 'The web server must use a vendor-supported version of the web server software.'\n  desc 'Many vulnerabilities are associated with old versions of web server software. As hot fixes and patches are issued, these solutions are included in the next version of the server software.  Maintaining the web server at a current version makes the efforts of a malicious user to exploit the web service more difficult.'\n  desc 'check', 'Determine the version of the Apache software that is running on the system. \n\nUse the command line interface and navigate to the directory where Apache httpd Server is installed. From the command line type the following command: httpd.exe –v. Press Enter. This will display the version of apache installed on the system.\n\nNote: There are other ways, too, of determining the version of Apache (in the service itself and Add/Remove programs).\n\nIf the version of Apache is not at the following version or higher, this is a finding.\n\nApache httpd server version 2.2 - Release 2.2.31 (July 2015)'\n  desc 'fix', 'Upgrade software to a supported version.'\n  impact 0.7\n  ref 'DPMS Target Apache Instance 2.x'\n  tag check_id: 'C-33738r2_chk'\n  tag severity: 'high'\n  tag gid: 'V-2246'\n  tag rid: 'SV-33068r2_rule'\n  tag stig_id: 'WG190 W22'\n  tag gtitle: 'WG190'\n  tag fix_id: 'F-29373r1_fix'\n  tag 'documentable'\n  tag responsibility: 'Web Administrator'\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Apache_2-2_Server_WIN_STIG_V1R13/controls/SV-33068.rb"},"title":"The web server must use a vendor-supported version of the web server software.","desc":"Many vulnerabilities are associated with old versions of web server software. As hot fixes and patches are issued, these solutions are included in the next version of the server software.  Maintaining the web server at a current version makes the efforts of a malicious user to exploit the web service more difficult.","descriptions":{"default":"Many vulnerabilities are associated with old versions of web server software. As hot fixes and patches are issued, these solutions are included in the next version of the server software.  Maintaining the web server at a current version makes the efforts of a malicious user to exploit the web service more difficult.","check":"Determine the version of the Apache software that is running on the system. \n\nUse the command line interface and navigate to the directory where Apache httpd Server is installed. From the command line type the following command: httpd.exe –v. Press Enter. This will display the version of apache installed on the system.\n\nNote: There are other ways, too, of determining the version of Apache (in the service itself and Add/Remove programs).\n\nIf the version of Apache is not at the following version or higher, this is a finding.\n\nApache httpd server version 2.2 - Release 2.2.31 (July 2015)","fix":"Upgrade software to a supported version."},"impact":0.7,"refs":[{"ref":"DPMS Target Apache Instance 2.x"}],"tags":{"check_id":"C-33738r2_chk","severity":"high","gid":"V-2246","rid":"SV-33068r2_rule","stig_id":"WG190 W22","gtitle":"WG190","fix_id":"F-29373r1_fix","documentable":null,"responsibility":"Web Administrator"}},{"id":"SV-33070","code":"control 'SV-33070' do\n  title 'A web server installation must be segregated from other services.'\n  desc 'The web server installation and configuration plan should not support the co-hosting of multiple services such as Domain Name Service (DNS), e-mail, databases, search engines, indexing, or streaming media on the same server that is providing the web publishing service.  By separating these services additional defensive layers are established between the web service and the applicable application should either be compromised.   \n\nDisallowed or restricted services in the context of this vulnerability applies to services that are not directly associated with the delivery of web content. An operating system that supports a web server will not provide other services (e.g., domain controller, e-mail server, database server, etc.). Only those services necessary to support the web server and its hosted sites are specifically allowed and may include, but are not limited to, operating system, logging, anti-virus, host intrusion detection, administrative maintenance, or network requirements.'\n  desc 'check', 'Request a copy of and review the web server’s installation and configuration plan. Ensure that the server is in compliance with this plan. If the server is not in compliance with the plan, this is a finding.\n\nQuery the SA to ascertain if and where the additional services are installed.\n\nConfirm that the additional service or application is not installed on the same partition as the operating systems root, web server root, or web document root. If it is, this is a finding.'\n  desc 'fix', 'Move or install additional services and applications to partitions that are not the operating system root, web server root, or web document root.'\n  impact 0.5\n  ref 'DPMS Target Apache Instance 2.x'\n  tag check_id: 'C-33742r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-6577'\n  tag rid: 'SV-33070r1_rule'\n  tag stig_id: 'WG204 W22'\n  tag gtitle: 'WG204'\n  tag fix_id: 'F-29377r1_fix'\n  tag 'documentable'\n  tag responsibility: 'System Administrator'\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Apache_2-2_Server_WIN_STIG_V1R13/controls/SV-33070.rb"},"title":"A web server installation must be segregated from other services.","desc":"The web server installation and configuration plan should not support the co-hosting of multiple services such as Domain Name Service (DNS), e-mail, databases, search engines, indexing, or streaming media on the same server that is providing the web publishing service.  By separating these services additional defensive layers are established between the web service and the applicable application should either be compromised.   \n\nDisallowed or restricted services in the context of this vulnerability applies to services that are not directly associated with the delivery of web content. An operating system that supports a web server will not provide other services (e.g., domain controller, e-mail server, database server, etc.). Only those services necessary to support the web server and its hosted sites are specifically allowed and may include, but are not limited to, operating system, logging, anti-virus, host intrusion detection, administrative maintenance, or network requirements.","descriptions":{"default":"The web server installation and configuration plan should not support the co-hosting of multiple services such as Domain Name Service (DNS), e-mail, databases, search engines, indexing, or streaming media on the same server that is providing the web publishing service.  By separating these services additional defensive layers are established between the web service and the applicable application should either be compromised.   \n\nDisallowed or restricted services in the context of this vulnerability applies to services that are not directly associated with the delivery of web content. An operating system that supports a web server will not provide other services (e.g., domain controller, e-mail server, database server, etc.). Only those services necessary to support the web server and its hosted sites are specifically allowed and may include, but are not limited to, operating system, logging, anti-virus, host intrusion detection, administrative maintenance, or network requirements.","check":"Request a copy of and review the web server’s installation and configuration plan. Ensure that the server is in compliance with this plan. If the server is not in compliance with the plan, this is a finding.\n\nQuery the SA to ascertain if and where the additional services are installed.\n\nConfirm that the additional service or application is not installed on the same partition as the operating systems root, web server root, or web document root. If it is, this is a finding.","fix":"Move or install additional services and applications to partitions that are not the operating system root, web server root, or web document root."},"impact":0.5,"refs":[{"ref":"DPMS Target Apache Instance 2.x"}],"tags":{"check_id":"C-33742r1_chk","severity":"medium","gid":"V-6577","rid":"SV-33070r1_rule","stig_id":"WG204 W22","gtitle":"WG204","fix_id":"F-29377r1_fix","documentable":null,"responsibility":"System Administrator"}},{"id":"SV-33072","code":"control 'SV-33072' do\n  title 'Web administration tools must be restricted to the web manager and the web manager’s designees.'\n  desc 'All automated information systems are at risk of data loss due to disaster or compromise. Failure to provide adequate protection to the administration tools creates risk of potential theft or damage that may ultimately compromise the mission.  Adequate protection ensures that server administration operates with less risk of losses or operations outages.  The key web service administrative and configuration tools must be accessible only by the authorized web server administrators. All users granted this authority must be documented and approved by the ISSO. Access to the IIS Manager will be limited to authorized users and administrators.'\n  desc 'check', 'Configuration of the Apache web server is accomplished by editing flat .conf files. \nInterview the ISSO and ask for the web server’s documented procedures and processes.\n\nVerify the documented procedures and processes explicitly document the roles and responsibilities for the web server and web site(s) management. These documented roles will be used to validate access controls for this check.\nFor the purpose of this check, the SA is responsible for the OS platform of the webserver. The web server manager manages the Apache installation and configuration and the web master manages the web site or sites. \nIn some environments, the SA is also the web manager/web master. In such case, the roles should still be documented.\nLocate the folder in which the Apache installation’s httpd.conf and supporting .conf files are located. Right-click on the folder name and select “Properties”. Select the “Security” tab and review the accounts and assigned permissions. \nThe System Administrator(s), web manager(s) and web master(s), as identified in the organization’s documentation, may have Full Control to the installation folder and sub-folders.\nNon-documented administrators, non-elevated administrators and users may have Read only permissions to the installation folder and sub-folders.\n\nIf any accounts other than the documented SA, web manager, or web manager designees have greater than Read permissions to the web administration tool or control files, this is a finding.'\n  desc 'fix', 'Restrict access to the httpd.conf and supporting .conf files to only the documented SA, web manager, or web manager designees.'\n  impact 0.5\n  ref 'DPMS Target Apache Instance 2.x'\n  tag check_id: 'C-33743r3_chk'\n  tag severity: 'medium'\n  tag gid: 'V-2248'\n  tag rid: 'SV-33072r4_rule'\n  tag stig_id: 'WG220 W22'\n  tag gtitle: 'WG220'\n  tag fix_id: 'F-29378r2_fix'\n  tag 'documentable'\n  tag responsibility: 'Web Administrator'\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Apache_2-2_Server_WIN_STIG_V1R13/controls/SV-33072.rb"},"title":"Web administration tools must be restricted to the web manager and the web manager’s designees.","desc":"All automated information systems are at risk of data loss due to disaster or compromise. Failure to provide adequate protection to the administration tools creates risk of potential theft or damage that may ultimately compromise the mission.  Adequate protection ensures that server administration operates with less risk of losses or operations outages.  The key web service administrative and configuration tools must be accessible only by the authorized web server administrators. All users granted this authority must be documented and approved by the ISSO. Access to the IIS Manager will be limited to authorized users and administrators.","descriptions":{"default":"All automated information systems are at risk of data loss due to disaster or compromise. Failure to provide adequate protection to the administration tools creates risk of potential theft or damage that may ultimately compromise the mission.  Adequate protection ensures that server administration operates with less risk of losses or operations outages.  The key web service administrative and configuration tools must be accessible only by the authorized web server administrators. All users granted this authority must be documented and approved by the ISSO. Access to the IIS Manager will be limited to authorized users and administrators.","check":"Configuration of the Apache web server is accomplished by editing flat .conf files. \nInterview the ISSO and ask for the web server’s documented procedures and processes.\n\nVerify the documented procedures and processes explicitly document the roles and responsibilities for the web server and web site(s) management. These documented roles will be used to validate access controls for this check.\nFor the purpose of this check, the SA is responsible for the OS platform of the webserver. The web server manager manages the Apache installation and configuration and the web master manages the web site or sites. \nIn some environments, the SA is also the web manager/web master. In such case, the roles should still be documented.\nLocate the folder in which the Apache installation’s httpd.conf and supporting .conf files are located. Right-click on the folder name and select “Properties”. Select the “Security” tab and review the accounts and assigned permissions. \nThe System Administrator(s), web manager(s) and web master(s), as identified in the organization’s documentation, may have Full Control to the installation folder and sub-folders.\nNon-documented administrators, non-elevated administrators and users may have Read only permissions to the installation folder and sub-folders.\n\nIf any accounts other than the documented SA, web manager, or web manager designees have greater than Read permissions to the web administration tool or control files, this is a finding.","fix":"Restrict access to the httpd.conf and supporting .conf files to only the documented SA, web manager, or web manager designees."},"impact":0.5,"refs":[{"ref":"DPMS Target Apache Instance 2.x"}],"tags":{"check_id":"C-33743r3_chk","severity":"medium","gid":"V-2248","rid":"SV-33072r4_rule","stig_id":"WG220 W22","gtitle":"WG220","fix_id":"F-29378r2_fix","documentable":null,"responsibility":"Web Administrator"}},{"id":"SV-33078","code":"control 'SV-33078' do\n  title 'Web server system files must conform to minimum file permission requirements.'\n  desc 'This check verifies that the key web server system configuration files are owned by the SA or Web Manager controlled account. These same files which control the configuration of the web server, and thus its behavior, must also be accessible by the account which runs the web service. If these files are altered by a malicious user, the web server would no longer be under the control of its managers and owners; properties in the web server configuration could be altered to compromise the entire server platform.'\n  desc 'check', 'Locate and examine the httpd.conf file. Look for the section: <ServerRoot>. This section will contain the path to the configuration and binary files.\nNote: This check also applies to any other directory where CGI scripts are located.\n\nPermissions on this directory files should be:\n\nAdministrators: Full control\nSystem: Full Control\nWebAdmin: Full Control\nWebUser: Read, Execute\nApache Service Account: Read, Execute\n\nPermissions for the /config directory should be as follows:\n(This is a sub directory to the main apache directory identified above)\nAdministrators: Full control\nSystem: Read\nWebAdmin: Modify\nApache Service Account: Read\n\nPermissions for the /bin directory should be as follows:\n(This is a sub directory to the main apache directory identified above)\nAdministrators: Full control\nSystem: Read, Execute\nWebAdmin: Modify\nApache Service Account: Read, Execute\n\nPermissions for the /logs directory should be as follows:\n(This is a sub directory to the main apache directory identified above)\nAdministrators: Read\nSystem: Full Control\nWebAdmin: Read\nApache Service Account: Modify\nAuditors: Full Control\n\nPermissions for the /htdocs directory (DocumentRoot) should be as follows:\n(This is a sub directory to the main apache directory identified above)\nAdministrators: Full control\nSystem: Read\nWebAdmin: Modify\nApache Service Account: Read\n\nIf any of the above permissions are less restrictive, this is a finding.\n\nNote: There may be additional directories based the local implementation, and permissions should apply to directories of similar content. Ex. all web content directories should follow the permissions for /htdocs.'\n  desc 'fix', 'Set file permissions on the web server systems files to meet minimum file permissions requirements.'\n  impact 0.5\n  ref 'DPMS Target Apache Instance 2.x'\n  tag check_id: 'C-33750r2_chk'\n  tag severity: 'medium'\n  tag gid: 'V-2259'\n  tag rid: 'SV-33078r2_rule'\n  tag stig_id: 'WG300 W22'\n  tag gtitle: 'WG300'\n  tag fix_id: 'F-29386r1_fix'\n  tag 'documentable'\n  tag responsibility: 'Web Administrator'\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Apache_2-2_Server_WIN_STIG_V1R13/controls/SV-33078.rb"},"title":"Web server system files must conform to minimum file permission requirements.","desc":"This check verifies that the key web server system configuration files are owned by the SA or Web Manager controlled account. These same files which control the configuration of the web server, and thus its behavior, must also be accessible by the account which runs the web service. If these files are altered by a malicious user, the web server would no longer be under the control of its managers and owners; properties in the web server configuration could be altered to compromise the entire server platform.","descriptions":{"default":"This check verifies that the key web server system configuration files are owned by the SA or Web Manager controlled account. These same files which control the configuration of the web server, and thus its behavior, must also be accessible by the account which runs the web service. If these files are altered by a malicious user, the web server would no longer be under the control of its managers and owners; properties in the web server configuration could be altered to compromise the entire server platform.","check":"Locate and examine the httpd.conf file. Look for the section: <ServerRoot>. This section will contain the path to the configuration and binary files.\nNote: This check also applies to any other directory where CGI scripts are located.\n\nPermissions on this directory files should be:\n\nAdministrators: Full control\nSystem: Full Control\nWebAdmin: Full Control\nWebUser: Read, Execute\nApache Service Account: Read, Execute\n\nPermissions for the /config directory should be as follows:\n(This is a sub directory to the main apache directory identified above)\nAdministrators: Full control\nSystem: Read\nWebAdmin: Modify\nApache Service Account: Read\n\nPermissions for the /bin directory should be as follows:\n(This is a sub directory to the main apache directory identified above)\nAdministrators: Full control\nSystem: Read, Execute\nWebAdmin: Modify\nApache Service Account: Read, Execute\n\nPermissions for the /logs directory should be as follows:\n(This is a sub directory to the main apache directory identified above)\nAdministrators: Read\nSystem: Full Control\nWebAdmin: Read\nApache Service Account: Modify\nAuditors: Full Control\n\nPermissions for the /htdocs directory (DocumentRoot) should be as follows:\n(This is a sub directory to the main apache directory identified above)\nAdministrators: Full control\nSystem: Read\nWebAdmin: Modify\nApache Service Account: Read\n\nIf any of the above permissions are less restrictive, this is a finding.\n\nNote: There may be additional directories based the local implementation, and permissions should apply to directories of similar content. Ex. all web content directories should follow the permissions for /htdocs.","fix":"Set file permissions on the web server systems files to meet minimum file permissions requirements."},"impact":0.5,"refs":[{"ref":"DPMS Target Apache Instance 2.x"}],"tags":{"check_id":"C-33750r2_chk","severity":"medium","gid":"V-2259","rid":"SV-33078r2_rule","stig_id":"WG300 W22","gtitle":"WG300","fix_id":"F-29386r1_fix","documentable":null,"responsibility":"Web Administrator"}},{"id":"SV-33082","code":"control 'SV-33082' do\n  title 'A public web server must limit e-mail to outbound only.'\n  desc 'Incoming E-mail has been known to provide hackers with access to servers. Disabling the incoming mail service prevents this type of attacks. Additionally, Email represents the main use of the Internet. It is specialized application that requires the dedication of server resources. To combine this type of transaction processing function with the file serving role of the web server creates an inherent conflict. Supporting mail services on a web server opens the server to the risk of abuse as an email relay. This check verifies, by checking the OS, that incoming e-mail is not supported.'\n  desc 'check', 'This check verifies, by checking the OS, that incoming e-mail is not supported.\n\nSelect START >> Programs >> Administrative Tools >> Services\n\nScroll down and review all the entries. If there is a mail program (SMTP service), then the reviewer must run that program to see if it will accept incoming e-mail (There are too many different programs for detailed instructions).\n\nThe reviewer should also check the Programs menu and sub-menus under start to see if there are any installed mail programs. The reviewer can also check the Add/Delete programs icon in the Control Panel to see if there are any e-mail programs installed. \n\nIf there is an e-mail program installed and that program has been configured to accept inbound email, this is a finding.'\n  desc 'fix', 'Isolate e-mail, if running on a public web server, to outbound e-mail only. This would allow the web-based application to send timely notices to users and administrators. On the SMTP or other e-mail server, the mail relay option must be disabled.'\n  impact 0.5\n  ref 'DPMS Target Apache Instance 2.x'\n  tag check_id: 'C-33752r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-2261'\n  tag rid: 'SV-33082r1_rule'\n  tag stig_id: 'WG330 W22'\n  tag gtitle: 'WG330'\n  tag fix_id: 'F-29388r1_fix'\n  tag 'documentable'\n  tag responsibility: 'Web Administrator'\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Apache_2-2_Server_WIN_STIG_V1R13/controls/SV-33082.rb"},"title":"A public web server must limit e-mail to outbound only.","desc":"Incoming E-mail has been known to provide hackers with access to servers. Disabling the incoming mail service prevents this type of attacks. Additionally, Email represents the main use of the Internet. It is specialized application that requires the dedication of server resources. To combine this type of transaction processing function with the file serving role of the web server creates an inherent conflict. Supporting mail services on a web server opens the server to the risk of abuse as an email relay. This check verifies, by checking the OS, that incoming e-mail is not supported.","descriptions":{"default":"Incoming E-mail has been known to provide hackers with access to servers. Disabling the incoming mail service prevents this type of attacks. Additionally, Email represents the main use of the Internet. It is specialized application that requires the dedication of server resources. To combine this type of transaction processing function with the file serving role of the web server creates an inherent conflict. Supporting mail services on a web server opens the server to the risk of abuse as an email relay. This check verifies, by checking the OS, that incoming e-mail is not supported.","check":"This check verifies, by checking the OS, that incoming e-mail is not supported.\n\nSelect START >> Programs >> Administrative Tools >> Services\n\nScroll down and review all the entries. If there is a mail program (SMTP service), then the reviewer must run that program to see if it will accept incoming e-mail (There are too many different programs for detailed instructions).\n\nThe reviewer should also check the Programs menu and sub-menus under start to see if there are any installed mail programs. The reviewer can also check the Add/Delete programs icon in the Control Panel to see if there are any e-mail programs installed. \n\nIf there is an e-mail program installed and that program has been configured to accept inbound email, this is a finding.","fix":"Isolate e-mail, if running on a public web server, to outbound e-mail only. This would allow the web-based application to send timely notices to users and administrators. On the SMTP or other e-mail server, the mail relay option must be disabled."},"impact":0.5,"refs":[{"ref":"DPMS Target Apache Instance 2.x"}],"tags":{"check_id":"C-33752r1_chk","severity":"medium","gid":"V-2261","rid":"SV-33082r1_rule","stig_id":"WG330 W22","gtitle":"WG330","fix_id":"F-29388r1_fix","documentable":null,"responsibility":"Web Administrator"}},{"id":"SV-33084","code":"control 'SV-33084' do\n  title 'A private web server’s list of CAs in a trust hierarchy must lead to an authorized DoD PKI Root CA.'\n  desc 'A PKI certificate is a digital identifier that establishes the identity of an individual or a platform. A server that has a certificate provides users with third-party confirmation of authenticity. Most web browsers perform server authentication automatically; the user is notified only if the authentication fails. The authentication process between the server and the client is performed using the SSL/TLS protocol. Digital certificates are authenticated, issued, and managed by a trusted Certification Authority (CA). \n\nThe use of a trusted certificate validation hierarchy is crucial to the ability to control access to your server and prevent unauthorized access. This hierarchy needs to lead to the DoD PKI Root CA or to an approved External Certificate Authority (ECA) or are required for the server to function.'\n  desc 'check', 'The reviewer will need to have the SA or Web Manager show the list of CA’s the server is trusting to authenticate users.\n\nNOTE: There are non DoD roots that must be on the server in order for it to function. Some applications, such as anti-virus programs, require root CAs to function.\n\nThe location for the conf file that controls the SSL parameters may vary from installation, so the following is just an example of a default httpd-ssl.conf file.\n\nOpen httpd-ssl.conf and search for the following directive:\n\nSSLCACertificateFile\n\nThis directive will point to the file that contains the certificates that are used to identify the CAs that are used for client authentication. Such a file is simply the concatenation of the various PEM-encoded Certificate files, in order of preference. Examine the contents of this file to determine if the trusted CAs are DoD approved. \n\nDoD approved can include the External Certificate Authorities (ECA), if approved by the DAA. The PKE InstallRoot 3.06 System Administrator Guide (SAG), dated 8 Jul 2008, contains a complete list of DoD, ECA, and IECA CAs. If the trusted CAs that are used to authenticate users to the web site does not lead to an approved DoD CA, this is a finding.'\n  desc 'fix', 'Configure the web server’s trust store to trust only DoD-approved PKIs (e.g., DoD PKI, DoD ECA, and DoD-approved external partners).'\n  impact 0.5\n  ref 'DPMS Target Apache Instance 2.x'\n  tag check_id: 'C-33755r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-13620'\n  tag rid: 'SV-33084r1_rule'\n  tag stig_id: 'WG355 W22'\n  tag gtitle: 'WG355'\n  tag fix_id: 'F-29391r1_fix'\n  tag 'documentable'\n  tag responsibility: 'Information Assurance Officer'\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Apache_2-2_Server_WIN_STIG_V1R13/controls/SV-33084.rb"},"title":"A private web server’s list of CAs in a trust hierarchy must lead to an authorized DoD PKI Root CA.","desc":"A PKI certificate is a digital identifier that establishes the identity of an individual or a platform. A server that has a certificate provides users with third-party confirmation of authenticity. Most web browsers perform server authentication automatically; the user is notified only if the authentication fails. The authentication process between the server and the client is performed using the SSL/TLS protocol. Digital certificates are authenticated, issued, and managed by a trusted Certification Authority (CA). \n\nThe use of a trusted certificate validation hierarchy is crucial to the ability to control access to your server and prevent unauthorized access. This hierarchy needs to lead to the DoD PKI Root CA or to an approved External Certificate Authority (ECA) or are required for the server to function.","descriptions":{"default":"A PKI certificate is a digital identifier that establishes the identity of an individual or a platform. A server that has a certificate provides users with third-party confirmation of authenticity. Most web browsers perform server authentication automatically; the user is notified only if the authentication fails. The authentication process between the server and the client is performed using the SSL/TLS protocol. Digital certificates are authenticated, issued, and managed by a trusted Certification Authority (CA). \n\nThe use of a trusted certificate validation hierarchy is crucial to the ability to control access to your server and prevent unauthorized access. This hierarchy needs to lead to the DoD PKI Root CA or to an approved External Certificate Authority (ECA) or are required for the server to function.","check":"The reviewer will need to have the SA or Web Manager show the list of CA’s the server is trusting to authenticate users.\n\nNOTE: There are non DoD roots that must be on the server in order for it to function. Some applications, such as anti-virus programs, require root CAs to function.\n\nThe location for the conf file that controls the SSL parameters may vary from installation, so the following is just an example of a default httpd-ssl.conf file.\n\nOpen httpd-ssl.conf and search for the following directive:\n\nSSLCACertificateFile\n\nThis directive will point to the file that contains the certificates that are used to identify the CAs that are used for client authentication. Such a file is simply the concatenation of the various PEM-encoded Certificate files, in order of preference. Examine the contents of this file to determine if the trusted CAs are DoD approved. \n\nDoD approved can include the External Certificate Authorities (ECA), if approved by the DAA. The PKE InstallRoot 3.06 System Administrator Guide (SAG), dated 8 Jul 2008, contains a complete list of DoD, ECA, and IECA CAs. If the trusted CAs that are used to authenticate users to the web site does not lead to an approved DoD CA, this is a finding.","fix":"Configure the web server’s trust store to trust only DoD-approved PKIs (e.g., DoD PKI, DoD ECA, and DoD-approved external partners)."},"impact":0.5,"refs":[{"ref":"DPMS Target Apache Instance 2.x"}],"tags":{"check_id":"C-33755r1_chk","severity":"medium","gid":"V-13620","rid":"SV-33084r1_rule","stig_id":"WG355 W22","gtitle":"WG355","fix_id":"F-29391r1_fix","documentable":null,"responsibility":"Information Assurance Officer"}},{"id":"SV-33087","code":"control 'SV-33087' do\n  title 'All web server documentation, sample code, example applications, and tutorials must be removed from a production web server.'\n  desc 'Web server documentation, sample code, example applications, and tutorials may be an exploitable threat to a web server. A production web server may only contain components that are operationally necessary (e.g., compiled code, scripts, web-content, etc.). Delete all directories that contain samples and any scripts used to execute the samples. If there is a requirement to maintain these directories at the site on non-production servers for training purposes, have NTFS permissions set to only allow access to authorized users (i.e., web administrators and systems administrators). Sample applications or scripts have not been evaluated and approved for use and may introduce vulnerabilities to the system.'\n  desc 'check', 'Query the SA to determine if all directories that contain samples and any scripts used to execute the samples have been removed from the server.\n\nEach web server has its own list of sample files. This may change with the software versions, but the following are some examples of what to look for (This is not a definitive list of sample files, but only an example of the common samples that are provided with the associated web server. This list will be updated as additional information is discovered.):\n\n[Drive Letter]:/[directory path]/apache2/manual/*.*\n[Drive Letter]:/[directory path]/apache2/conf/extra/*.*\n[Drive Letter]:/[directory path]/apache2/cgi-bin/printenv\n[Drive Letter]:/[directory path]/apache2/cgi-bin/test-cgi\n\nIf there is a requirement to maintain these directories at the site for training or other such purposes, have permissions or set the permissions to only allow access to authorized users.\n\nIf any sample files are found on the web server, this is a finding.'\n  desc 'fix', 'Ensure sample code and documentation have been removed from the web server.'\n  impact 0.7\n  ref 'DPMS Target Apache Instance 2.x'\n  tag check_id: 'C-33756r1_chk'\n  tag severity: 'high'\n  tag gid: 'V-13621'\n  tag rid: 'SV-33087r1_rule'\n  tag stig_id: 'WG385 W22'\n  tag gtitle: 'WG385'\n  tag fix_id: 'F-29392r1_fix'\n  tag 'documentable'\n  tag severity_override_guidance: 'Any sample application or sample executable script found on the production web server will be a CAT I finding. \n\nAny web server documentation or sample file found on the production web server and accessible to web users or non-administrators will be a CAT III finding.\n\nAny web server documentation or sample file found on the production web server and accessible only to SAs or to web administrators is permissible and not a finding.'\n  tag responsibility: 'System Administrator'\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Apache_2-2_Server_WIN_STIG_V1R13/controls/SV-33087.rb"},"title":"All web server documentation, sample code, example applications, and tutorials must be removed from a production web server.","desc":"Web server documentation, sample code, example applications, and tutorials may be an exploitable threat to a web server. A production web server may only contain components that are operationally necessary (e.g., compiled code, scripts, web-content, etc.). Delete all directories that contain samples and any scripts used to execute the samples. If there is a requirement to maintain these directories at the site on non-production servers for training purposes, have NTFS permissions set to only allow access to authorized users (i.e., web administrators and systems administrators). Sample applications or scripts have not been evaluated and approved for use and may introduce vulnerabilities to the system.","descriptions":{"default":"Web server documentation, sample code, example applications, and tutorials may be an exploitable threat to a web server. A production web server may only contain components that are operationally necessary (e.g., compiled code, scripts, web-content, etc.). Delete all directories that contain samples and any scripts used to execute the samples. If there is a requirement to maintain these directories at the site on non-production servers for training purposes, have NTFS permissions set to only allow access to authorized users (i.e., web administrators and systems administrators). Sample applications or scripts have not been evaluated and approved for use and may introduce vulnerabilities to the system.","check":"Query the SA to determine if all directories that contain samples and any scripts used to execute the samples have been removed from the server.\n\nEach web server has its own list of sample files. This may change with the software versions, but the following are some examples of what to look for (This is not a definitive list of sample files, but only an example of the common samples that are provided with the associated web server. This list will be updated as additional information is discovered.):\n\n[Drive Letter]:/[directory path]/apache2/manual/*.*\n[Drive Letter]:/[directory path]/apache2/conf/extra/*.*\n[Drive Letter]:/[directory path]/apache2/cgi-bin/printenv\n[Drive Letter]:/[directory path]/apache2/cgi-bin/test-cgi\n\nIf there is a requirement to maintain these directories at the site for training or other such purposes, have permissions or set the permissions to only allow access to authorized users.\n\nIf any sample files are found on the web server, this is a finding.","fix":"Ensure sample code and documentation have been removed from the web server."},"impact":0.7,"refs":[{"ref":"DPMS Target Apache Instance 2.x"}],"tags":{"check_id":"C-33756r1_chk","severity":"high","gid":"V-13621","rid":"SV-33087r1_rule","stig_id":"WG385 W22","gtitle":"WG385","fix_id":"F-29392r1_fix","documentable":null,"severity_override_guidance":"Any sample application or sample executable script found on the production web server will be a CAT I finding. \n\nAny web server documentation or sample file found on the production web server and accessible to web users or non-administrators will be a CAT III finding.\n\nAny web server documentation or sample file found on the production web server and accessible only to SAs or to web administrators is permissible and not a finding.","responsibility":"System Administrator"}},{"id":"SV-33089","code":"control 'SV-33089' do\n  title 'Monitoring software must include CGI or equivalent programs in its scope.'\n  desc 'By their very nature, CGI type files permit the anonymous web user to interact with data and perhaps store data on the web server. In many cases, CGI scripts exercise system-level control over the server’s resources. These files make appealing targets for the malicious user. If these files can be modified or exploited, the web server can be compromised. These files must be monitored by a security tool that reports unauthorized changes to these files.'\n  desc 'check', 'CGI or equivalent files must be monitored by a security tool that reports unauthorized changes. It is the purpose of such software to monitor key files for unauthorized changes to them. \n\nThe reviewer should query the ISSO, the SA, and the web administrator and verify the information provided by asking to see the template file or configuration file of the software being used to accomplish this security task.\n\nExample file extensions for files considered to provide active content are, but not limited to: .cgi, .asp, .aspx, .class, .vb, .php, .pl, and .c.\n\nIf the site does not have a process in place to monitor changes to CGI program files, this is a finding.'\n  desc 'fix', 'Use a monitoring tool to monitor changes to the CGI or equivalent directory. This can be done with something as simple as a script or batch file that would identify a change in the file.'\n  impact 0.5\n  ref 'DPMS Target Apache Instance 2.x'\n  tag check_id: 'C-33757r2_chk'\n  tag severity: 'medium'\n  tag gid: 'V-2271'\n  tag rid: 'SV-33089r2_rule'\n  tag stig_id: 'WG440 W22'\n  tag gtitle: 'WG440'\n  tag fix_id: 'F-29393r1_fix'\n  tag 'documentable'\n  tag responsibility: 'System Administrator'\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Apache_2-2_Server_WIN_STIG_V1R13/controls/SV-33089.rb"},"title":"Monitoring software must include CGI or equivalent programs in its scope.","desc":"By their very nature, CGI type files permit the anonymous web user to interact with data and perhaps store data on the web server. In many cases, CGI scripts exercise system-level control over the server’s resources. These files make appealing targets for the malicious user. If these files can be modified or exploited, the web server can be compromised. These files must be monitored by a security tool that reports unauthorized changes to these files.","descriptions":{"default":"By their very nature, CGI type files permit the anonymous web user to interact with data and perhaps store data on the web server. In many cases, CGI scripts exercise system-level control over the server’s resources. These files make appealing targets for the malicious user. If these files can be modified or exploited, the web server can be compromised. These files must be monitored by a security tool that reports unauthorized changes to these files.","check":"CGI or equivalent files must be monitored by a security tool that reports unauthorized changes. It is the purpose of such software to monitor key files for unauthorized changes to them. \n\nThe reviewer should query the ISSO, the SA, and the web administrator and verify the information provided by asking to see the template file or configuration file of the software being used to accomplish this security task.\n\nExample file extensions for files considered to provide active content are, but not limited to: .cgi, .asp, .aspx, .class, .vb, .php, .pl, and .c.\n\nIf the site does not have a process in place to monitor changes to CGI program files, this is a finding.","fix":"Use a monitoring tool to monitor changes to the CGI or equivalent directory. This can be done with something as simple as a script or batch file that would identify a change in the file."},"impact":0.5,"refs":[{"ref":"DPMS Target Apache Instance 2.x"}],"tags":{"check_id":"C-33757r2_chk","severity":"medium","gid":"V-2271","rid":"SV-33089r2_rule","stig_id":"WG440 W22","gtitle":"WG440","fix_id":"F-29393r1_fix","documentable":null,"responsibility":"System Administrator"}},{"id":"SV-33092","code":"control 'SV-33092' do\n  title 'Backup interactive scripts on the production web server must be prohibited.'\n  desc 'Copies of backup files will not execute on the server, but can be read by the anonymous user if special precautions are not taken. Such backup copies contain the same sensitive information as the actual script being executed and as such are useful to malicious users. Techniques and systems exist today which search web servers for such files and are able to exploit the information contained in them. Backup copies of files are automatically created by some text editors such as emacs and edit plus. Having backup scripts on the web server provides one more opportunities for malicious persons to view these scripts and use information found in them.'\n  desc 'check', 'This check is limited to CGI/interactive content and not static HTML.\n\nFind on all hard drives files containing the following extensions: *.bak, *.old, *.temp, *.tmp, or *.backup.\n\nIf files with these extensions are found in either the document directory or the home directory of the web server, this is a finding.\n\nIf files with these extensions are stored in a repository (not in the document root) as backups for the web server, this is a finding. \n\nIf files with these extensions have no relationship with web activity, such as a backup batch file for operating system utility, and they are not accessible by the web application, this is not a finding.'\n  desc 'fix', 'Ensure that CGI backup scripts are not left on the production web server.'\n  impact 0.3\n  ref 'DPMS Target Apache Instance 2.x'\n  tag check_id: 'C-33758r1_chk'\n  tag severity: 'low'\n  tag gid: 'V-2230'\n  tag rid: 'SV-33092r1_rule'\n  tag stig_id: 'WG420 W22'\n  tag gtitle: 'WG420'\n  tag fix_id: 'F-29394r1_fix'\n  tag 'documentable'\n  tag responsibility: 'Web Administrator'\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Apache_2-2_Server_WIN_STIG_V1R13/controls/SV-33092.rb"},"title":"Backup interactive scripts on the production web server must be prohibited.","desc":"Copies of backup files will not execute on the server, but can be read by the anonymous user if special precautions are not taken. Such backup copies contain the same sensitive information as the actual script being executed and as such are useful to malicious users. Techniques and systems exist today which search web servers for such files and are able to exploit the information contained in them. Backup copies of files are automatically created by some text editors such as emacs and edit plus. Having backup scripts on the web server provides one more opportunities for malicious persons to view these scripts and use information found in them.","descriptions":{"default":"Copies of backup files will not execute on the server, but can be read by the anonymous user if special precautions are not taken. Such backup copies contain the same sensitive information as the actual script being executed and as such are useful to malicious users. Techniques and systems exist today which search web servers for such files and are able to exploit the information contained in them. Backup copies of files are automatically created by some text editors such as emacs and edit plus. Having backup scripts on the web server provides one more opportunities for malicious persons to view these scripts and use information found in them.","check":"This check is limited to CGI/interactive content and not static HTML.\n\nFind on all hard drives files containing the following extensions: *.bak, *.old, *.temp, *.tmp, or *.backup.\n\nIf files with these extensions are found in either the document directory or the home directory of the web server, this is a finding.\n\nIf files with these extensions are stored in a repository (not in the document root) as backups for the web server, this is a finding. \n\nIf files with these extensions have no relationship with web activity, such as a backup batch file for operating system utility, and they are not accessible by the web application, this is not a finding.","fix":"Ensure that CGI backup scripts are not left on the production web server."},"impact":0.3,"refs":[{"ref":"DPMS Target Apache Instance 2.x"}],"tags":{"check_id":"C-33758r1_chk","severity":"low","gid":"V-2230","rid":"SV-33092r1_rule","stig_id":"WG420 W22","gtitle":"WG420","fix_id":"F-29394r1_fix","documentable":null,"responsibility":"Web Administrator"}},{"id":"SV-33095","code":"control 'SV-33095' do\n  title 'Wscript.exe and Cscript.exe must only be accessible by the SA and/or the web administrator.'\n  desc 'Windows Scripting Host (WSH) is installed under either a Typical or Custom installation option of a Microsoft Network Server. This technology permits the execution of powerful script files from the Windows NT command line. This technology is also classified as a Category I Mobile Code. If the access to these files is not tightly controlled, a malicious user could readily compromise the server by using a form to send input to these scripting engines.'\n  desc 'check', 'Search for instances of Wscript.exe and Cscript.exe.\n\nMove to these files, if found, and right-click on them to view their Properties.\n\nPermissions should only exist for System, the SA, and the web administrator, who may have Full Control. User accounts with access to these files that are unknown, or unintended, should be removed.\n\nIf these files have permission for other than the SA, the web administrator, or the system, this is a finding.'\n  desc 'fix', 'Remove Wscript.exe and Cscript.exe files from the server, or restrict access to these files to the SA, the web administrator, and the system account.'\n  impact 0.5\n  ref 'DPMS Target Apache Instance 2.x'\n  tag check_id: 'C-33761r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-2264'\n  tag rid: 'SV-33095r1_rule'\n  tag stig_id: 'WG470 W22'\n  tag gtitle: 'WG470'\n  tag fix_id: 'F-29397r1_fix'\n  tag 'documentable'\n  tag responsibility: 'System Administrator'\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Apache_2-2_Server_WIN_STIG_V1R13/controls/SV-33095.rb"},"title":"Wscript.exe and Cscript.exe must only be accessible by the SA and/or the web administrator.","desc":"Windows Scripting Host (WSH) is installed under either a Typical or Custom installation option of a Microsoft Network Server. This technology permits the execution of powerful script files from the Windows NT command line. This technology is also classified as a Category I Mobile Code. If the access to these files is not tightly controlled, a malicious user could readily compromise the server by using a form to send input to these scripting engines.","descriptions":{"default":"Windows Scripting Host (WSH) is installed under either a Typical or Custom installation option of a Microsoft Network Server. This technology permits the execution of powerful script files from the Windows NT command line. This technology is also classified as a Category I Mobile Code. If the access to these files is not tightly controlled, a malicious user could readily compromise the server by using a form to send input to these scripting engines.","check":"Search for instances of Wscript.exe and Cscript.exe.\n\nMove to these files, if found, and right-click on them to view their Properties.\n\nPermissions should only exist for System, the SA, and the web administrator, who may have Full Control. User accounts with access to these files that are unknown, or unintended, should be removed.\n\nIf these files have permission for other than the SA, the web administrator, or the system, this is a finding.","fix":"Remove Wscript.exe and Cscript.exe files from the server, or restrict access to these files to the SA, the web administrator, and the system account."},"impact":0.5,"refs":[{"ref":"DPMS Target Apache Instance 2.x"}],"tags":{"check_id":"C-33761r1_chk","severity":"medium","gid":"V-2264","rid":"SV-33095r1_rule","stig_id":"WG470 W22","gtitle":"WG470","fix_id":"F-29397r1_fix","documentable":null,"responsibility":"System Administrator"}},{"id":"SV-33098","code":"control 'SV-33098' do\n  title 'Web server and/or operating system information must be protected.'\n  desc 'The web server response header of an HTTP response can contain several fields of information including the requested HTML page. The information included in this response can be web server type and version, operating system and version, and ports associated with the web server. This provides the malicious user valuable information without the use of extensive tools.'\n  desc 'check', 'Locate the httpd.conf file.\n\nOpen the httpd.conf file with an editor such as Notepad, and search for the following uncommented directive: ServerTokens\n\nThe directive ServerTokens must be set to “Prod” (ex. ServerTokens Prod). This directive controls whether Server response header field that is sent back to clients that includes a description of the OS-type of the server as well as information about compiled-in modules.\n\nIf the web server or operating system information is sent to the client via the server response header, this is a finding. If the directive does not exist, this would be a finding as it defaults to Full.'\n  desc 'fix', 'Ensure the web server is configured to not advertise the web server and operating system information to the client.'\n  impact 0.3\n  ref 'DPMS Target Apache Instance 2.x'\n  tag check_id: 'C-33763r1_chk'\n  tag severity: 'low'\n  tag gid: 'V-6724'\n  tag rid: 'SV-33098r1_rule'\n  tag stig_id: 'WG520 W22'\n  tag gtitle: 'WG520'\n  tag fix_id: 'F-29400r1_fix'\n  tag 'documentable'\n  tag responsibility: 'Web Administrator'\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Apache_2-2_Server_WIN_STIG_V1R13/controls/SV-33098.rb"},"title":"Web server and/or operating system information must be protected.","desc":"The web server response header of an HTTP response can contain several fields of information including the requested HTML page. The information included in this response can be web server type and version, operating system and version, and ports associated with the web server. This provides the malicious user valuable information without the use of extensive tools.","descriptions":{"default":"The web server response header of an HTTP response can contain several fields of information including the requested HTML page. The information included in this response can be web server type and version, operating system and version, and ports associated with the web server. This provides the malicious user valuable information without the use of extensive tools.","check":"Locate the httpd.conf file.\n\nOpen the httpd.conf file with an editor such as Notepad, and search for the following uncommented directive: ServerTokens\n\nThe directive ServerTokens must be set to “Prod” (ex. ServerTokens Prod). This directive controls whether Server response header field that is sent back to clients that includes a description of the OS-type of the server as well as information about compiled-in modules.\n\nIf the web server or operating system information is sent to the client via the server response header, this is a finding. If the directive does not exist, this would be a finding as it defaults to Full.","fix":"Ensure the web server is configured to not advertise the web server and operating system information to the client."},"impact":0.3,"refs":[{"ref":"DPMS Target Apache Instance 2.x"}],"tags":{"check_id":"C-33763r1_chk","severity":"low","gid":"V-6724","rid":"SV-33098r1_rule","stig_id":"WG520 W22","gtitle":"WG520","fix_id":"F-29400r1_fix","documentable":null,"responsibility":"Web Administrator"}},{"id":"SV-33167","code":"control 'SV-33167' do\n  title 'Active software modules must be minimized.'\n  desc 'Modules are the source of Apache httpd servers core and dynamic capabilities. Thus not every module available is needed for operation. Most installations only need a small subset of the modules available. By minimizing the enabled modules to only those that are required, we reduce the number of doors and have therefore reduced the attack surface of the web site. Likewise having fewer modules means less software that could have vulnerabilities.'\n  desc 'check', 'Open a command prompt window.\n\nNavigate to the “bin” directory (in many cases this may be [Drive Letter]:\\\\[directory path]\\\\Apache Software Foundation\\\\Apache2.2\\\\bin>).\n\nEnter the following command and press Enter: httpd –M\n\nThis will provide a list of the loaded modules. Discuss with the web administrator why all displayed modules are required for operation. If any module is not required for operation, this is a finding.\n\nNote: The following modules do not need to be discussed: core_module, win32_module, mpm_winnt_module, http_module, so_module.'\n  desc 'fix', 'Disable any modules that are not needed by adding a \"#\" in front of them within the httpd.conf file, and restarting the Apache httpd service.'\n  impact 0.5\n  ref 'DPMS Target Apache Instance 2.x'\n  tag check_id: 'C-33806r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-26285'\n  tag rid: 'SV-33167r1_rule'\n  tag stig_id: 'WA00500 W22'\n  tag gtitle: 'WA00500'\n  tag fix_id: 'F-29455r1_fix'\n  tag 'documentable'\n  tag responsibility: 'Web Administrator'\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Apache_2-2_Server_WIN_STIG_V1R13/controls/SV-33167.rb"},"title":"Active software modules must be minimized.","desc":"Modules are the source of Apache httpd servers core and dynamic capabilities. Thus not every module available is needed for operation. Most installations only need a small subset of the modules available. By minimizing the enabled modules to only those that are required, we reduce the number of doors and have therefore reduced the attack surface of the web site. Likewise having fewer modules means less software that could have vulnerabilities.","descriptions":{"default":"Modules are the source of Apache httpd servers core and dynamic capabilities. Thus not every module available is needed for operation. Most installations only need a small subset of the modules available. By minimizing the enabled modules to only those that are required, we reduce the number of doors and have therefore reduced the attack surface of the web site. Likewise having fewer modules means less software that could have vulnerabilities.","check":"Open a command prompt window.\n\nNavigate to the “bin” directory (in many cases this may be [Drive Letter]:\\[directory path]\\Apache Software Foundation\\Apache2.2\\bin>).\n\nEnter the following command and press Enter: httpd –M\n\nThis will provide a list of the loaded modules. Discuss with the web administrator why all displayed modules are required for operation. If any module is not required for operation, this is a finding.\n\nNote: The following modules do not need to be discussed: core_module, win32_module, mpm_winnt_module, http_module, so_module.","fix":"Disable any modules that are not needed by adding a \"#\" in front of them within the httpd.conf file, and restarting the Apache httpd service."},"impact":0.5,"refs":[{"ref":"DPMS Target Apache Instance 2.x"}],"tags":{"check_id":"C-33806r1_chk","severity":"medium","gid":"V-26285","rid":"SV-33167r1_rule","stig_id":"WA00500 W22","gtitle":"WA00500","fix_id":"F-29455r1_fix","documentable":null,"responsibility":"Web Administrator"}},{"id":"SV-33169","code":"control 'SV-33169' do\n  title 'Web Distributed Authoring and Versioning (WebDAV) must be disabled.'\n  desc \"The Apache mod_dav and mod_dav_fs modules support WebDAV ('Web-based Distributed Authoring and Versioning') functionality for Apache. WebDAV is an extension to the HTTP protocol which allows clients to create, move, and delete files and resources on the web server. WebDAV is not widely used, and has serious security concerns as it may allow clients to modify unauthorized files on the web server. Therefore, the WebDav modules mod_dav and mod_dav_fs should be disabled.\"\n  desc 'check', 'Open a command prompt window.\n\nNavigate to the “bin” directory (in many cases this may be [Drive Letter]:\\\\[directory path]\\\\Apache Software Foundation\\\\Apache2.2\\\\bin>).\n\nEnter the following command: httpd –M <enter>\nNOTE: Some installations may be running under apache.exe. In such case, validate by running the following command: apache -M <enter>\nThis will provide a list of all loaded modules. If any of the following modules are found this is a finding: dav_module, dav_fs_module, or dav_lock_module.'\n  desc 'fix', 'Disable all WebDAV modules by adding a \"#\" in front of them within the httpd.conf file, and restarting the Apache service.'\n  impact 0.5\n  ref 'DPMS Target Apache Instance 2.x'\n  tag check_id: 'C-33807r2_chk'\n  tag severity: 'medium'\n  tag gid: 'V-26287'\n  tag rid: 'SV-33169r2_rule'\n  tag stig_id: 'WA00505 W22'\n  tag gtitle: 'WA00505'\n  tag fix_id: 'F-29456r2_fix'\n  tag 'documentable'\n  tag responsibility: 'Web Administrator'\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Apache_2-2_Server_WIN_STIG_V1R13/controls/SV-33169.rb"},"title":"Web Distributed Authoring and Versioning (WebDAV) must be disabled.","desc":"The Apache mod_dav and mod_dav_fs modules support WebDAV ('Web-based Distributed Authoring and Versioning') functionality for Apache. WebDAV is an extension to the HTTP protocol which allows clients to create, move, and delete files and resources on the web server. WebDAV is not widely used, and has serious security concerns as it may allow clients to modify unauthorized files on the web server. Therefore, the WebDav modules mod_dav and mod_dav_fs should be disabled.","descriptions":{"default":"The Apache mod_dav and mod_dav_fs modules support WebDAV ('Web-based Distributed Authoring and Versioning') functionality for Apache. WebDAV is an extension to the HTTP protocol which allows clients to create, move, and delete files and resources on the web server. WebDAV is not widely used, and has serious security concerns as it may allow clients to modify unauthorized files on the web server. Therefore, the WebDav modules mod_dav and mod_dav_fs should be disabled.","check":"Open a command prompt window.\n\nNavigate to the “bin” directory (in many cases this may be [Drive Letter]:\\[directory path]\\Apache Software Foundation\\Apache2.2\\bin>).\n\nEnter the following command: httpd –M <enter>\nNOTE: Some installations may be running under apache.exe. In such case, validate by running the following command: apache -M <enter>\nThis will provide a list of all loaded modules. If any of the following modules are found this is a finding: dav_module, dav_fs_module, or dav_lock_module.","fix":"Disable all WebDAV modules by adding a \"#\" in front of them within the httpd.conf file, and restarting the Apache service."},"impact":0.5,"refs":[{"ref":"DPMS Target Apache Instance 2.x"}],"tags":{"check_id":"C-33807r2_chk","severity":"medium","gid":"V-26287","rid":"SV-33169r2_rule","stig_id":"WA00505 W22","gtitle":"WA00505","fix_id":"F-29456r2_fix","documentable":null,"responsibility":"Web Administrator"}},{"id":"SV-33171","code":"control 'SV-33171' do\n  title 'Web server status module must be disabled.'\n  desc 'The Apache mod_info module provides information on the server configuration via access to a /server-info URL location, while the mod_status module provides current server performance statistics. While having server configuration and status information available as a web page may be convenient, it is recommended that these modules not be enabled: Once mod_info is loaded into the server, its handler capability is available in per-directory .htaccess files and can leak sensitive information from the configuration directives of other Apache modules such as system paths, usernames/passwords, database names, etc. If mod_status is loaded into the server, its handler capability is available in all configuration files, including per-directory files (e.g., .htaccess) and may have security-related ramifications.'\n  desc 'check', 'Open a command prompt window.\n\nNavigate to the “bin” directory (in many cases this may be [Drive Letter]:\\\\[directory path]\\\\Apache Software Foundation\\\\Apache2.2\\\\bin>).\n\nEnter the following command: httpd –M <enter>\nNOTE: Some installations may be running under apache.exe. In such case, validate by running the following command: apache -M <enter>\n\nThis will provide a list of all loaded modules. If any of the following modules are found this is a finding: info_module & status_module.'\n  desc 'fix', 'Disable info and status modules by adding a \"#\" in front of them within the httpd.conf file, and restarting the Apache service.'\n  impact 0.5\n  ref 'DPMS Target Apache Instance 2.x'\n  tag check_id: 'C-33808r3_chk'\n  tag severity: 'medium'\n  tag gid: 'V-26294'\n  tag rid: 'SV-33171r2_rule'\n  tag stig_id: 'WA00510 W22'\n  tag gtitle: 'WA00510'\n  tag fix_id: 'F-29457r2_fix'\n  tag 'documentable'\n  tag responsibility: 'Web Administrator'\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Apache_2-2_Server_WIN_STIG_V1R13/controls/SV-33171.rb"},"title":"Web server status module must be disabled.","desc":"The Apache mod_info module provides information on the server configuration via access to a /server-info URL location, while the mod_status module provides current server performance statistics. While having server configuration and status information available as a web page may be convenient, it is recommended that these modules not be enabled: Once mod_info is loaded into the server, its handler capability is available in per-directory .htaccess files and can leak sensitive information from the configuration directives of other Apache modules such as system paths, usernames/passwords, database names, etc. If mod_status is loaded into the server, its handler capability is available in all configuration files, including per-directory files (e.g., .htaccess) and may have security-related ramifications.","descriptions":{"default":"The Apache mod_info module provides information on the server configuration via access to a /server-info URL location, while the mod_status module provides current server performance statistics. While having server configuration and status information available as a web page may be convenient, it is recommended that these modules not be enabled: Once mod_info is loaded into the server, its handler capability is available in per-directory .htaccess files and can leak sensitive information from the configuration directives of other Apache modules such as system paths, usernames/passwords, database names, etc. If mod_status is loaded into the server, its handler capability is available in all configuration files, including per-directory files (e.g., .htaccess) and may have security-related ramifications.","check":"Open a command prompt window.\n\nNavigate to the “bin” directory (in many cases this may be [Drive Letter]:\\[directory path]\\Apache Software Foundation\\Apache2.2\\bin>).\n\nEnter the following command: httpd –M <enter>\nNOTE: Some installations may be running under apache.exe. In such case, validate by running the following command: apache -M <enter>\n\nThis will provide a list of all loaded modules. If any of the following modules are found this is a finding: info_module & status_module.","fix":"Disable info and status modules by adding a \"#\" in front of them within the httpd.conf file, and restarting the Apache service."},"impact":0.5,"refs":[{"ref":"DPMS Target Apache Instance 2.x"}],"tags":{"check_id":"C-33808r3_chk","severity":"medium","gid":"V-26294","rid":"SV-33171r2_rule","stig_id":"WA00510 W22","gtitle":"WA00510","fix_id":"F-29457r2_fix","documentable":null,"responsibility":"Web Administrator"}},{"id":"SV-33173","code":"control 'SV-33173' do\n  title 'The web server must not be configured as a proxy server.'\n  desc 'The Apache proxy modules allow the server to act as a proxy (either forward or reverse proxy) of http and other protocols with additional proxy modules loaded. If the Apache installation is not intended to proxy requests to or from another network then the proxy module should not be loaded. Proxy servers can act as an important security control when properly configured, however a secure proxy server is not within the scope of this STIG. A web server should be primarily a web server or a proxy server but not both, for the same reasons that other multi-use servers are not recommended. Scanning for web servers that will also proxy requests is a very common attack, as proxy servers are useful for anonymizing attacks on other servers, or possibly proxying requests into an otherwise protected network.'\n  desc 'check', 'Note: If the Apache web server is only performing in a proxy server role and does not host any websites nor support any applications, this check is Not Applicable.\nOpen a command prompt window.\n\nNavigate to the “bin” directory (in many cases this may be [Drive Letter]:\\\\[directory path]\\\\Apache Software Foundation\\\\Apache2.2\\\\bin>).\n\nEnter the following command: httpd –M <enter>\nNote: Some installations may be running under apache.exe. In such case, validate by running the following command: apache -M <enter>\n\nThis will provide a list of all loaded modules. If any of the following modules are found this is a finding: proxy_module, proxy_ajp_module, proxy_balancer_module, proxy_ftp_module, proxy_http_module, or proxy_connect_module.'\n  desc 'fix', 'Disable all proxy modules by adding a \"#\" in front of them within the httpd.conf file, and restarting the Apache service.'\n  impact 0.5\n  ref 'DPMS Target Apache Instance 2.x'\n  tag check_id: 'C-33809r5_chk'\n  tag severity: 'medium'\n  tag gid: 'V-26299'\n  tag rid: 'SV-33173r3_rule'\n  tag stig_id: 'WA00520 W22'\n  tag gtitle: 'WA00520'\n  tag fix_id: 'F-29459r2_fix'\n  tag 'documentable'\n  tag responsibility: 'Web Administrator'\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Apache_2-2_Server_WIN_STIG_V1R13/controls/SV-33173.rb"},"title":"The web server must not be configured as a proxy server.","desc":"The Apache proxy modules allow the server to act as a proxy (either forward or reverse proxy) of http and other protocols with additional proxy modules loaded. If the Apache installation is not intended to proxy requests to or from another network then the proxy module should not be loaded. Proxy servers can act as an important security control when properly configured, however a secure proxy server is not within the scope of this STIG. A web server should be primarily a web server or a proxy server but not both, for the same reasons that other multi-use servers are not recommended. Scanning for web servers that will also proxy requests is a very common attack, as proxy servers are useful for anonymizing attacks on other servers, or possibly proxying requests into an otherwise protected network.","descriptions":{"default":"The Apache proxy modules allow the server to act as a proxy (either forward or reverse proxy) of http and other protocols with additional proxy modules loaded. If the Apache installation is not intended to proxy requests to or from another network then the proxy module should not be loaded. Proxy servers can act as an important security control when properly configured, however a secure proxy server is not within the scope of this STIG. A web server should be primarily a web server or a proxy server but not both, for the same reasons that other multi-use servers are not recommended. Scanning for web servers that will also proxy requests is a very common attack, as proxy servers are useful for anonymizing attacks on other servers, or possibly proxying requests into an otherwise protected network.","check":"Note: If the Apache web server is only performing in a proxy server role and does not host any websites nor support any applications, this check is Not Applicable.\nOpen a command prompt window.\n\nNavigate to the “bin” directory (in many cases this may be [Drive Letter]:\\[directory path]\\Apache Software Foundation\\Apache2.2\\bin>).\n\nEnter the following command: httpd –M <enter>\nNote: Some installations may be running under apache.exe. In such case, validate by running the following command: apache -M <enter>\n\nThis will provide a list of all loaded modules. If any of the following modules are found this is a finding: proxy_module, proxy_ajp_module, proxy_balancer_module, proxy_ftp_module, proxy_http_module, or proxy_connect_module.","fix":"Disable all proxy modules by adding a \"#\" in front of them within the httpd.conf file, and restarting the Apache service."},"impact":0.5,"refs":[{"ref":"DPMS Target Apache Instance 2.x"}],"tags":{"check_id":"C-33809r5_chk","severity":"medium","gid":"V-26299","rid":"SV-33173r3_rule","stig_id":"WA00520 W22","gtitle":"WA00520","fix_id":"F-29459r2_fix","documentable":null,"responsibility":"Web Administrator"}},{"id":"SV-33175","code":"control 'SV-33175' do\n  title 'User specific directories must not be globally enabled.'\n  desc 'The UserDir directive must be disabled so that user home directories are not accessed via the web site with a tilde (~) preceding the username. The directive also sets the path name of the directory that will be accessed. The user directories should not be globally enabled since it allows anonymous access to anything users may want to share with other users on the network. Also consider that every time a new account is created on the system, there is potentially new content available via the web site.'\n  desc 'check', 'Open a command prompt window.\n\nNavigate to the “bin” directory (in many cases this may be [Drive Letter]:\\\\[directory path]\\\\Apache Software Foundation\\\\Apache2.2\\\\bin>).\n\nEnter the following command: httpd –M <enter>\nNOTE: Some installations may be running under apache.exe. In such case, validate by running the following command: apache -M <enter>\n\nThis will provide a list of all loaded modules. If the following module is found this is a finding: userdir_module.'\n  desc 'fix', 'Disable the userdir_module by adding a \"#\" in front of it within the httpd.conf file, and restarting the Apache service.'\n  impact 0.5\n  ref 'DPMS Target Apache Instance 2.x'\n  tag check_id: 'C-33810r2_chk'\n  tag severity: 'medium'\n  tag gid: 'V-26302'\n  tag rid: 'SV-33175r2_rule'\n  tag stig_id: 'WA00525 W22'\n  tag gtitle: 'WA00525'\n  tag fix_id: 'F-29460r2_fix'\n  tag 'documentable'\n  tag responsibility: 'Web Administrator'\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Apache_2-2_Server_WIN_STIG_V1R13/controls/SV-33175.rb"},"title":"User specific directories must not be globally enabled.","desc":"The UserDir directive must be disabled so that user home directories are not accessed via the web site with a tilde (~) preceding the username. The directive also sets the path name of the directory that will be accessed. The user directories should not be globally enabled since it allows anonymous access to anything users may want to share with other users on the network. Also consider that every time a new account is created on the system, there is potentially new content available via the web site.","descriptions":{"default":"The UserDir directive must be disabled so that user home directories are not accessed via the web site with a tilde (~) preceding the username. The directive also sets the path name of the directory that will be accessed. The user directories should not be globally enabled since it allows anonymous access to anything users may want to share with other users on the network. Also consider that every time a new account is created on the system, there is potentially new content available via the web site.","check":"Open a command prompt window.\n\nNavigate to the “bin” directory (in many cases this may be [Drive Letter]:\\[directory path]\\Apache Software Foundation\\Apache2.2\\bin>).\n\nEnter the following command: httpd –M <enter>\nNOTE: Some installations may be running under apache.exe. In such case, validate by running the following command: apache -M <enter>\n\nThis will provide a list of all loaded modules. If the following module is found this is a finding: userdir_module.","fix":"Disable the userdir_module by adding a \"#\" in front of it within the httpd.conf file, and restarting the Apache service."},"impact":0.5,"refs":[{"ref":"DPMS Target Apache Instance 2.x"}],"tags":{"check_id":"C-33810r2_chk","severity":"medium","gid":"V-26302","rid":"SV-33175r2_rule","stig_id":"WA00525 W22","gtitle":"WA00525","fix_id":"F-29460r2_fix","documentable":null,"responsibility":"Web Administrator"}},{"id":"SV-33177","code":"control 'SV-33177' do\n  title 'The process ID (PID) file must be properly secured.'\n  desc 'The PidFile directive sets the path to the process ID file to which the server records the process ID of the server, which is useful for sending a signal to the server process or for checking on the health of the process. If the PidFile is placed in a writable directory, other accounts could create a denial of service attack and prevent the server from starting by creating a PID file with the same name.'\n  desc 'check', 'Locate the Apache httpd.conf file.\n\nOpen the httpd.conf file with an editor such as Notepad, and search for the following directive: PidFile\n\nNote the location and name of the PID file\nIf the PID file location is not specified in the conf file, use the \\\\logs directory as the PID file location.\n\nVerify the permissions on the folder containing the PID file. If any user accounts other than administrator, auditor, or the account used to run the web server has permission to this file, this is a finding. If the PID file is located in the web server DocumentRoot this is a finding.'\n  desc 'fix', 'Modify the location and/or permissions for the PID file and/or folder.'\n  impact 0.5\n  ref 'DPMS Target Apache Instance 2.x'\n  tag check_id: 'C-33811r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-26305'\n  tag rid: 'SV-33177r1_rule'\n  tag stig_id: 'WA00530 W22'\n  tag gtitle: 'WA00530'\n  tag fix_id: 'F-29461r1_fix'\n  tag 'documentable'\n  tag responsibility: 'Web Administrator'\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Apache_2-2_Server_WIN_STIG_V1R13/controls/SV-33177.rb"},"title":"The process ID (PID) file must be properly secured.","desc":"The PidFile directive sets the path to the process ID file to which the server records the process ID of the server, which is useful for sending a signal to the server process or for checking on the health of the process. If the PidFile is placed in a writable directory, other accounts could create a denial of service attack and prevent the server from starting by creating a PID file with the same name.","descriptions":{"default":"The PidFile directive sets the path to the process ID file to which the server records the process ID of the server, which is useful for sending a signal to the server process or for checking on the health of the process. If the PidFile is placed in a writable directory, other accounts could create a denial of service attack and prevent the server from starting by creating a PID file with the same name.","check":"Locate the Apache httpd.conf file.\n\nOpen the httpd.conf file with an editor such as Notepad, and search for the following directive: PidFile\n\nNote the location and name of the PID file\nIf the PID file location is not specified in the conf file, use the \\logs directory as the PID file location.\n\nVerify the permissions on the folder containing the PID file. If any user accounts other than administrator, auditor, or the account used to run the web server has permission to this file, this is a finding. If the PID file is located in the web server DocumentRoot this is a finding.","fix":"Modify the location and/or permissions for the PID file and/or folder."},"impact":0.5,"refs":[{"ref":"DPMS Target Apache Instance 2.x"}],"tags":{"check_id":"C-33811r1_chk","severity":"medium","gid":"V-26305","rid":"SV-33177r1_rule","stig_id":"WA00530 W22","gtitle":"WA00530","fix_id":"F-29461r1_fix","documentable":null,"responsibility":"Web Administrator"}},{"id":"SV-33178","code":"control 'SV-33178' do\n  title 'The ScoreBoard file must be properly secured.'\n  desc 'The ScoreBoardFile directive sets a file path which the server will use for Inter-Process Communication (IPC) among the Apache processes. If the directive is specified, then Apache will use the configured file for the inter-process communication. Therefore if it is specified it needs to be located in a secure directory. If the ScoreBoard file is placed in openly writable directory, other accounts could create a denial of service attack and prevent the server from starting by creating a file with the same name, and or users could monitor and disrupt the communication between the processes by reading and writing to the file.'\n  desc 'check', 'Locate the Apache httpd.conf file.\n\nOpen the httpd.conf file with an editor such as notepad, and search for the following uncommented directive: ScoreBoardFile\n\nIf the ScoreBoardFile directive is found uncommented note the directory specified in the directive statement that holds the Scoreboard file.  If the ScoreBoardFile directive is not found enabled in the conf file use \\\\logs as the directory containing the Scoreboard file.\n\nIf any users other than administrator or the account used to run the web server has permission to the scoreboard file directory, this is a finding. If the ScoreBoard file is located in the web server document root this is finding.'\n  desc 'fix', 'Modify the location and/or permissions for the ScoreBoard file and/or folder.'\n  impact 0.5\n  ref 'DPMS Target Apache Instance 2.x'\n  tag check_id: 'C-33812r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-26322'\n  tag rid: 'SV-33178r2_rule'\n  tag stig_id: 'WA00535 W22'\n  tag gtitle: 'WA00535'\n  tag fix_id: 'F-29463r1_fix'\n  tag 'documentable'\n  tag responsibility: 'Web Administrator'\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Apache_2-2_Server_WIN_STIG_V1R13/controls/SV-33178.rb"},"title":"The ScoreBoard file must be properly secured.","desc":"The ScoreBoardFile directive sets a file path which the server will use for Inter-Process Communication (IPC) among the Apache processes. If the directive is specified, then Apache will use the configured file for the inter-process communication. Therefore if it is specified it needs to be located in a secure directory. If the ScoreBoard file is placed in openly writable directory, other accounts could create a denial of service attack and prevent the server from starting by creating a file with the same name, and or users could monitor and disrupt the communication between the processes by reading and writing to the file.","descriptions":{"default":"The ScoreBoardFile directive sets a file path which the server will use for Inter-Process Communication (IPC) among the Apache processes. If the directive is specified, then Apache will use the configured file for the inter-process communication. Therefore if it is specified it needs to be located in a secure directory. If the ScoreBoard file is placed in openly writable directory, other accounts could create a denial of service attack and prevent the server from starting by creating a file with the same name, and or users could monitor and disrupt the communication between the processes by reading and writing to the file.","check":"Locate the Apache httpd.conf file.\n\nOpen the httpd.conf file with an editor such as notepad, and search for the following uncommented directive: ScoreBoardFile\n\nIf the ScoreBoardFile directive is found uncommented note the directory specified in the directive statement that holds the Scoreboard file.  If the ScoreBoardFile directive is not found enabled in the conf file use \\logs as the directory containing the Scoreboard file.\n\nIf any users other than administrator or the account used to run the web server has permission to the scoreboard file directory, this is a finding. If the ScoreBoard file is located in the web server document root this is finding.","fix":"Modify the location and/or permissions for the ScoreBoard file and/or folder."},"impact":0.5,"refs":[{"ref":"DPMS Target Apache Instance 2.x"}],"tags":{"check_id":"C-33812r1_chk","severity":"medium","gid":"V-26322","rid":"SV-33178r2_rule","stig_id":"WA00535 W22","gtitle":"WA00535","fix_id":"F-29463r1_fix","documentable":null,"responsibility":"Web Administrator"}},{"id":"SV-33180","code":"control 'SV-33180' do\n  title 'The web server must be configured to explicitly deny access to the OS root.'\n  desc 'The Apache Directory directive allows for directory specific configuration of access controls and many other features and options. One important usage is to create a default deny policy that does not allow access to Operating System directories and files, except for those specifically allowed. This is done, with denying access to the OS root directory. One aspect of Apache, which is occasionally misunderstood, is the feature of default access. That is, unless you take steps to change it, if the server can find its way to a file through normal URL mapping rules, it can and will serve it to clients. Having a default deny is a predominate security principal, and then helps prevent the unintended access, and we do that in this case by denying access to the OS root directory. The Order directive is important as it provides for other Allow directives to override the default deny.'\n  desc 'check', \"Locate the Apache httpd.conf file.\n\nOpen the httpd.conf file with an editor such as notepad, and search for the following uncommented directive: Directory\n\nFor every root directory entry (i.e. <Directory />) ensure the following exists after it:\n\nOrder deny,allow\nDeny from all\n\nIf the statement above is not found in the root directory statement, this is a finding. If Allow directives are included in the root directory statement, this is a finding. If the root directory statement isn't found at all, this is a finding.\"\n  desc 'fix', 'Add the following after the root directory directive:\n\nOrder deny,allow\nDeny from all'\n  impact 0.5\n  ref 'DPMS Target Apache Instance 2.x'\n  tag check_id: 'C-33813r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-26323'\n  tag rid: 'SV-33180r1_rule'\n  tag stig_id: 'WA00540 W22'\n  tag gtitle: 'WA00540'\n  tag fix_id: 'F-29465r1_fix'\n  tag 'documentable'\n  tag responsibility: 'Web Administrator'\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Apache_2-2_Server_WIN_STIG_V1R13/controls/SV-33180.rb"},"title":"The web server must be configured to explicitly deny access to the OS root.","desc":"The Apache Directory directive allows for directory specific configuration of access controls and many other features and options. One important usage is to create a default deny policy that does not allow access to Operating System directories and files, except for those specifically allowed. This is done, with denying access to the OS root directory. One aspect of Apache, which is occasionally misunderstood, is the feature of default access. That is, unless you take steps to change it, if the server can find its way to a file through normal URL mapping rules, it can and will serve it to clients. Having a default deny is a predominate security principal, and then helps prevent the unintended access, and we do that in this case by denying access to the OS root directory. The Order directive is important as it provides for other Allow directives to override the default deny.","descriptions":{"default":"The Apache Directory directive allows for directory specific configuration of access controls and many other features and options. One important usage is to create a default deny policy that does not allow access to Operating System directories and files, except for those specifically allowed. This is done, with denying access to the OS root directory. One aspect of Apache, which is occasionally misunderstood, is the feature of default access. That is, unless you take steps to change it, if the server can find its way to a file through normal URL mapping rules, it can and will serve it to clients. Having a default deny is a predominate security principal, and then helps prevent the unintended access, and we do that in this case by denying access to the OS root directory. The Order directive is important as it provides for other Allow directives to override the default deny.","check":"Locate the Apache httpd.conf file.\n\nOpen the httpd.conf file with an editor such as notepad, and search for the following uncommented directive: Directory\n\nFor every root directory entry (i.e. <Directory />) ensure the following exists after it:\n\nOrder deny,allow\nDeny from all\n\nIf the statement above is not found in the root directory statement, this is a finding. If Allow directives are included in the root directory statement, this is a finding. If the root directory statement isn't found at all, this is a finding.","fix":"Add the following after the root directory directive:\n\nOrder deny,allow\nDeny from all"},"impact":0.5,"refs":[{"ref":"DPMS Target Apache Instance 2.x"}],"tags":{"check_id":"C-33813r1_chk","severity":"medium","gid":"V-26323","rid":"SV-33180r1_rule","stig_id":"WA00540 W22","gtitle":"WA00540","fix_id":"F-29465r1_fix","documentable":null,"responsibility":"Web Administrator"}},{"id":"SV-33182","code":"control 'SV-33182' do\n  title 'Web server options for the OS root must be disabled.'\n  desc 'The Apache Options directive allows for specific configuration of options, including execution of CGI, following symbolic links, server side includes, and content negotiation. The Options directive for the root OS level is used to create a default minimal options policy that allows only the minimal options at the root directory level. Then for specific web sites or portions of the web site, options may be enabled as needed and appropriate. No options should be enabled and the value for the Options Directive should be None.'\n  desc 'check', 'Locate the Apache httpd.conf file.\n\nOpen the httpd.conf file with an editor such as notepad, and search for the following uncommented directive: Directory\n\nFor every root directory entry (i.e. <Directory />) ensure the following entry exists after it:\n\nOptions None\n\nIf the statement above is not found in the root directory statement, this is a finding. If Allow directives are included in the root directory statement, this is a finding. If the root directory statement is not found at all, this is a finding.'\n  desc 'fix', 'Ensure the Directory directive has the following after it:\n\nOptions None'\n  impact 0.5\n  ref 'DPMS Target Apache Instance 2.x'\n  tag check_id: 'C-33814r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-26324'\n  tag rid: 'SV-33182r1_rule'\n  tag stig_id: 'WA00545 W22'\n  tag gtitle: 'WA00545'\n  tag fix_id: 'F-29466r1_fix'\n  tag 'documentable'\n  tag responsibility: 'Web Administrator'\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Apache_2-2_Server_WIN_STIG_V1R13/controls/SV-33182.rb"},"title":"Web server options for the OS root must be disabled.","desc":"The Apache Options directive allows for specific configuration of options, including execution of CGI, following symbolic links, server side includes, and content negotiation. The Options directive for the root OS level is used to create a default minimal options policy that allows only the minimal options at the root directory level. Then for specific web sites or portions of the web site, options may be enabled as needed and appropriate. No options should be enabled and the value for the Options Directive should be None.","descriptions":{"default":"The Apache Options directive allows for specific configuration of options, including execution of CGI, following symbolic links, server side includes, and content negotiation. The Options directive for the root OS level is used to create a default minimal options policy that allows only the minimal options at the root directory level. Then for specific web sites or portions of the web site, options may be enabled as needed and appropriate. No options should be enabled and the value for the Options Directive should be None.","check":"Locate the Apache httpd.conf file.\n\nOpen the httpd.conf file with an editor such as notepad, and search for the following uncommented directive: Directory\n\nFor every root directory entry (i.e. <Directory />) ensure the following entry exists after it:\n\nOptions None\n\nIf the statement above is not found in the root directory statement, this is a finding. If Allow directives are included in the root directory statement, this is a finding. If the root directory statement is not found at all, this is a finding.","fix":"Ensure the Directory directive has the following after it:\n\nOptions None"},"impact":0.5,"refs":[{"ref":"DPMS Target Apache Instance 2.x"}],"tags":{"check_id":"C-33814r1_chk","severity":"medium","gid":"V-26324","rid":"SV-33182r1_rule","stig_id":"WA00545 W22","gtitle":"WA00545","fix_id":"F-29466r1_fix","documentable":null,"responsibility":"Web Administrator"}},{"id":"SV-33183","code":"control 'SV-33183' do\n  title 'The TRACE  method must be disabled.'\n  desc 'Use the Apache TraceEnable directive to disable the HTTP TRACE request method. Refer to the Apache documentation for more details http://httpd.apache.org/docs/2.2/mod/core.html#traceenable. The HTTP 1.1 protocol requires support for the TRACE request method which reflects the request back as a response and was intended for diagnostics purposes. The TRACE method is not needed and is easily subject to abuse and should be disabled.'\n  desc 'check', 'Locate the Apache httpd.conf file.\n\nOpen the httpd.conf file with an editor such as Notepad, and search for the following uncommented directive: TraceEnable\n\nFor any enabled TraceEnable directives ensure they are part of the server level configuration (i.e. not nested in a <Directory> or <Location> directive). Also ensure that the TraceEnable directive is set to “Off”.\n\nIf the TraceEnable directive is not part of the server level configuration and/or is not set to “off” this is a finding. If the directive does not exist in the conf file this is a finding as the default value is \"On\".'\n  desc 'fix', 'Disable the TraceEnable directive by setting it to \"off\".'\n  impact 0.5\n  ref 'DPMS Target Apache Instance 2.x'\n  tag check_id: 'C-33815r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-26325'\n  tag rid: 'SV-33183r1_rule'\n  tag stig_id: 'WA00550 W22'\n  tag gtitle: 'WA00550'\n  tag fix_id: 'F-29467r1_fix'\n  tag 'documentable'\n  tag responsibility: 'Web Administrator'\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Apache_2-2_Server_WIN_STIG_V1R13/controls/SV-33183.rb"},"title":"The TRACE  method must be disabled.","desc":"Use the Apache TraceEnable directive to disable the HTTP TRACE request method. Refer to the Apache documentation for more details http://httpd.apache.org/docs/2.2/mod/core.html#traceenable. The HTTP 1.1 protocol requires support for the TRACE request method which reflects the request back as a response and was intended for diagnostics purposes. The TRACE method is not needed and is easily subject to abuse and should be disabled.","descriptions":{"default":"Use the Apache TraceEnable directive to disable the HTTP TRACE request method. Refer to the Apache documentation for more details http://httpd.apache.org/docs/2.2/mod/core.html#traceenable. The HTTP 1.1 protocol requires support for the TRACE request method which reflects the request back as a response and was intended for diagnostics purposes. The TRACE method is not needed and is easily subject to abuse and should be disabled.","check":"Locate the Apache httpd.conf file.\n\nOpen the httpd.conf file with an editor such as Notepad, and search for the following uncommented directive: TraceEnable\n\nFor any enabled TraceEnable directives ensure they are part of the server level configuration (i.e. not nested in a <Directory> or <Location> directive). Also ensure that the TraceEnable directive is set to “Off”.\n\nIf the TraceEnable directive is not part of the server level configuration and/or is not set to “off” this is a finding. If the directive does not exist in the conf file this is a finding as the default value is \"On\".","fix":"Disable the TraceEnable directive by setting it to \"off\"."},"impact":0.5,"refs":[{"ref":"DPMS Target Apache Instance 2.x"}],"tags":{"check_id":"C-33815r1_chk","severity":"medium","gid":"V-26325","rid":"SV-33183r1_rule","stig_id":"WA00550 W22","gtitle":"WA00550","fix_id":"F-29467r1_fix","documentable":null,"responsibility":"Web Administrator"}},{"id":"SV-33184","code":"control 'SV-33184' do\n  title 'The web server must be configured to listen on a specific IP address and port.'\n  desc 'The Apache Listen directive specifies the IP addresses and port numbers the Apache web server will listen for requests. Rather than be unrestricted to listen on all IP addresses available to the system, the specific IP address or addresses intended must be explicitly specified. Specifically a Listen directive with no IP address specified, or with an IP address of zero’s should not be used. Having multiple interfaces on web servers is fairly common, and without explicit Listen directives, the web server is likely to be listening on an inappropriate IP address / interface that was not intended for the web server. Single homed system with a single IP addressed are also required to have an explicit IP address in the Listen directive, in case additional interfaces are added to the system at a later date.'\n  desc 'check', 'Locate the Apache httpd.conf file.\n\nOpen the httpd.conf file with an editor such as notepad, and search for the following uncommented directive: Listen\n\nFor any enabled Listen directives ensure they specify both an IP address and port number.\n\nIf the Listen directive is found with only an IP address, or only a port number specified, this is finding. If the IP address is all zeros (i.e. 0.0.0.0:80 or [::ffff:0.0.0.0]:80, this is a finding. If the Listen directive does not exist, this is a finding.'\n  desc 'fix', 'Configure the Listen directive to listen on a specific IP address and port.'\n  impact 0.5\n  ref 'DPMS Target Apache Instance 2.x'\n  tag check_id: 'C-33816r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-26326'\n  tag rid: 'SV-33184r1_rule'\n  tag stig_id: 'WA00555 W22'\n  tag gtitle: 'WA00555'\n  tag fix_id: 'F-29468r1_fix'\n  tag 'documentable'\n  tag responsibility: 'Web Administrator'\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Apache_2-2_Server_WIN_STIG_V1R13/controls/SV-33184.rb"},"title":"The web server must be configured to listen on a specific IP address and port.","desc":"The Apache Listen directive specifies the IP addresses and port numbers the Apache web server will listen for requests. Rather than be unrestricted to listen on all IP addresses available to the system, the specific IP address or addresses intended must be explicitly specified. Specifically a Listen directive with no IP address specified, or with an IP address of zero’s should not be used. Having multiple interfaces on web servers is fairly common, and without explicit Listen directives, the web server is likely to be listening on an inappropriate IP address / interface that was not intended for the web server. Single homed system with a single IP addressed are also required to have an explicit IP address in the Listen directive, in case additional interfaces are added to the system at a later date.","descriptions":{"default":"The Apache Listen directive specifies the IP addresses and port numbers the Apache web server will listen for requests. Rather than be unrestricted to listen on all IP addresses available to the system, the specific IP address or addresses intended must be explicitly specified. Specifically a Listen directive with no IP address specified, or with an IP address of zero’s should not be used. Having multiple interfaces on web servers is fairly common, and without explicit Listen directives, the web server is likely to be listening on an inappropriate IP address / interface that was not intended for the web server. Single homed system with a single IP addressed are also required to have an explicit IP address in the Listen directive, in case additional interfaces are added to the system at a later date.","check":"Locate the Apache httpd.conf file.\n\nOpen the httpd.conf file with an editor such as notepad, and search for the following uncommented directive: Listen\n\nFor any enabled Listen directives ensure they specify both an IP address and port number.\n\nIf the Listen directive is found with only an IP address, or only a port number specified, this is finding. If the IP address is all zeros (i.e. 0.0.0.0:80 or [::ffff:0.0.0.0]:80, this is a finding. If the Listen directive does not exist, this is a finding.","fix":"Configure the Listen directive to listen on a specific IP address and port."},"impact":0.5,"refs":[{"ref":"DPMS Target Apache Instance 2.x"}],"tags":{"check_id":"C-33816r1_chk","severity":"medium","gid":"V-26326","rid":"SV-33184r1_rule","stig_id":"WA00555 W22","gtitle":"WA00555","fix_id":"F-29468r1_fix","documentable":null,"responsibility":"Web Administrator"}},{"id":"SV-33185","code":"control 'SV-33185' do\n  title 'The URL-path name must be set to the file path name or the directory path name.'\n  desc 'The ScriptAlias directive controls which directories the Apache server \"sees\" as containing scripts.  If the directive uses a URL-path name that is different than the actual file system path, the potential exists to expose the script source code.'\n  desc 'check', 'Locate the Apache httpd.conf file.\n\nOpen the httpd.conf file with an editor such as Notepad, and search for the following uncommented directive: ScriptAlias\n\nIf any enabled ScriptAlias directive does not have matching URL-path and file-path/directory-path entries, this is a finding.\n\nExample:\n\nNot a finding:\n\nScriptAlias /cgi-bin/ “[Drive Letter]:/[directory path]/cgi-bin/\n\nA finding:\n\nScriptAlias /script-cgi-bin/ “[Drive Letter]:/[directory path]/cgi-bin/'\n  desc 'fix', 'Modify the ScriptAlias directive so the URL-path and file-path/directory-path entries match.'\n  impact 0.5\n  ref 'DPMS Target Apache Instance 2.x'\n  tag check_id: 'C-33817r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-26327'\n  tag rid: 'SV-33185r1_rule'\n  tag stig_id: 'WA00560 W22'\n  tag gtitle: 'WA00560'\n  tag fix_id: 'F-29469r1_fix'\n  tag 'documentable'\n  tag responsibility: 'Web Administrator'\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Apache_2-2_Server_WIN_STIG_V1R13/controls/SV-33185.rb"},"title":"The URL-path name must be set to the file path name or the directory path name.","desc":"The ScriptAlias directive controls which directories the Apache server \"sees\" as containing scripts.  If the directive uses a URL-path name that is different than the actual file system path, the potential exists to expose the script source code.","descriptions":{"default":"The ScriptAlias directive controls which directories the Apache server \"sees\" as containing scripts.  If the directive uses a URL-path name that is different than the actual file system path, the potential exists to expose the script source code.","check":"Locate the Apache httpd.conf file.\n\nOpen the httpd.conf file with an editor such as Notepad, and search for the following uncommented directive: ScriptAlias\n\nIf any enabled ScriptAlias directive does not have matching URL-path and file-path/directory-path entries, this is a finding.\n\nExample:\n\nNot a finding:\n\nScriptAlias /cgi-bin/ “[Drive Letter]:/[directory path]/cgi-bin/\n\nA finding:\n\nScriptAlias /script-cgi-bin/ “[Drive Letter]:/[directory path]/cgi-bin/","fix":"Modify the ScriptAlias directive so the URL-path and file-path/directory-path entries match."},"impact":0.5,"refs":[{"ref":"DPMS Target Apache Instance 2.x"}],"tags":{"check_id":"C-33817r1_chk","severity":"medium","gid":"V-26327","rid":"SV-33185r1_rule","stig_id":"WA00560 W22","gtitle":"WA00560","fix_id":"F-29469r1_fix","documentable":null,"responsibility":"Web Administrator"}},{"id":"SV-33225","code":"control 'SV-33225' do\n  title 'Automatic directory indexing must be disabled.'\n  desc 'To identify the type of web servers and versions software installed it is common for attackers to scan for icons or special content specific to the server type and version. A simple request like http://example.com/icons/apache_pb2.png may tell the attacker that the server is Apache 2.2 as shown below. The many icons are used primary for auto indexing, which is recommended to be disabled.'\n  desc 'check', 'Open a command prompt window.\n\nNavigate to the “bin” directory (in many cases this may be [Drive Letter]:\\\\[directory path]\\\\Apache Software Foundation\\\\Apache2.2\\\\bin>).\n\nEnter the following command and press Enter: httpd –M\n\nThis will provide a list of all loaded modules. If the following module is found this is a finding: autoindex_module.'\n  desc 'fix', 'Disable the autoindex_module by adding a \"#\" in front of it within the httpd.conf file, and restarting the Apache httpd service.'\n  impact 0.5\n  ref 'DPMS Target Apache Instance 2.x'\n  tag check_id: 'C-33829r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-26368'\n  tag rid: 'SV-33225r1_rule'\n  tag stig_id: 'WA00515 W22'\n  tag gtitle: 'WA00515'\n  tag fix_id: 'F-29494r1_fix'\n  tag 'documentable'\n  tag responsibility: 'Web Administrator'\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Apache_2-2_Server_WIN_STIG_V1R13/controls/SV-33225.rb"},"title":"Automatic directory indexing must be disabled.","desc":"To identify the type of web servers and versions software installed it is common for attackers to scan for icons or special content specific to the server type and version. A simple request like http://example.com/icons/apache_pb2.png may tell the attacker that the server is Apache 2.2 as shown below. The many icons are used primary for auto indexing, which is recommended to be disabled.","descriptions":{"default":"To identify the type of web servers and versions software installed it is common for attackers to scan for icons or special content specific to the server type and version. A simple request like http://example.com/icons/apache_pb2.png may tell the attacker that the server is Apache 2.2 as shown below. The many icons are used primary for auto indexing, which is recommended to be disabled.","check":"Open a command prompt window.\n\nNavigate to the “bin” directory (in many cases this may be [Drive Letter]:\\[directory path]\\Apache Software Foundation\\Apache2.2\\bin>).\n\nEnter the following command and press Enter: httpd –M\n\nThis will provide a list of all loaded modules. If the following module is found this is a finding: autoindex_module.","fix":"Disable the autoindex_module by adding a \"#\" in front of it within the httpd.conf file, and restarting the Apache httpd service."},"impact":0.5,"refs":[{"ref":"DPMS Target Apache Instance 2.x"}],"tags":{"check_id":"C-33829r1_chk","severity":"medium","gid":"V-26368","rid":"SV-33225r1_rule","stig_id":"WA00515 W22","gtitle":"WA00515","fix_id":"F-29494r1_fix","documentable":null,"responsibility":"Web Administrator"}},{"id":"SV-33237","code":"control 'SV-33237' do\n  title 'The ability to override the access configuration for the OS root directory must be disabled.'\n  desc 'The Apache OverRide directive allows for .htaccess files to be used to override much of the configuration, including authentication, handling of document types, auto generated indexes, access control, and options. When the server finds an .htaccess file (as specified by AccessFileName) it needs to know which directives declared in that file can override earlier access information. When this directive is set to None, then .htaccess files are completely ignored. In this case, the server will not even attempt to read .htaccess files in the file system. When this directive is set to All, then any directive which has the .htaccess Context is allowed in .htaccess files.'\n  desc 'check', 'Locate the Apache httpd.conf file.\n\nOpen the httpd.conf file with an editor such as notepad, and search for the following uncommented directive: Directory\n\nFor every root directory entry (i.e. <Directory />) ensure the following entry exists after it:\n\nAllowOverride None\n\nIf the statement above is not found in the root directory statement, this is a finding. If Allow directives are included in the root directory statement, this is a finding. If the root directory statement is not found at all, this is a finding.'\n  desc 'fix', 'Add the following after the Directory directive:\n\nAllowOverride None'\n  impact 0.5\n  ref 'DPMS Target Apache Instance 2.x'\n  tag check_id: 'C-33834r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-26393'\n  tag rid: 'SV-33237r1_rule'\n  tag stig_id: 'WA00547 W22'\n  tag gtitle: 'WA00547'\n  tag fix_id: 'F-29500r1_fix'\n  tag 'documentable'\n  tag responsibility: 'Web Administrator'\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Apache_2-2_Server_WIN_STIG_V1R13/controls/SV-33237.rb"},"title":"The ability to override the access configuration for the OS root directory must be disabled.","desc":"The Apache OverRide directive allows for .htaccess files to be used to override much of the configuration, including authentication, handling of document types, auto generated indexes, access control, and options. When the server finds an .htaccess file (as specified by AccessFileName) it needs to know which directives declared in that file can override earlier access information. When this directive is set to None, then .htaccess files are completely ignored. In this case, the server will not even attempt to read .htaccess files in the file system. When this directive is set to All, then any directive which has the .htaccess Context is allowed in .htaccess files.","descriptions":{"default":"The Apache OverRide directive allows for .htaccess files to be used to override much of the configuration, including authentication, handling of document types, auto generated indexes, access control, and options. When the server finds an .htaccess file (as specified by AccessFileName) it needs to know which directives declared in that file can override earlier access information. When this directive is set to None, then .htaccess files are completely ignored. In this case, the server will not even attempt to read .htaccess files in the file system. When this directive is set to All, then any directive which has the .htaccess Context is allowed in .htaccess files.","check":"Locate the Apache httpd.conf file.\n\nOpen the httpd.conf file with an editor such as notepad, and search for the following uncommented directive: Directory\n\nFor every root directory entry (i.e. <Directory />) ensure the following entry exists after it:\n\nAllowOverride None\n\nIf the statement above is not found in the root directory statement, this is a finding. If Allow directives are included in the root directory statement, this is a finding. If the root directory statement is not found at all, this is a finding.","fix":"Add the following after the Directory directive:\n\nAllowOverride None"},"impact":0.5,"refs":[{"ref":"DPMS Target Apache Instance 2.x"}],"tags":{"check_id":"C-33834r1_chk","severity":"medium","gid":"V-26393","rid":"SV-33237r1_rule","stig_id":"WA00547 W22","gtitle":"WA00547","fix_id":"F-29500r1_fix","documentable":null,"responsibility":"Web Administrator"}},{"id":"SV-33238","code":"control 'SV-33238' do\n  title 'HTTP request methods must be limited.'\n  desc 'The HTTP 1.1 protocol supports several request methods which are rarely used and potentially high risk. For example, methods such as PUT and DELETE are rarely used and should be disabled in keeping with the primary security principal of minimize features and options. Also since the usage of these methods is typically to modify resources on the web server, they should be explicitly disallowed. For normal web server operation, you will typically need to allow only the GET, HEAD and POST request methods. This will allow for downloading of web pages and submitting information to web forms. The OPTIONS request method will also be allowed as it is used to request which HTTP request methods are allowed.'\n  desc 'check', 'Note: If HTTP commands (GET, PUT, POST, DELETE) are not being used and the server is solely configured as a proxy server, this is Not Applicable.\nLocate the Apache httpd.conf file.\n\nOpen the httpd.conf file with an editor such as notepad, and search for the following uncommented directive: Directory\n\nFor every enabled Directory directive (except root), ensure the following entry exists:\n\nOrder allow,deny\n\n<LimitExcept GET POST OPTIONS>\nDeny from all\n</LimitExcept>\n\nIf the statement above is found in the root directory statement (i.e. <Directory />), this is a finding. If the statement above is found enabled but without the appropriate LimitExcept or Order statement, this is a finding. If the statement is not found at all inside an enabled Directory directive, this is a finding.\n\nNote: If the LimitExcept statement above is operationally limiting. This should be explicitly documented with the Web Manager, at which point this can be considered not a finding.'\n  desc 'fix', 'Add the following to all enabled Directory directives except root:\n\nOrder allow,deny\n<LimitExcept GET POST OPTIONS>\n     Deny from all\n</LimitExcept>'\n  impact 0.5\n  ref 'DPMS Target Apache Instance 2.x'\n  tag check_id: 'C-33835r2_chk'\n  tag severity: 'medium'\n  tag gid: 'V-26396'\n  tag rid: 'SV-33238r2_rule'\n  tag stig_id: 'WA00565 W22'\n  tag gtitle: 'WA00565'\n  tag fix_id: 'F-29501r1_fix'\n  tag 'documentable'\n  tag responsibility: 'Web Administrator'\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Apache_2-2_Server_WIN_STIG_V1R13/controls/SV-33238.rb"},"title":"HTTP request methods must be limited.","desc":"The HTTP 1.1 protocol supports several request methods which are rarely used and potentially high risk. For example, methods such as PUT and DELETE are rarely used and should be disabled in keeping with the primary security principal of minimize features and options. Also since the usage of these methods is typically to modify resources on the web server, they should be explicitly disallowed. For normal web server operation, you will typically need to allow only the GET, HEAD and POST request methods. This will allow for downloading of web pages and submitting information to web forms. The OPTIONS request method will also be allowed as it is used to request which HTTP request methods are allowed.","descriptions":{"default":"The HTTP 1.1 protocol supports several request methods which are rarely used and potentially high risk. For example, methods such as PUT and DELETE are rarely used and should be disabled in keeping with the primary security principal of minimize features and options. Also since the usage of these methods is typically to modify resources on the web server, they should be explicitly disallowed. For normal web server operation, you will typically need to allow only the GET, HEAD and POST request methods. This will allow for downloading of web pages and submitting information to web forms. The OPTIONS request method will also be allowed as it is used to request which HTTP request methods are allowed.","check":"Note: If HTTP commands (GET, PUT, POST, DELETE) are not being used and the server is solely configured as a proxy server, this is Not Applicable.\nLocate the Apache httpd.conf file.\n\nOpen the httpd.conf file with an editor such as notepad, and search for the following uncommented directive: Directory\n\nFor every enabled Directory directive (except root), ensure the following entry exists:\n\nOrder allow,deny\n\n<LimitExcept GET POST OPTIONS>\nDeny from all\n</LimitExcept>\n\nIf the statement above is found in the root directory statement (i.e. <Directory />), this is a finding. If the statement above is found enabled but without the appropriate LimitExcept or Order statement, this is a finding. If the statement is not found at all inside an enabled Directory directive, this is a finding.\n\nNote: If the LimitExcept statement above is operationally limiting. This should be explicitly documented with the Web Manager, at which point this can be considered not a finding.","fix":"Add the following to all enabled Directory directives except root:\n\nOrder allow,deny\n<LimitExcept GET POST OPTIONS>\n     Deny from all\n</LimitExcept>"},"impact":0.5,"refs":[{"ref":"DPMS Target Apache Instance 2.x"}],"tags":{"check_id":"C-33835r2_chk","severity":"medium","gid":"V-26396","rid":"SV-33238r2_rule","stig_id":"WA00565 W22","gtitle":"WA00565","fix_id":"F-29501r1_fix","documentable":null,"responsibility":"Web Administrator"}},{"id":"SV-36489","code":"control 'SV-36489' do\n  title 'The service account used to run the web service must have its password changed at least annually.'\n  desc 'Normally, a service account is established for the web service to run under rather than permitting it to run as part of the local system. The password on such accounts must be changed at least annually. If the password is not changed periodically, the potential for a malicious party to gain access to the web services account is greatly enhanced.'\n  desc 'check', 'Interview the ISSO and confirm with the SA, the Web Manager, or the individual in an equivalent role. Ask for the web server’s documented procedures and processes.\n\nVerify the documented procedures and processes identify web server related service accounts, which services are related to web server operations and include a policy requiring service account passwords to be change at least annually.\nIf the documented procedures and processes do not identify web server related service accounts, which services are related to web server operations and include a policy requiring service account passwords to be change at least annually, this is a finding.'\n  desc 'fix', 'Ensure that the service account IDs used to run the web server and sites are documented and have their passwords changed at least annually.'\n  impact 0.5\n  ref 'DPMS Target Apache Instance 2.x'\n  tag check_id: 'C-33732r3_chk'\n  tag severity: 'medium'\n  tag gid: 'V-2235'\n  tag rid: 'SV-36489r4_rule'\n  tag stig_id: 'WG060 W22'\n  tag gtitle: 'WG060'\n  tag fix_id: 'F-29367r2_fix'\n  tag 'documentable'\n  tag responsibility: 'Web Administrator'\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Apache_2-2_Server_WIN_STIG_V1R13/controls/SV-36489.rb"},"title":"The service account used to run the web service must have its password changed at least annually.","desc":"Normally, a service account is established for the web service to run under rather than permitting it to run as part of the local system. The password on such accounts must be changed at least annually. If the password is not changed periodically, the potential for a malicious party to gain access to the web services account is greatly enhanced.","descriptions":{"default":"Normally, a service account is established for the web service to run under rather than permitting it to run as part of the local system. The password on such accounts must be changed at least annually. If the password is not changed periodically, the potential for a malicious party to gain access to the web services account is greatly enhanced.","check":"Interview the ISSO and confirm with the SA, the Web Manager, or the individual in an equivalent role. Ask for the web server’s documented procedures and processes.\n\nVerify the documented procedures and processes identify web server related service accounts, which services are related to web server operations and include a policy requiring service account passwords to be change at least annually.\nIf the documented procedures and processes do not identify web server related service accounts, which services are related to web server operations and include a policy requiring service account passwords to be change at least annually, this is a finding.","fix":"Ensure that the service account IDs used to run the web server and sites are documented and have their passwords changed at least annually."},"impact":0.5,"refs":[{"ref":"DPMS Target Apache Instance 2.x"}],"tags":{"check_id":"C-33732r3_chk","severity":"medium","gid":"V-2235","rid":"SV-36489r4_rule","stig_id":"WG060 W22","gtitle":"WG060","fix_id":"F-29367r2_fix","documentable":null,"responsibility":"Web Administrator"}},{"id":"SV-36509","code":"control 'SV-36509' do\n  title 'Administrators must be the only users allowed access to the directory tree, the shell, or other operating system functions and utilities.'\n  desc 'As a rule, accounts on a web server are to be kept to a minimum. Only administrators, web managers, developers, auditors, and web authors require accounts on the machine hosting the web server. This is in addition to the anonymous web user account. The resources to which these accounts have access must also be closely monitored and controlled. Only the SA needs access to all the system’s capabilities, while the web administrator and associated staff require access and control of the web content and web server configuration files. The anonymous web user account must not have access to system resources as that account could then control the server.'\n  desc 'check', 'Windows 2008 servers may be impacted by this check. If the SA or the web administrator can demonstrate that this requirement will adversely affect the web server by providing vendor documentation, this check is not applicable.\n\nSearch all of the system’s hard drives for the command.com and cmd.exe files. The allowed permissions on these files are:\n\nSystem Full Control\nAdministrators Full Control\n\nExamine account access and any group membership access to these files.\n\nIf any non-administrator account, group membership, or service ID has any access to any command.com or cmd.exe files and the access is documented as mission critical, this is not a finding.\n\nExamine access to operating system configuration files, scripts, utilities, privileges, and functions.\n\nIf any non-administrator account, group membership, or service ID has any access to any of these operating system components and the access is documented as mission critical, this is not a finding.\n\nIf any non-administrator account, group membership, or service ID has undocumented access to any listed file or operating system component, this is a finding.'\n  desc 'fix', 'Ensure non-administrators are not allowed access to the directory tree, the shell, or other operating system functions and utilities.'\n  impact 0.7\n  ref 'DPMS Target Apache Instance 2.x'\n  tag check_id: 'C-35610r1_chk'\n  tag severity: 'high'\n  tag gid: 'V-2247'\n  tag rid: 'SV-36509r1_rule'\n  tag stig_id: 'WG200 W22'\n  tag gtitle: 'WG200'\n  tag fix_id: 'F-30844r1_fix'\n  tag 'documentable'\n  tag responsibility: 'System Administrator'\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Apache_2-2_Server_WIN_STIG_V1R13/controls/SV-36509.rb"},"title":"Administrators must be the only users allowed access to the directory tree, the shell, or other operating system functions and utilities.","desc":"As a rule, accounts on a web server are to be kept to a minimum. Only administrators, web managers, developers, auditors, and web authors require accounts on the machine hosting the web server. This is in addition to the anonymous web user account. The resources to which these accounts have access must also be closely monitored and controlled. Only the SA needs access to all the system’s capabilities, while the web administrator and associated staff require access and control of the web content and web server configuration files. The anonymous web user account must not have access to system resources as that account could then control the server.","descriptions":{"default":"As a rule, accounts on a web server are to be kept to a minimum. Only administrators, web managers, developers, auditors, and web authors require accounts on the machine hosting the web server. This is in addition to the anonymous web user account. The resources to which these accounts have access must also be closely monitored and controlled. Only the SA needs access to all the system’s capabilities, while the web administrator and associated staff require access and control of the web content and web server configuration files. The anonymous web user account must not have access to system resources as that account could then control the server.","check":"Windows 2008 servers may be impacted by this check. If the SA or the web administrator can demonstrate that this requirement will adversely affect the web server by providing vendor documentation, this check is not applicable.\n\nSearch all of the system’s hard drives for the command.com and cmd.exe files. The allowed permissions on these files are:\n\nSystem Full Control\nAdministrators Full Control\n\nExamine account access and any group membership access to these files.\n\nIf any non-administrator account, group membership, or service ID has any access to any command.com or cmd.exe files and the access is documented as mission critical, this is not a finding.\n\nExamine access to operating system configuration files, scripts, utilities, privileges, and functions.\n\nIf any non-administrator account, group membership, or service ID has any access to any of these operating system components and the access is documented as mission critical, this is not a finding.\n\nIf any non-administrator account, group membership, or service ID has undocumented access to any listed file or operating system component, this is a finding.","fix":"Ensure non-administrators are not allowed access to the directory tree, the shell, or other operating system functions and utilities."},"impact":0.7,"refs":[{"ref":"DPMS Target Apache Instance 2.x"}],"tags":{"check_id":"C-35610r1_chk","severity":"high","gid":"V-2247","rid":"SV-36509r1_rule","stig_id":"WG200 W22","gtitle":"WG200","fix_id":"F-30844r1_fix","documentable":null,"responsibility":"System Administrator"}},{"id":"SV-36561","code":"control 'SV-36561' do\n  title 'The web server’s htpasswd files (if present) must reflect proper ownership and permissions.'\n  desc 'In addition to OS restrictions, access rights to files and directories can be set on a web site using the web server software.  That is, in addition to allowing or denying all access rights, a rule can be specified that allows or denies partial access rights.  For example, users can be given read-only access rights to files, to view the information but not change the files.\n\nThis check verifies that the htpasswd file is only accessible by system administrators or web managers, with the account running the web service having group permissions of read and execute.  Htpasswd is a utility used by Netscape and Apache to provide for password access to designated web sites.  I'\n  desc 'check', 'Search for the htpasswd.exe file. Right click the htpasswd file, if present. Select the Properties window, select the Security tab.\n\nExamine the access rights for the file. The SA or Web Manager account should have Full Control, the account running the web service should have read and execute permissions. \n\nIf entries other than Administrators, Web Manager account, or System are present, this is a finding.'\n  desc 'fix', 'The SA or Web Manager account should have Full Control, the account running the web service should have read and execute permissions to the htpasswd file.'\n  impact 0.5\n  ref 'DPMS Target Apache Instance 2.x'\n  tag check_id: 'C-35666r4_chk'\n  tag severity: 'medium'\n  tag gid: 'V-2255'\n  tag rid: 'SV-36561r2_rule'\n  tag stig_id: 'WG270 W22'\n  tag gtitle: 'WG270'\n  tag fix_id: 'F-30901r1_fix'\n  tag 'documentable'\n  tag responsibility: 'Web Administrator'\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Apache_2-2_Server_WIN_STIG_V1R13/controls/SV-36561.rb"},"title":"The web server’s htpasswd files (if present) must reflect proper ownership and permissions.","desc":"In addition to OS restrictions, access rights to files and directories can be set on a web site using the web server software.  That is, in addition to allowing or denying all access rights, a rule can be specified that allows or denies partial access rights.  For example, users can be given read-only access rights to files, to view the information but not change the files.\n\nThis check verifies that the htpasswd file is only accessible by system administrators or web managers, with the account running the web service having group permissions of read and execute.  Htpasswd is a utility used by Netscape and Apache to provide for password access to designated web sites.  I","descriptions":{"default":"In addition to OS restrictions, access rights to files and directories can be set on a web site using the web server software.  That is, in addition to allowing or denying all access rights, a rule can be specified that allows or denies partial access rights.  For example, users can be given read-only access rights to files, to view the information but not change the files.\n\nThis check verifies that the htpasswd file is only accessible by system administrators or web managers, with the account running the web service having group permissions of read and execute.  Htpasswd is a utility used by Netscape and Apache to provide for password access to designated web sites.  I","check":"Search for the htpasswd.exe file. Right click the htpasswd file, if present. Select the Properties window, select the Security tab.\n\nExamine the access rights for the file. The SA or Web Manager account should have Full Control, the account running the web service should have read and execute permissions. \n\nIf entries other than Administrators, Web Manager account, or System are present, this is a finding.","fix":"The SA or Web Manager account should have Full Control, the account running the web service should have read and execute permissions to the htpasswd file."},"impact":0.5,"refs":[{"ref":"DPMS Target Apache Instance 2.x"}],"tags":{"check_id":"C-35666r4_chk","severity":"medium","gid":"V-2255","rid":"SV-36561r2_rule","stig_id":"WG270 W22","gtitle":"WG270","fix_id":"F-30901r1_fix","documentable":null,"responsibility":"Web Administrator"}},{"id":"SV-36607","code":"control 'SV-36607' do\n  title 'The web server, although started by superuser or privileged account, must run using a non-privileged account.'\n  desc 'Running the web server with excessive privileges presents an increased risk to the web server. In the event the web server’s services are compromised, the context by which the web server is running will determine the amount of damage that may be caused by the attacker. If the web server is run as an administrator or as an equivalent account, the attacker will gain administrative access through the web server. If, on the other hand, the web server is running with least privilege required to function, the capabilities of the attacker will be greatly decreased.'\n  desc 'check', 'Work with the web administrator to determine the account assigned to the web server service. Once this is determined, right click on My Computer and select Manage. Then select Configuration, followed by Local Users and Groups. \n\nExamine the account that is used to run the web server service and determine the group affiliations. The Apache server account may be a member of the users group and in some cases the site may have created a separate group for the apache web server. Both of these are not findings. \n\nIf the user account assigned to the web server service is a member of any other group than users or the created web server group, the SA will need to provide justification showing that these permissions are necessary for the function and operation of the web server.\n\nNOTE: The Apache account needs to have the following rights, which would not be a finding: Act as part of the Operating System & Log on as a Service.'\n  desc 'fix', 'Configure the web server to run using a non-privileged account.'\n  impact 0.5\n  ref 'DPMS Target Apache Instance 2.x'\n  tag check_id: 'C-33748r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-13619'\n  tag rid: 'SV-36607r1_rule'\n  tag stig_id: 'WG275 W22'\n  tag gtitle: 'WG275'\n  tag fix_id: 'F-29384r1_fix'\n  tag 'documentable'\n  tag responsibility: 'System Administrator'\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Apache_2-2_Server_WIN_STIG_V1R13/controls/SV-36607.rb"},"title":"The web server, although started by superuser or privileged account, must run using a non-privileged account.","desc":"Running the web server with excessive privileges presents an increased risk to the web server. In the event the web server’s services are compromised, the context by which the web server is running will determine the amount of damage that may be caused by the attacker. If the web server is run as an administrator or as an equivalent account, the attacker will gain administrative access through the web server. If, on the other hand, the web server is running with least privilege required to function, the capabilities of the attacker will be greatly decreased.","descriptions":{"default":"Running the web server with excessive privileges presents an increased risk to the web server. In the event the web server’s services are compromised, the context by which the web server is running will determine the amount of damage that may be caused by the attacker. If the web server is run as an administrator or as an equivalent account, the attacker will gain administrative access through the web server. If, on the other hand, the web server is running with least privilege required to function, the capabilities of the attacker will be greatly decreased.","check":"Work with the web administrator to determine the account assigned to the web server service. Once this is determined, right click on My Computer and select Manage. Then select Configuration, followed by Local Users and Groups. \n\nExamine the account that is used to run the web server service and determine the group affiliations. The Apache server account may be a member of the users group and in some cases the site may have created a separate group for the apache web server. Both of these are not findings. \n\nIf the user account assigned to the web server service is a member of any other group than users or the created web server group, the SA will need to provide justification showing that these permissions are necessary for the function and operation of the web server.\n\nNOTE: The Apache account needs to have the following rights, which would not be a finding: Act as part of the Operating System & Log on as a Service.","fix":"Configure the web server to run using a non-privileged account."},"impact":0.5,"refs":[{"ref":"DPMS Target Apache Instance 2.x"}],"tags":{"check_id":"C-33748r1_chk","severity":"medium","gid":"V-13619","rid":"SV-36607r1_rule","stig_id":"WG275 W22","gtitle":"WG275","fix_id":"F-29384r1_fix","documentable":null,"responsibility":"System Administrator"}},{"id":"SV-40826","code":"control 'SV-40826' do\n  title 'Remote authors or content providers must have all files scanned for malware before uploading files to the Document Root directory.'\n  desc 'Remote web authors should not be able to upload files to the DocumentRoot directory structure without virus checking and checking for malicious or mobile code. A remote web user whose agency has a Memorandum of Agreement (MOA) with the hosting agency and has submitted a DoD form 2875 (System Authorization Access Request (SAAR)) or an equivalent document will be allowed to post files to a temporary location on the server. All posted files to this temporary location will be scanned for viruses and content checked for malicious or mobile code. Only files free of viruses and malicious or mobile code will be posted to the appropriate Document Root directory.'\n  desc 'check', 'Remote web authors should not be able to upload files to the Document Root directory structure without virus checking and checking for malicious or mobile code. \n\nQuery the SA to determine if there is anti-virus software active on the server with auto-protect enabled, or if there is another process in place for the scanning of files being posted by remote authors. \n\nIf there is no virus software on the system with auto-protect enabled, or if there is not a process in place to ensure all files being posted are being virus scanned before being saved to the document root, this is a finding.'\n  desc 'fix', 'Install anti-virus software on the system and set it to automatically scan new files that are introduced to the web server.'\n  impact 0.5\n  ref 'DPMS Target Apache Instance 2.x'\n  tag check_id: 'C-33747r1_chk'\n  tag severity: 'medium'\n  tag gid: 'V-13687'\n  tag rid: 'SV-40826r1_rule'\n  tag stig_id: 'WG237 W22'\n  tag gtitle: 'WG237'\n  tag fix_id: 'F-29382r1_fix'\n  tag 'documentable'\n  tag responsibility: ['Web Administrator', 'System Administrator']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Apache_2-2_Server_WIN_STIG_V1R13/controls/SV-40826.rb"},"title":"Remote authors or content providers must have all files scanned for malware before uploading files to the Document Root directory.","desc":"Remote web authors should not be able to upload files to the DocumentRoot directory structure without virus checking and checking for malicious or mobile code. A remote web user whose agency has a Memorandum of Agreement (MOA) with the hosting agency and has submitted a DoD form 2875 (System Authorization Access Request (SAAR)) or an equivalent document will be allowed to post files to a temporary location on the server. All posted files to this temporary location will be scanned for viruses and content checked for malicious or mobile code. Only files free of viruses and malicious or mobile code will be posted to the appropriate Document Root directory.","descriptions":{"default":"Remote web authors should not be able to upload files to the DocumentRoot directory structure without virus checking and checking for malicious or mobile code. A remote web user whose agency has a Memorandum of Agreement (MOA) with the hosting agency and has submitted a DoD form 2875 (System Authorization Access Request (SAAR)) or an equivalent document will be allowed to post files to a temporary location on the server. All posted files to this temporary location will be scanned for viruses and content checked for malicious or mobile code. Only files free of viruses and malicious or mobile code will be posted to the appropriate Document Root directory.","check":"Remote web authors should not be able to upload files to the Document Root directory structure without virus checking and checking for malicious or mobile code. \n\nQuery the SA to determine if there is anti-virus software active on the server with auto-protect enabled, or if there is another process in place for the scanning of files being posted by remote authors. \n\nIf there is no virus software on the system with auto-protect enabled, or if there is not a process in place to ensure all files being posted are being virus scanned before being saved to the document root, this is a finding.","fix":"Install anti-virus software on the system and set it to automatically scan new files that are introduced to the web server."},"impact":0.5,"refs":[{"ref":"DPMS Target Apache Instance 2.x"}],"tags":{"check_id":"C-33747r1_chk","severity":"medium","gid":"V-13687","rid":"SV-40826r1_rule","stig_id":"WG237 W22","gtitle":"WG237","fix_id":"F-29382r1_fix","documentable":null,"responsibility":["Web Administrator","System Administrator"]}},{"id":"SV-6881","code":"control 'SV-6881' do\n  title 'The access control files are owned by a privileged web server account.'\n  desc 'This check verifies that the key web server system configuration files are owned by the SA or Web Manager controlled account. These same files which control the configuration of the web server, and thus its behavior, must also be accessible by the account which runs the web service. If these files are altered by a malicious user, the web server would no longer be under the control of its managers and owners; properties in the web server configuration could be altered to compromise the entire server platform.'\n  desc 'check', 'If .htaccess or the .htaccess.html files are in use, the SA or Web Manager account may have Full Control, the non-privileged web server account running the web service should have read and execute permissions. \n\nRight click the .htaccess.html  file, if present. Select the Properties window, select the Security tab. Examine the access rights for the file.  The SA or Web Manager account should have Full Control, the account running the web service should have read and execute permissions.\n\nIf entries other than Administrators, the Web Manager accounts, or System for any degree of access are present, this is a finding.'\n  desc 'fix', 'The site needs to ensure that the owner should be the non-privileged web server account or equivalent which runs the web service; however, the group permissions represent those of the user accessing the web site that must execute the directives in .htacces.'\n  impact 0.5\n  ref 'DPMS Target Apache Instance 2.x'\n  tag check_id: 'C-2679r2_chk'\n  tag severity: 'medium'\n  tag gid: 'V-2256'\n  tag rid: 'SV-6881r1_rule'\n  tag stig_id: 'WG280'\n  tag gtitle: 'WG280'\n  tag fix_id: 'F-6762r1_fix'\n  tag 'documentable'\n  tag responsibility: ['System Administrator', 'Web Administrator']\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Apache_2-2_Server_WIN_STIG_V1R13/controls/SV-6881.rb"},"title":"The access control files are owned by a privileged web server account.","desc":"This check verifies that the key web server system configuration files are owned by the SA or Web Manager controlled account. These same files which control the configuration of the web server, and thus its behavior, must also be accessible by the account which runs the web service. If these files are altered by a malicious user, the web server would no longer be under the control of its managers and owners; properties in the web server configuration could be altered to compromise the entire server platform.","descriptions":{"default":"This check verifies that the key web server system configuration files are owned by the SA or Web Manager controlled account. These same files which control the configuration of the web server, and thus its behavior, must also be accessible by the account which runs the web service. If these files are altered by a malicious user, the web server would no longer be under the control of its managers and owners; properties in the web server configuration could be altered to compromise the entire server platform.","check":"If .htaccess or the .htaccess.html files are in use, the SA or Web Manager account may have Full Control, the non-privileged web server account running the web service should have read and execute permissions. \n\nRight click the .htaccess.html  file, if present. Select the Properties window, select the Security tab. Examine the access rights for the file.  The SA or Web Manager account should have Full Control, the account running the web service should have read and execute permissions.\n\nIf entries other than Administrators, the Web Manager accounts, or System for any degree of access are present, this is a finding.","fix":"The site needs to ensure that the owner should be the non-privileged web server account or equivalent which runs the web service; however, the group permissions represent those of the user accessing the web site that must execute the directives in .htacces."},"impact":0.5,"refs":[{"ref":"DPMS Target Apache Instance 2.x"}],"tags":{"check_id":"C-2679r2_chk","severity":"medium","gid":"V-2256","rid":"SV-6881r1_rule","stig_id":"WG280","gtitle":"WG280","fix_id":"F-6762r1_fix","documentable":null,"responsibility":["System Administrator","Web Administrator"]}},{"id":"SV-75161","code":"control 'SV-75161' do\n  title 'The web server must remove all export ciphers from the cipher suite.'\n  desc 'During the initial setup of a Transport Layer Security (TLS) connection to the web server, the client sends a list of supported cipher suites in order of preference.  The web server will reply with the cipher suite it will use for communication from the client list.  If an attacker can intercept the submission of cipher suites to the web server and place, as the preferred cipher suite, a weak export suite, the encryption used for the session becomes easy for the attacker to break, often within minutes to hours.'\n  desc 'check', 'Locate the Apache httpd.conf and ssl.conf file if available.\nOpen the httpd.conf and ssl.conf file with an editor and search for the following uncommented directive: SSLCipherSuite\nFor all enabled SSLCipherSuite directives, ensure the cipher specification string contains the kill cipher from list option for all export cipher suites, i.e., !EXPORT, which may be abbreviated !EXP.  If the SSLCipherSuite directive does not contain !EXPORT or there are no enabled SSLCipherSuite directives, this is a finding.'\n  desc 'fix', 'Update the cipher specification string for all enabled SSLCipherSuite directives to include !EXPORT.'\n  impact 0.5\n  ref 'DPMS Target Apache Instance 2.x'\n  tag check_id: 'C-61653r2_chk'\n  tag severity: 'medium'\n  tag gid: 'V-60709'\n  tag rid: 'SV-75161r1_rule'\n  tag stig_id: 'WG345 W22'\n  tag gtitle: 'WG345'\n  tag fix_id: 'F-66389r1_fix'\n  tag 'documentable'\n  tag responsibility: 'Web Administrator'\nend","source_location":{"line":1,"ref":"../inspec_stubs/U_Apache_2-2_Server_WIN_STIG_V1R13/controls/SV-75161.rb"},"title":"The web server must remove all export ciphers from the cipher suite.","desc":"During the initial setup of a Transport Layer Security (TLS) connection to the web server, the client sends a list of supported cipher suites in order of preference.  The web server will reply with the cipher suite it will use for communication from the client list.  If an attacker can intercept the submission of cipher suites to the web server and place, as the preferred cipher suite, a weak export suite, the encryption used for the session becomes easy for the attacker to break, often within minutes to hours.","descriptions":{"default":"During the initial setup of a Transport Layer Security (TLS) connection to the web server, the client sends a list of supported cipher suites in order of preference.  The web server will reply with the cipher suite it will use for communication from the client list.  If an attacker can intercept the submission of cipher suites to the web server and place, as the preferred cipher suite, a weak export suite, the encryption used for the session becomes easy for the attacker to break, often within minutes to hours.","check":"Locate the Apache httpd.conf and ssl.conf file if available.\nOpen the httpd.conf and ssl.conf file with an editor and search for the following uncommented directive: SSLCipherSuite\nFor all enabled SSLCipherSuite directives, ensure the cipher specification string contains the kill cipher from list option for all export cipher suites, i.e., !EXPORT, which may be abbreviated !EXP.  If the SSLCipherSuite directive does not contain !EXPORT or there are no enabled SSLCipherSuite directives, this is a finding.","fix":"Update the cipher specification string for all enabled SSLCipherSuite directives to include !EXPORT."},"impact":0.5,"refs":[{"ref":"DPMS Target Apache Instance 2.x"}],"tags":{"check_id":"C-61653r2_chk","severity":"medium","gid":"V-60709","rid":"SV-75161r1_rule","stig_id":"WG345 W22","gtitle":"WG345","fix_id":"F-66389r1_fix","documentable":null,"responsibility":"Web Administrator"}}],"groups":[{"id":"controls/SV-32880.rb","title":null,"controls":["SV-32880"]},{"id":"controls/SV-32980.rb","title":null,"controls":["SV-32980"]},{"id":"controls/SV-32987.rb","title":null,"controls":["SV-32987"]},{"id":"controls/SV-32998.rb","title":null,"controls":["SV-32998"]},{"id":"controls/SV-33001.rb","title":null,"controls":["SV-33001"]},{"id":"controls/SV-33003.rb","title":null,"controls":["SV-33003"]},{"id":"controls/SV-33004.rb","title":null,"controls":["SV-33004"]},{"id":"controls/SV-33006.rb","title":null,"controls":["SV-33006"]},{"id":"controls/SV-33008.rb","title":null,"controls":["SV-33008"]},{"id":"controls/SV-33009.rb","title":null,"controls":["SV-33009"]},{"id":"controls/SV-33010.rb","title":null,"controls":["SV-33010"]},{"id":"controls/SV-33011.rb","title":null,"controls":["SV-33011"]},{"id":"controls/SV-33012.rb","title":null,"controls":["SV-33012"]},{"id":"controls/SV-33013.rb","title":null,"controls":["SV-33013"]},{"id":"controls/SV-33014.rb","title":null,"controls":["SV-33014"]},{"id":"controls/SV-33015.rb","title":null,"controls":["SV-33015"]},{"id":"controls/SV-33016.rb","title":null,"controls":["SV-33016"]},{"id":"controls/SV-33017.rb","title":null,"controls":["SV-33017"]},{"id":"controls/SV-33044.rb","title":null,"controls":["SV-33044"]},{"id":"controls/SV-33048.rb","title":null,"controls":["SV-33048"]},{"id":"controls/SV-33061.rb","title":null,"controls":["SV-33061"]},{"id":"controls/SV-33062.rb","title":null,"controls":["SV-33062"]},{"id":"controls/SV-33065.rb","title":null,"controls":["SV-33065"]},{"id":"controls/SV-33068.rb","title":null,"controls":["SV-33068"]},{"id":"controls/SV-33070.rb","title":null,"controls":["SV-33070"]},{"id":"controls/SV-33072.rb","title":null,"controls":["SV-33072"]},{"id":"controls/SV-33078.rb","title":null,"controls":["SV-33078"]},{"id":"controls/SV-33082.rb","title":null,"controls":["SV-33082"]},{"id":"controls/SV-33084.rb","title":null,"controls":["SV-33084"]},{"id":"controls/SV-33087.rb","title":null,"controls":["SV-33087"]},{"id":"controls/SV-33089.rb","title":null,"controls":["SV-33089"]},{"id":"controls/SV-33092.rb","title":null,"controls":["SV-33092"]},{"id":"controls/SV-33095.rb","title":null,"controls":["SV-33095"]},{"id":"controls/SV-33098.rb","title":null,"controls":["SV-33098"]},{"id":"controls/SV-33167.rb","title":null,"controls":["SV-33167"]},{"id":"controls/SV-33169.rb","title":null,"controls":["SV-33169"]},{"id":"controls/SV-33171.rb","title":null,"controls":["SV-33171"]},{"id":"controls/SV-33173.rb","title":null,"controls":["SV-33173"]},{"id":"controls/SV-33175.rb","title":null,"controls":["SV-33175"]},{"id":"controls/SV-33177.rb","title":null,"controls":["SV-33177"]},{"id":"controls/SV-33178.rb","title":null,"controls":["SV-33178"]},{"id":"controls/SV-33180.rb","title":null,"controls":["SV-33180"]},{"id":"controls/SV-33182.rb","title":null,"controls":["SV-33182"]},{"id":"controls/SV-33183.rb","title":null,"controls":["SV-33183"]},{"id":"controls/SV-33184.rb","title":null,"controls":["SV-33184"]},{"id":"controls/SV-33185.rb","title":null,"controls":["SV-33185"]},{"id":"controls/SV-33225.rb","title":null,"controls":["SV-33225"]},{"id":"controls/SV-33237.rb","title":null,"controls":["SV-33237"]},{"id":"controls/SV-33238.rb","title":null,"controls":["SV-33238"]},{"id":"controls/SV-36489.rb","title":null,"controls":["SV-36489"]},{"id":"controls/SV-36509.rb","title":null,"controls":["SV-36509"]},{"id":"controls/SV-36561.rb","title":null,"controls":["SV-36561"]},{"id":"controls/SV-36607.rb","title":null,"controls":["SV-36607"]},{"id":"controls/SV-40826.rb","title":null,"controls":["SV-40826"]},{"id":"controls/SV-6881.rb","title":null,"controls":["SV-6881"]},{"id":"controls/SV-75161.rb","title":null,"controls":["SV-75161"]}],"name":"APACHE_SERVER_2.2_WINDOWS","title":null,"maintainer":null,"copyright":null,"copyright_email":null,"license":null,"summary":null,"description":null,"version":"1.0.0","supports":[],"depends":[],"inspec_version":null,"inputs":[],"sha256":"8be50cc5c94bb136b2a9cb5344428ea3eaf2adb666dc00888a092c9fc624f6c1","status_message":"","status":"loaded","generator":{"name":"inspec","version":"6.6.0"}}
