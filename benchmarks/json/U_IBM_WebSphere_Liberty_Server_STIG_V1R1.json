{"controls":[{"id":"SV-250322","code":"control 'SV-250322' do\n  title 'Maximum in-memory session count must be set according to application requirements.'\n  desc '<0> [object Object]'\n  desc 'check', 'Review the System Security plan to determine the maximum number of concurrent sessions allowed. This is a per user setting and must be defined by the application admins.\n\nAs a privileged user with access to the server.xml file, review file content and identify the \"maxInMemorySessionCount\" and the allowOverflow settings.\n\nEXAMPLE:\ngrep -i maxInMemorySessionCount server.xml\n\n<httpSession maxInMemorySessionCount=\"xxxx\" allowOverflow=\"false\" /> \n\nIf maxInMemorySessionCount is not set in server.xml according to the settings defined in the system security plan or if allowOverflow=\"true\", this is a finding.'\n  desc 'fix', 'To limit the max number of concurrent sessions available, the ${server.config.dir}/server.xml must be configured with maxInMemorySessionCount set according to system security plan and allowOverflow=\"false\".\n\nEXAMPLE:\n<httpSession maxInMemorySessionCount=\"5\" allowOverflow=\"false\" />'\n  impact 0.5\n  ref 'DPMS Target IBM WebSphere Liberty Server'\n  tag check_id: 'C-53757r795017_chk'\n  tag severity: 'medium'\n  tag gid: 'V-250322'\n  tag rid: 'SV-250322r795019_rule'\n  tag stig_id: 'IBMW-LS-000010'\n  tag gtitle: 'SRG-APP-000001-AS-000001'\n  tag fix_id: 'F-53711r795018_fix'\n  tag cci: ['CCI-000054']\n  tag nist: ['AC-10']\nend","source_location":{"line":1,"ref":"U_IBM_WebSphere_Liberty_Server_STIG_V1R1/controls/SV-250322.rb"},"title":"Maximum in-memory session count must be set according to application requirements.","desc":"<0> [object Object]","descriptions":{"default":"<0> [object Object]","check":"Review the System Security plan to determine the maximum number of concurrent sessions allowed. This is a per user setting and must be defined by the application admins.\n\nAs a privileged user with access to the server.xml file, review file content and identify the \"maxInMemorySessionCount\" and the allowOverflow settings.\n\nEXAMPLE:\ngrep -i maxInMemorySessionCount server.xml\n\n<httpSession maxInMemorySessionCount=\"xxxx\" allowOverflow=\"false\" /> \n\nIf maxInMemorySessionCount is not set in server.xml according to the settings defined in the system security plan or if allowOverflow=\"true\", this is a finding.","fix":"To limit the max number of concurrent sessions available, the ${server.config.dir}/server.xml must be configured with maxInMemorySessionCount set according to system security plan and allowOverflow=\"false\".\n\nEXAMPLE:\n<httpSession maxInMemorySessionCount=\"5\" allowOverflow=\"false\" />"},"impact":0.5,"refs":[{"ref":"DPMS Target IBM WebSphere Liberty Server"}],"tags":{"check_id":"C-53757r795017_chk","severity":"medium","gid":"V-250322","rid":"SV-250322r795019_rule","stig_id":"IBMW-LS-000010","gtitle":"SRG-APP-000001-AS-000001","fix_id":"F-53711r795018_fix","cci":["CCI-000054"],"nist":["AC-10"]}},{"id":"SV-250323","code":"control 'SV-250323' do\n  title 'The WebSphere Liberty Server Quality of Protection (QoP) must be set to use TLSv1.2 or higher.'\n  desc 'Quality of Protection in WebSphere Liberty specifies the security level, ciphers, and mutual authentication settings for the Secure Socket Layer (SSL/TLS) configuration. For Quality of Protection settings to apply, the security feature (appSecurity-3.0) must be defined in order to configure a user registry for the servlet to authenticate against. The SSL feature (ssl-1.0) must be defined in order to configure ssl settings, and the ldap feature (ldapRegistry-3.0) must be defined in order to configure an enterprise-level user registry for authentication of users.'\n  desc 'check', 'As a privileged user with local file access to ${server.config.dir}/server.xml, verify the appSecurity-x.x feature and the sslProtocol settings are configured.\n\ngrep -i appsecurity- server.xml\n\nRESULT:\n<feature>appSecurity-3.0</feature>\n\nVerify the SSL protocol setting is configured for TLSV1.2 for every SSL configuration. There can be multiple SSL configurations and SSL ID settings.\n\ngrep -i \"<ssl id=\" server.xml\n\nSAMPLE RESULT:\n<ssl id=\"TLSSettings\" keyStoreRef=\"TLSKeyStore\" trustStoreRef=\"TLSTrustStore\" sslProtocol=\"TLSv1.2\"/>\n\nIf the SSL protocol setting does not specify TLS v.1.2 or higher, or if the appSecurity feature is not configured, this is a finding.'\n  desc 'fix', 'To ensure the QoP is set to TLS v1.2 or higher, the ${server.config.dir}/server.xml file must be configured as follows: \n\n<featureManager><feature>appSecurity-3.0</feature><feature>ssl-1.0</feature></featureManager>\n\nFor every SSL configuration, the sslProtocol field must be set to TLS v1.2 or higher.\n\n <ssl id=\"TLSSettings\" keyStoreRef=\"TLSKeyStore\" trustStoreRef=\"TLSTrustStore\"  sslProtocol=\"TLSv1.2\" />'\n  impact 0.5\n  ref 'DPMS Target IBM WebSphere Liberty Server'\n  tag check_id: 'C-53758r795020_chk'\n  tag severity: 'medium'\n  tag gid: 'V-250323'\n  tag rid: 'SV-250323r795022_rule'\n  tag stig_id: 'IBMW-LS-000020'\n  tag gtitle: 'SRG-APP-000014-AS-000009'\n  tag fix_id: 'F-53712r795021_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000068']\n  tag nist: ['AC-17 (2)']\nend","source_location":{"line":1,"ref":"U_IBM_WebSphere_Liberty_Server_STIG_V1R1/controls/SV-250323.rb"},"title":"The WebSphere Liberty Server Quality of Protection (QoP) must be set to use TLSv1.2 or higher.","desc":"Quality of Protection in WebSphere Liberty specifies the security level, ciphers, and mutual authentication settings for the Secure Socket Layer (SSL/TLS) configuration. For Quality of Protection settings to apply, the security feature (appSecurity-3.0) must be defined in order to configure a user registry for the servlet to authenticate against. The SSL feature (ssl-1.0) must be defined in order to configure ssl settings, and the ldap feature (ldapRegistry-3.0) must be defined in order to configure an enterprise-level user registry for authentication of users.","descriptions":{"default":"Quality of Protection in WebSphere Liberty specifies the security level, ciphers, and mutual authentication settings for the Secure Socket Layer (SSL/TLS) configuration. For Quality of Protection settings to apply, the security feature (appSecurity-3.0) must be defined in order to configure a user registry for the servlet to authenticate against. The SSL feature (ssl-1.0) must be defined in order to configure ssl settings, and the ldap feature (ldapRegistry-3.0) must be defined in order to configure an enterprise-level user registry for authentication of users.","check":"As a privileged user with local file access to ${server.config.dir}/server.xml, verify the appSecurity-x.x feature and the sslProtocol settings are configured.\n\ngrep -i appsecurity- server.xml\n\nRESULT:\n<feature>appSecurity-3.0</feature>\n\nVerify the SSL protocol setting is configured for TLSV1.2 for every SSL configuration. There can be multiple SSL configurations and SSL ID settings.\n\ngrep -i \"<ssl id=\" server.xml\n\nSAMPLE RESULT:\n<ssl id=\"TLSSettings\" keyStoreRef=\"TLSKeyStore\" trustStoreRef=\"TLSTrustStore\" sslProtocol=\"TLSv1.2\"/>\n\nIf the SSL protocol setting does not specify TLS v.1.2 or higher, or if the appSecurity feature is not configured, this is a finding.","fix":"To ensure the QoP is set to TLS v1.2 or higher, the ${server.config.dir}/server.xml file must be configured as follows: \n\n<featureManager><feature>appSecurity-3.0</feature><feature>ssl-1.0</feature></featureManager>\n\nFor every SSL configuration, the sslProtocol field must be set to TLS v1.2 or higher.\n\n <ssl id=\"TLSSettings\" keyStoreRef=\"TLSKeyStore\" trustStoreRef=\"TLSTrustStore\"  sslProtocol=\"TLSv1.2\" />"},"impact":0.5,"refs":[{"ref":"DPMS Target IBM WebSphere Liberty Server"}],"tags":{"check_id":"C-53758r795020_chk","severity":"medium","gid":"V-250323","rid":"SV-250323r795022_rule","stig_id":"IBMW-LS-000020","gtitle":"SRG-APP-000014-AS-000009","fix_id":"F-53712r795021_fix","documentable":null,"cci":["CCI-000068"],"nist":["AC-17 (2)"]}},{"id":"SV-250324","code":"control 'SV-250324' do\n  title 'Security cookies must be set to HTTPOnly.'\n  desc '<0> [object Object]'\n  desc 'check', 'As a user with local file access to ${server.config.dir}/server.xml, verify appSecurity feature is enabled.\n\n<featureManager><feature>appSecurity-3.0</feature></featureManager>\n\nVerify both web application LTPA and http session cookies are configured for httpOnly.\n\n<webAppSecurity  ssoCookieName=\"LtpaToken2\"  ssoRequiresSSL=\"true\"    httpOnlyCookies=\"true\"   logoutOnHttpSessionExpire=\"true\"/>  \n\n<httpSession    cookieName=\"JSESSIONID\"    cookieSecure=\"true\"    cookieHttpOnly=\"true\"    cookiePath=\"/\"/>\n\nIf the appSecurity feature is not enabled or if the LPTA or Session cookie settings are not set for httpOnly, this is a finding.'\n  desc 'fix', 'To ensure security cookies use httpOnly, the ${server.config.dir)/server.xml must be configured as follows: \n\n<featureManager><feature>appSecurity-3.0</feature></featureManager>\n\n <webAppSecurity  ssoCookieName=\"LtpaToken2\"  ssoRequiresSSL=\"true\"    httpOnlyCookies=\"true\"   logoutOnHttpSessionExpire=\"true\"/>  \n\n<httpSession    cookieName=\"JSESSIONID\"    cookieSecure=\"true\"    cookieHttpOnly=\"true\"    cookiePath=\"/\"/>'\n  impact 0.5\n  ref 'DPMS Target IBM WebSphere Liberty Server'\n  tag check_id: 'C-53759r795023_chk'\n  tag severity: 'medium'\n  tag gid: 'V-250324'\n  tag rid: 'SV-250324r795110_rule'\n  tag stig_id: 'IBMW-LS-000030'\n  tag gtitle: 'SRG-APP-000015-AS-000010'\n  tag fix_id: 'F-53713r795024_fix'\n  tag cci: ['CCI-001453']\n  tag nist: ['AC-17 (2)']\nend","source_location":{"line":1,"ref":"U_IBM_WebSphere_Liberty_Server_STIG_V1R1/controls/SV-250324.rb"},"title":"Security cookies must be set to HTTPOnly.","desc":"<0> [object Object]","descriptions":{"default":"<0> [object Object]","check":"As a user with local file access to ${server.config.dir}/server.xml, verify appSecurity feature is enabled.\n\n<featureManager><feature>appSecurity-3.0</feature></featureManager>\n\nVerify both web application LTPA and http session cookies are configured for httpOnly.\n\n<webAppSecurity  ssoCookieName=\"LtpaToken2\"  ssoRequiresSSL=\"true\"    httpOnlyCookies=\"true\"   logoutOnHttpSessionExpire=\"true\"/>  \n\n<httpSession    cookieName=\"JSESSIONID\"    cookieSecure=\"true\"    cookieHttpOnly=\"true\"    cookiePath=\"/\"/>\n\nIf the appSecurity feature is not enabled or if the LPTA or Session cookie settings are not set for httpOnly, this is a finding.","fix":"To ensure security cookies use httpOnly, the ${server.config.dir)/server.xml must be configured as follows: \n\n<featureManager><feature>appSecurity-3.0</feature></featureManager>\n\n <webAppSecurity  ssoCookieName=\"LtpaToken2\"  ssoRequiresSSL=\"true\"    httpOnlyCookies=\"true\"   logoutOnHttpSessionExpire=\"true\"/>  \n\n<httpSession    cookieName=\"JSESSIONID\"    cookieSecure=\"true\"    cookieHttpOnly=\"true\"    cookiePath=\"/\"/>"},"impact":0.5,"refs":[{"ref":"DPMS Target IBM WebSphere Liberty Server"}],"tags":{"check_id":"C-53759r795023_chk","severity":"medium","gid":"V-250324","rid":"SV-250324r795110_rule","stig_id":"IBMW-LS-000030","gtitle":"SRG-APP-000015-AS-000010","fix_id":"F-53713r795024_fix","cci":["CCI-001453"],"nist":["AC-17 (2)"]}},{"id":"SV-250325","code":"control 'SV-250325' do\n  title 'The WebSphere Liberty Server must log remote session and security activity.'\n  desc 'Security auditing must be configured in order to log remote session activity. Security auditing will not be performed unless the audit feature (audit-1.0) has been enabled. The security feature (appSecurity-3.0) must be enabled for the security auditing to capture security transactions. The servlet (servlet-3.1) feature must be enabled to generate web-based security events. The ejb (ejbLite-3.1) feature must be enabled to generate ejb-based security events. Remote session activity will then be logged, regardless of the user attempting that activity.\n\n'\n  desc 'check', 'Review the ${server.config.dir}/server.xml file, ensure audit-1.0, appSecurity-3.0, and ejbLite-3.1 are defined within the <featureManager> setting in the server.xml file. \n\nIf audit-1.0, appSecurity-3.0, and ejbLite-3.1 are not defined within the <featureManager> setting in the server.xml file, this is a finding. \n\nEXAMPLE:\n<featureManager>\n<feature>audit-1.0</feature>\n<feature>appSecurity-3.0</feature>\n<feature>servlet-3.1</feature>\n<feature>ejbLite-3.1</feature>\n</featureManager>'\n  desc 'fix', 'To log remote access events, the featureManager setting in the ${server.config.dir}/server.xml must contain the audit, appSecurity, and ejbLite features. \n\n<featureManager>\n<feature>audit-1.0</feature>\n<feature>appSecurity-3.0</feature>\n<feature>servlet-3.1</feature>\n<feature>ejbLite-3.1</feature>\n</featureManager>'\n  impact 0.5\n  ref 'DPMS Target IBM WebSphere Liberty Server'\n  tag check_id: 'C-53760r795026_chk'\n  tag severity: 'medium'\n  tag gid: 'V-250325'\n  tag rid: 'SV-250325r795028_rule'\n  tag stig_id: 'IBMW-LS-000040'\n  tag gtitle: 'SRG-APP-000016-AS-000013'\n  tag fix_id: 'F-53714r795027_fix'\n  tag satisfies: ['SRG-APP-000016-AS-000013', 'SRG-APP-000080-AS-000045', 'SRG-APP-000089-AS-000050', 'SRG-APP-000091-AS-000052', 'SRG-APP-000095-AS-000056', 'SRG-APP-000096-AS-000059', 'SRG-APP-000097-AS-000060', 'SRG-APP-000098-AS-000061', 'SRG-APP-000099-AS-000062', 'SRG-APP-000100-AS-000063', 'SRG-APP-000101-AS-000072', 'SRG-APP-000266-AS-000168', 'SRG-APP-000343-AS-000030', 'SRG-APP-000172-AS-000121']\n  tag 'documentable'\n  tag cci: ['CCI-000067', 'CCI-000130', 'CCI-000131', 'CCI-000132', 'CCI-000133', 'CCI-000134', 'CCI-000135', 'CCI-000162', 'CCI-000166', 'CCI-000169', 'CCI-000172', 'CCI-001312', 'CCI-001487', 'CCI-002234']\n  tag nist: ['AC-17 (1)', 'AU-3 a', 'AU-3 b', 'AU-3 c', 'AU-3 d', 'AU-3 e', 'AU-3 (1)', 'AU-9 a', 'AU-10', 'AU-12 a', 'AU-12 c', 'SI-11 a', 'AU-3 f', 'AC-6 (9)']\nend","source_location":{"line":1,"ref":"U_IBM_WebSphere_Liberty_Server_STIG_V1R1/controls/SV-250325.rb"},"title":"The WebSphere Liberty Server must log remote session and security activity.","desc":"Security auditing must be configured in order to log remote session activity. Security auditing will not be performed unless the audit feature (audit-1.0) has been enabled. The security feature (appSecurity-3.0) must be enabled for the security auditing to capture security transactions. The servlet (servlet-3.1) feature must be enabled to generate web-based security events. The ejb (ejbLite-3.1) feature must be enabled to generate ejb-based security events. Remote session activity will then be logged, regardless of the user attempting that activity.\n\n","descriptions":{"default":"Security auditing must be configured in order to log remote session activity. Security auditing will not be performed unless the audit feature (audit-1.0) has been enabled. The security feature (appSecurity-3.0) must be enabled for the security auditing to capture security transactions. The servlet (servlet-3.1) feature must be enabled to generate web-based security events. The ejb (ejbLite-3.1) feature must be enabled to generate ejb-based security events. Remote session activity will then be logged, regardless of the user attempting that activity.\n\n","check":"Review the ${server.config.dir}/server.xml file, ensure audit-1.0, appSecurity-3.0, and ejbLite-3.1 are defined within the <featureManager> setting in the server.xml file. \n\nIf audit-1.0, appSecurity-3.0, and ejbLite-3.1 are not defined within the <featureManager> setting in the server.xml file, this is a finding. \n\nEXAMPLE:\n<featureManager>\n<feature>audit-1.0</feature>\n<feature>appSecurity-3.0</feature>\n<feature>servlet-3.1</feature>\n<feature>ejbLite-3.1</feature>\n</featureManager>","fix":"To log remote access events, the featureManager setting in the ${server.config.dir}/server.xml must contain the audit, appSecurity, and ejbLite features. \n\n<featureManager>\n<feature>audit-1.0</feature>\n<feature>appSecurity-3.0</feature>\n<feature>servlet-3.1</feature>\n<feature>ejbLite-3.1</feature>\n</featureManager>"},"impact":0.5,"refs":[{"ref":"DPMS Target IBM WebSphere Liberty Server"}],"tags":{"check_id":"C-53760r795026_chk","severity":"medium","gid":"V-250325","rid":"SV-250325r795028_rule","stig_id":"IBMW-LS-000040","gtitle":"SRG-APP-000016-AS-000013","fix_id":"F-53714r795027_fix","satisfies":["SRG-APP-000016-AS-000013","SRG-APP-000080-AS-000045","SRG-APP-000089-AS-000050","SRG-APP-000091-AS-000052","SRG-APP-000095-AS-000056","SRG-APP-000096-AS-000059","SRG-APP-000097-AS-000060","SRG-APP-000098-AS-000061","SRG-APP-000099-AS-000062","SRG-APP-000100-AS-000063","SRG-APP-000101-AS-000072","SRG-APP-000266-AS-000168","SRG-APP-000343-AS-000030","SRG-APP-000172-AS-000121"],"documentable":null,"cci":["CCI-000067","CCI-000130","CCI-000131","CCI-000132","CCI-000133","CCI-000134","CCI-000135","CCI-000162","CCI-000166","CCI-000169","CCI-000172","CCI-001312","CCI-001487","CCI-002234"],"nist":["AC-17 (1)","AU-3 a","AU-3 b","AU-3 c","AU-3 d","AU-3 e","AU-3 (1)","AU-9 a","AU-10","AU-12 a","AU-12 c","SI-11 a","AU-3 f","AC-6 (9)"]}},{"id":"SV-250326","code":"control 'SV-250326' do\n  title 'Users in the REST API admin role must be authorized.'\n  desc 'Users with console access and OS permissions to the folders where the Liberty Server is installed can make changes to the server. In addition, REST API calls that execute server management tasks are available and can be executed remotely. Adding a user to the admin role will allow that user to make changes to the server via the REST API calls.\n\nThe admin role must be controlled and users who are in that role must be authorized.'\n  desc 'check', 'As a user with access to ${server.config.dir}/server.xml, review the file and look for the admin role settings.\n\ngrep -i administrator-role ${server.config.dir}/server.xml\ngrep -i quickstartsecurity ${server.config.dir}/server.xml\n\nIf the admin role has been created, users in that role must be documented and approved. However, using the basic registry or the quickstartsecurity methods are not acceptable. The preferred user registry method is to use a centralized access control method via LDAP. \n\nIf no admin users exist at all, this is not a finding.\n\nIf admin users in an LDAP user registry configuration are not documented and approved, this is a finding.\n\nIf admin users exist in a basic user registry configuration, or in a quickstartsecurity user configuration, this is a finding.\n\nLDAP EXAMPLE:\n<administrator-role>\n     <user>cn=bob,o=ibm,c=us</user>\n </administrator-role>\n\nBASIC REGISTRY EXAMPLE:\n<basicRegistry>\n     <user name=\"bob\" password=\"bobpassword\"/>\n     <user name=\"joe\" password=\"joepassword\"/>\n     <group name=\"group1\" ...>\n     </group>\n </basicRegistry>\n\n<administrator-role>\n     <user>bob</user>\n     <group>group1</group>\n </administrator-role>\n\nQUICKSTARTSECURITY EXAMPLE:\n<featureManager>\n     <feature>restConnector-2.0</feature>\n </featureManager>\n <quickStartSecurity userName=\"bob\" userPassword=\"bobpassword\" />\n <keyStore id=\"defaultKeyStore\" password=\"keystorePassword\"/>'\n  desc 'fix', 'If an admin user exists in either a basic user registry or a quickstartsecurity registry, edit the ${server.config.dir}/server.xml file and remove the basic registry and/or quickstartsecurity registry settings.\n\nIf an admin user exists via an LDAP user registry setting, document and approve the user(s) or group that have been assigned to the admin role and ensure anyone granted REST API admin rights is authorized.\n\nLDAP EXAMPLE:\n<administrator-role>\n     <user>cn=bob,o=ibm,c=us</user>\n </administrator-role>\n\nBASIC REGISTRY EXAMPLE:\n<basicRegistry>\n     <user name=\"bob\" password=\"bobpassword\"/>\n     <user name=\"joe\" password=\"joepassword\"/>\n     <group name=\"group1\" ...>\n     </group>\n </basicRegistry>\n\n<administrator-role>\n     <user>bob</user>\n     <group>group1</group>\n </administrator-role>\n\nQUICKSTARTSECURITY EXAMPLE:\n<featureManager>\n     <feature>restConnector-2.0</feature>\n </featureManager>\n <quickStartSecurity userName=\"bob\" userPassword=\"bobpassword\" />\n <keyStore id=\"defaultKeyStore\" password=\"keystorePassword\"/>'\n  impact 0.7\n  ref 'DPMS Target IBM WebSphere Liberty Server'\n  tag check_id: 'C-53761r795029_chk'\n  tag severity: 'high'\n  tag gid: 'V-250326'\n  tag rid: 'SV-250326r795031_rule'\n  tag stig_id: 'IBMW-LS-000050'\n  tag gtitle: 'SRG-APP-000033-AS-000024'\n  tag fix_id: 'F-53715r795030_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000213']\n  tag nist: ['AC-3']\nend","source_location":{"line":1,"ref":"U_IBM_WebSphere_Liberty_Server_STIG_V1R1/controls/SV-250326.rb"},"title":"Users in the REST API admin role must be authorized.","desc":"Users with console access and OS permissions to the folders where the Liberty Server is installed can make changes to the server. In addition, REST API calls that execute server management tasks are available and can be executed remotely. Adding a user to the admin role will allow that user to make changes to the server via the REST API calls.\n\nThe admin role must be controlled and users who are in that role must be authorized.","descriptions":{"default":"Users with console access and OS permissions to the folders where the Liberty Server is installed can make changes to the server. In addition, REST API calls that execute server management tasks are available and can be executed remotely. Adding a user to the admin role will allow that user to make changes to the server via the REST API calls.\n\nThe admin role must be controlled and users who are in that role must be authorized.","check":"As a user with access to ${server.config.dir}/server.xml, review the file and look for the admin role settings.\n\ngrep -i administrator-role ${server.config.dir}/server.xml\ngrep -i quickstartsecurity ${server.config.dir}/server.xml\n\nIf the admin role has been created, users in that role must be documented and approved. However, using the basic registry or the quickstartsecurity methods are not acceptable. The preferred user registry method is to use a centralized access control method via LDAP. \n\nIf no admin users exist at all, this is not a finding.\n\nIf admin users in an LDAP user registry configuration are not documented and approved, this is a finding.\n\nIf admin users exist in a basic user registry configuration, or in a quickstartsecurity user configuration, this is a finding.\n\nLDAP EXAMPLE:\n<administrator-role>\n     <user>cn=bob,o=ibm,c=us</user>\n </administrator-role>\n\nBASIC REGISTRY EXAMPLE:\n<basicRegistry>\n     <user name=\"bob\" password=\"bobpassword\"/>\n     <user name=\"joe\" password=\"joepassword\"/>\n     <group name=\"group1\" ...>\n     </group>\n </basicRegistry>\n\n<administrator-role>\n     <user>bob</user>\n     <group>group1</group>\n </administrator-role>\n\nQUICKSTARTSECURITY EXAMPLE:\n<featureManager>\n     <feature>restConnector-2.0</feature>\n </featureManager>\n <quickStartSecurity userName=\"bob\" userPassword=\"bobpassword\" />\n <keyStore id=\"defaultKeyStore\" password=\"keystorePassword\"/>","fix":"If an admin user exists in either a basic user registry or a quickstartsecurity registry, edit the ${server.config.dir}/server.xml file and remove the basic registry and/or quickstartsecurity registry settings.\n\nIf an admin user exists via an LDAP user registry setting, document and approve the user(s) or group that have been assigned to the admin role and ensure anyone granted REST API admin rights is authorized.\n\nLDAP EXAMPLE:\n<administrator-role>\n     <user>cn=bob,o=ibm,c=us</user>\n </administrator-role>\n\nBASIC REGISTRY EXAMPLE:\n<basicRegistry>\n     <user name=\"bob\" password=\"bobpassword\"/>\n     <user name=\"joe\" password=\"joepassword\"/>\n     <group name=\"group1\" ...>\n     </group>\n </basicRegistry>\n\n<administrator-role>\n     <user>bob</user>\n     <group>group1</group>\n </administrator-role>\n\nQUICKSTARTSECURITY EXAMPLE:\n<featureManager>\n     <feature>restConnector-2.0</feature>\n </featureManager>\n <quickStartSecurity userName=\"bob\" userPassword=\"bobpassword\" />\n <keyStore id=\"defaultKeyStore\" password=\"keystorePassword\"/>"},"impact":0.7,"refs":[{"ref":"DPMS Target IBM WebSphere Liberty Server"}],"tags":{"check_id":"C-53761r795029_chk","severity":"high","gid":"V-250326","rid":"SV-250326r795031_rule","stig_id":"IBMW-LS-000050","gtitle":"SRG-APP-000033-AS-000024","fix_id":"F-53715r795030_fix","documentable":null,"cci":["CCI-000213"],"nist":["AC-3"]}},{"id":"SV-250327","code":"control 'SV-250327' do\n  title 'The WebSphere Liberty Server must be configured to offload logs to a centralized system.'\n  desc 'Log processing failures include, but are not limited to, failures in the application server log capturing mechanisms or log storage capacity being reached or exceeded. In some instances, it is preferred to send alarms to individuals rather than to an entire group. Application servers must be able to trigger an alarm and send an alert to, at a minimum, the SA and ISSO in the event there is an application server log processing failure.\n\n'\n  desc 'check', 'As a privileged user with local file access to ${server.config.dir}/server.xml, verify the logstashCollector-1.0 feature is enabled.\n\ngrep -i -A5 logstashcollector server.xml\n\nEXAMPLE:\n<featureManager>\n    <feature>logstashCollector-1.0</feature>\n</featureManager>\n\n<logstashCollector source=\"message,accessLog,audit\"\n          hostName=\"<ip address of logstash server>\"\n          port=\"<port of logstash server>\"\n          sslRef=\"DefaultTLSSettings\"\n  </logstashCollector>\n\nIf \"logstashCollector\" is not a configured feature and the logstashCollector \"source\" setting does not contain \"message,accessLog,audit\", this is a finding.'\n  desc 'fix', 'To send Liberty logs to a centralized syslog system, the Elastic environment must be set up as per the ELK stack/Elasticsearch directions. Once that is completed, configure the server.xml. The following is a sample configuration. Individual keystore, truststore, and authentication settings will vary. The SME must substitute their own values as needed. \n\nThe message, audit, and accessLog sources must be included at a minimum.\n\nFor additional information refer to the IBM website:\nhttps://www.ibm.com/support/knowledgecenter/SSEQTP_liberty/com.ibm.WebSphere.wlp.doc/ae/twlp_analytics_logstash.html\n\nEXAMPLE:\n\n<featureManager>\n    <feature>logstashCollector-1.0</feature>\n</featureManager>\n\n<keyStore id=\"defaultKeyStore\" password=\"xxxxxxx\" />\n<keyStore id=\"defaultTrustStore\" location=\"trust.jks\" password=\"xxxxxxx\" />\n<ssl id=\"myTLSConfig\" trustStoreRef=\"defaultTrustStore\" keyStoreRef=\"defaultKeyStore\" />\n\n<logstashCollector \nsource=\"message,accessLog,audit\" \nhostName=\"your ELK stack server\" \nport=\"Your ELK stack port\" \nsslRef=\"myTLSConfig\">\n</logstashCollector>'\n  impact 0.5\n  ref 'DPMS Target IBM WebSphere Liberty Server'\n  tag check_id: 'C-53762r795032_chk'\n  tag severity: 'medium'\n  tag gid: 'V-250327'\n  tag rid: 'SV-250327r795034_rule'\n  tag stig_id: 'IBMW-LS-000230'\n  tag gtitle: 'SRG-APP-000109-AS-000070'\n  tag fix_id: 'F-53716r795033_fix'\n  tag satisfies: ['SRG-APP-000109-AS-000070', 'SRG-APP-000358-AS-000064']\n  tag 'documentable'\n  tag cci: ['CCI-000140', 'CCI-001851']\n  tag nist: ['AU-5 b', 'AU-4 (1)']\nend","source_location":{"line":1,"ref":"U_IBM_WebSphere_Liberty_Server_STIG_V1R1/controls/SV-250327.rb"},"title":"The WebSphere Liberty Server must be configured to offload logs to a centralized system.","desc":"Log processing failures include, but are not limited to, failures in the application server log capturing mechanisms or log storage capacity being reached or exceeded. In some instances, it is preferred to send alarms to individuals rather than to an entire group. Application servers must be able to trigger an alarm and send an alert to, at a minimum, the SA and ISSO in the event there is an application server log processing failure.\n\n","descriptions":{"default":"Log processing failures include, but are not limited to, failures in the application server log capturing mechanisms or log storage capacity being reached or exceeded. In some instances, it is preferred to send alarms to individuals rather than to an entire group. Application servers must be able to trigger an alarm and send an alert to, at a minimum, the SA and ISSO in the event there is an application server log processing failure.\n\n","check":"As a privileged user with local file access to ${server.config.dir}/server.xml, verify the logstashCollector-1.0 feature is enabled.\n\ngrep -i -A5 logstashcollector server.xml\n\nEXAMPLE:\n<featureManager>\n    <feature>logstashCollector-1.0</feature>\n</featureManager>\n\n<logstashCollector source=\"message,accessLog,audit\"\n          hostName=\"<ip address of logstash server>\"\n          port=\"<port of logstash server>\"\n          sslRef=\"DefaultTLSSettings\"\n  </logstashCollector>\n\nIf \"logstashCollector\" is not a configured feature and the logstashCollector \"source\" setting does not contain \"message,accessLog,audit\", this is a finding.","fix":"To send Liberty logs to a centralized syslog system, the Elastic environment must be set up as per the ELK stack/Elasticsearch directions. Once that is completed, configure the server.xml. The following is a sample configuration. Individual keystore, truststore, and authentication settings will vary. The SME must substitute their own values as needed. \n\nThe message, audit, and accessLog sources must be included at a minimum.\n\nFor additional information refer to the IBM website:\nhttps://www.ibm.com/support/knowledgecenter/SSEQTP_liberty/com.ibm.WebSphere.wlp.doc/ae/twlp_analytics_logstash.html\n\nEXAMPLE:\n\n<featureManager>\n    <feature>logstashCollector-1.0</feature>\n</featureManager>\n\n<keyStore id=\"defaultKeyStore\" password=\"xxxxxxx\" />\n<keyStore id=\"defaultTrustStore\" location=\"trust.jks\" password=\"xxxxxxx\" />\n<ssl id=\"myTLSConfig\" trustStoreRef=\"defaultTrustStore\" keyStoreRef=\"defaultKeyStore\" />\n\n<logstashCollector \nsource=\"message,accessLog,audit\" \nhostName=\"your ELK stack server\" \nport=\"Your ELK stack port\" \nsslRef=\"myTLSConfig\">\n</logstashCollector>"},"impact":0.5,"refs":[{"ref":"DPMS Target IBM WebSphere Liberty Server"}],"tags":{"check_id":"C-53762r795032_chk","severity":"medium","gid":"V-250327","rid":"SV-250327r795034_rule","stig_id":"IBMW-LS-000230","gtitle":"SRG-APP-000109-AS-000070","fix_id":"F-53716r795033_fix","satisfies":["SRG-APP-000109-AS-000070","SRG-APP-000358-AS-000064"],"documentable":null,"cci":["CCI-000140","CCI-001851"],"nist":["AU-5 b","AU-4 (1)"]}},{"id":"SV-250328","code":"control 'SV-250328' do\n  title 'The WebSphere Liberty Server must protect log information from unauthorized access or changes.'\n  desc '<0> [object Object]'\n  desc 'check', 'As a user with local file access to ${server.config.dir}/logs, verify the following audit log files have the correct file permissions of 660.\n\naudit.log\nmessages.log\nconsole.log\ntrace.log (if it exists)\n\nIf the file permissions for these files are not set to 660, this is a finding.'\n  desc 'fix', 'As a user with local file access to ${server.config.dir}/logs, use the chmod command to configure the following log files to have the correct file permissions of 660.\n\nchmod 660 <filename.log>\n\naudit.log\nmessages.log\nconsole.log\ntrace.log (if it exists)'\n  impact 0.5\n  ref 'DPMS Target IBM WebSphere Liberty Server'\n  tag check_id: 'C-53763r795035_chk'\n  tag severity: 'medium'\n  tag gid: 'V-250328'\n  tag rid: 'SV-250328r795037_rule'\n  tag stig_id: 'IBMW-LS-000260'\n  tag gtitle: 'SRG-APP-000119-AS-000079'\n  tag fix_id: 'F-53717r795036_fix'\n  tag cci: ['CCI-000163', 'CCI-000164']\n  tag nist: ['AU-9 a', 'AU-9 a']\nend","source_location":{"line":1,"ref":"U_IBM_WebSphere_Liberty_Server_STIG_V1R1/controls/SV-250328.rb"},"title":"The WebSphere Liberty Server must protect log information from unauthorized access or changes.","desc":"<0> [object Object]","descriptions":{"default":"<0> [object Object]","check":"As a user with local file access to ${server.config.dir}/logs, verify the following audit log files have the correct file permissions of 660.\n\naudit.log\nmessages.log\nconsole.log\ntrace.log (if it exists)\n\nIf the file permissions for these files are not set to 660, this is a finding.","fix":"As a user with local file access to ${server.config.dir}/logs, use the chmod command to configure the following log files to have the correct file permissions of 660.\n\nchmod 660 <filename.log>\n\naudit.log\nmessages.log\nconsole.log\ntrace.log (if it exists)"},"impact":0.5,"refs":[{"ref":"DPMS Target IBM WebSphere Liberty Server"}],"tags":{"check_id":"C-53763r795035_chk","severity":"medium","gid":"V-250328","rid":"SV-250328r795037_rule","stig_id":"IBMW-LS-000260","gtitle":"SRG-APP-000119-AS-000079","fix_id":"F-53717r795036_fix","cci":["CCI-000163","CCI-000164"],"nist":["AU-9 a","AU-9 a"]}},{"id":"SV-250329","code":"control 'SV-250329' do\n  title 'The WebSphere Liberty Server must protect log tools from unauthorized access.'\n  desc 'Protecting log data also includes identifying and protecting the tools used to view and manipulate log data. Depending on the log format and application, system and application log tools may provide the only means to manipulate and manage application and system log data. Therefore, it is imperative that access to log tools be controlled and protected from unauthorized access. \n\nApplication servers provide a web- and/or a command line-based management functionality for managing the application server log capabilities. In addition, subsets of log tool components may be stored on the file system as jar or xml configuration files. The application server must ensure that in addition to protecting any web-based log tools, any file system-based tools are protected as well.'\n  desc 'check', 'As a user with local file access to the /opt/IBM/WebSphere/Liberty/bin folder, verify the following audit tool files have the correct file permissions of 755.\n\nbinaryLog\nauditUtility\n\nIf the file permissions for these files are not set to 755, this is a finding.'\n  desc 'fix', 'As a user with local file access to the /opt/IBM/WebSphere/Liberty/bin/ folder, use the chmod command to configure the correct file permissions of 755 for the following files.\n\nbinaryLog\nauditUtility'\n  impact 0.5\n  ref 'DPMS Target IBM WebSphere Liberty Server'\n  tag check_id: 'C-53764r795038_chk'\n  tag severity: 'medium'\n  tag gid: 'V-250329'\n  tag rid: 'SV-250329r795040_rule'\n  tag stig_id: 'IBMW-LS-000280'\n  tag gtitle: 'SRG-APP-000121-AS-000081'\n  tag fix_id: 'F-53718r795039_fix'\n  tag 'documentable'\n  tag cci: ['CCI-001493']\n  tag nist: ['AU-9 a']\nend","source_location":{"line":1,"ref":"U_IBM_WebSphere_Liberty_Server_STIG_V1R1/controls/SV-250329.rb"},"title":"The WebSphere Liberty Server must protect log tools from unauthorized access.","desc":"Protecting log data also includes identifying and protecting the tools used to view and manipulate log data. Depending on the log format and application, system and application log tools may provide the only means to manipulate and manage application and system log data. Therefore, it is imperative that access to log tools be controlled and protected from unauthorized access. \n\nApplication servers provide a web- and/or a command line-based management functionality for managing the application server log capabilities. In addition, subsets of log tool components may be stored on the file system as jar or xml configuration files. The application server must ensure that in addition to protecting any web-based log tools, any file system-based tools are protected as well.","descriptions":{"default":"Protecting log data also includes identifying and protecting the tools used to view and manipulate log data. Depending on the log format and application, system and application log tools may provide the only means to manipulate and manage application and system log data. Therefore, it is imperative that access to log tools be controlled and protected from unauthorized access. \n\nApplication servers provide a web- and/or a command line-based management functionality for managing the application server log capabilities. In addition, subsets of log tool components may be stored on the file system as jar or xml configuration files. The application server must ensure that in addition to protecting any web-based log tools, any file system-based tools are protected as well.","check":"As a user with local file access to the /opt/IBM/WebSphere/Liberty/bin folder, verify the following audit tool files have the correct file permissions of 755.\n\nbinaryLog\nauditUtility\n\nIf the file permissions for these files are not set to 755, this is a finding.","fix":"As a user with local file access to the /opt/IBM/WebSphere/Liberty/bin/ folder, use the chmod command to configure the correct file permissions of 755 for the following files.\n\nbinaryLog\nauditUtility"},"impact":0.5,"refs":[{"ref":"DPMS Target IBM WebSphere Liberty Server"}],"tags":{"check_id":"C-53764r795038_chk","severity":"medium","gid":"V-250329","rid":"SV-250329r795040_rule","stig_id":"IBMW-LS-000280","gtitle":"SRG-APP-000121-AS-000081","fix_id":"F-53718r795039_fix","documentable":null,"cci":["CCI-001493"],"nist":["AU-9 a"]}},{"id":"SV-250330","code":"control 'SV-250330' do\n  title 'The WebSphere Liberty Server must be configured to encrypt log information.'\n  desc '<0> [object Object]'\n  desc 'check', 'If the system is configured to send logs to a remote ELK stack log server, as per requirement IBMW-LS-000230, (or other remote logging solution) this requirement is Not Applicable.\n\nAs a user with local file access to ${server.config.dir}/server.xml: \n\n1. Verify the following features are configured.\n\n <featureManager>\n<feature>appSecurity-3.0</feature>\n<feature>audit-1.0</feature>\n<feature>ssl-1.0</feature>\n</featureManager> \n\n2. Verify a keystore is configured. The following is an example:\n\n <keyStore\n         id=\"auditEncKeyStore\"\n         password=\"ENTER THE ENCRYPTION KEYSTORE PASSWORD\"\n         location=\"${server.config.dir}/resources/security/AuditEncryptionKeyStore.jks\"\n         type=\"JKS\" />\n\n      <keyStore\n         id=\"auditSignKeyStore\"\n         password=\"ENTER THE SIGNING KEYSTORE PASSWORD\"\n         location=\"${server.config.dir}/resources/security/AuditSigningKeyStore2.jks\"\n         type=\"JKS\" />\n\n3. Verify auditFileHandler encryption is enabled. Signing is optional.\n\n<auditFileHandler \nencrypt=\"true\"\n        encryptAlias=\"auditencryption\"\n        encryptKeyStoreRef=\"auditEncKeyStore\"\n    sign=\"true\"\n        signingAlias=\"auditsigning2\"\n        signingKeyStoreRef=\"auditSignKeyStore\">\n</auditFileHandler>\n\nIf the features and keystore are not configured, and encryption is not enabled, this is a finding.'\n  desc 'fix', 'If the system is configured to send logs to a remote ELK stack log server, (or other remote logging solution) as per requirement IBMW-LS-000230, this requirement is Not Applicable. \n\nSigning is optional. The encrypted and/or signed audit logs are found under the ${server.config.dir}/logs directory and are named audit.log for the most recent, and audit_<timestamp>.log for any archived logs. Two keystores are recommended but not required when doing both encryption and signing  (ikeyman as part of the JDK may be used) and a certificate imported into each. One keystore will contain the certificate used to encrypt the logs; the other keystore will contain the certificate used to sign the logs. The audit configuration must define the location of every keystore, their passwords, and the alias of each certificate used to encrypt and sign the logs.\n\n1. Enable the following features:\n\n<featureManager>\n<feature>appSecurity-3.0</feature>\n<feature>audit-1.0</feature>\n<feature>ssl-1.0</feature>\n<feature>\n</featureManager> \n\n2. Verify a keystore is configured. The following is a JKS keystore example. PKCS12 is also a viable keystore:\n\n <keyStore\n         id=\"auditEncKeyStore\"\n         password=\"ENTER THE ENCRYPTION KEYSTORE PASSWORD\"\n         location=\"${server.config.dir}/resources/security/AuditEncryptionKeyStore.jks\"\n         type=\"JKS\" />\n\n      <keyStore\n         id=\"auditSignKeyStore\"\n         password=\"ENTER THE SIGNING KEYSTORE PASSWORD\"\n         location=\"${server.config.dir}/resources/security/AuditSigningKeyStore2.jks\"\n         type=\"JKS\" />\n\n3. Enable auditFileHandler encryption. Signing the logs is optional.\n\n<auditFileHandler \nencrypt=\"true\"\n        encryptAlias=\"auditencryption\"\n        encryptKeyStoreRef=\"auditEncKeyStore\"\n    sign=\"true\"\n        signingAlias=\"auditsigning2\"\n        signingKeyStoreRef=\"auditSignKeyStore\">\n</auditFileHandler>'\n  impact 0.5\n  ref 'DPMS Target IBM WebSphere Liberty Server'\n  tag check_id: 'C-53765r795107_chk'\n  tag severity: 'medium'\n  tag gid: 'V-250330'\n  tag rid: 'SV-250330r795108_rule'\n  tag stig_id: 'IBMW-LS-000320'\n  tag gtitle: 'SRG-APP-000126-AS-000085'\n  tag fix_id: 'F-53719r795042_fix'\n  tag cci: ['CCI-000162', 'CCI-001314', 'CCI-001350']\n  tag nist: ['AU-9 a', 'SI-11 b', 'AU-9 (3)']\nend","source_location":{"line":1,"ref":"U_IBM_WebSphere_Liberty_Server_STIG_V1R1/controls/SV-250330.rb"},"title":"The WebSphere Liberty Server must be configured to encrypt log information.","desc":"<0> [object Object]","descriptions":{"default":"<0> [object Object]","check":"If the system is configured to send logs to a remote ELK stack log server, as per requirement IBMW-LS-000230, (or other remote logging solution) this requirement is Not Applicable.\n\nAs a user with local file access to ${server.config.dir}/server.xml: \n\n1. Verify the following features are configured.\n\n <featureManager>\n<feature>appSecurity-3.0</feature>\n<feature>audit-1.0</feature>\n<feature>ssl-1.0</feature>\n</featureManager> \n\n2. Verify a keystore is configured. The following is an example:\n\n <keyStore\n         id=\"auditEncKeyStore\"\n         password=\"ENTER THE ENCRYPTION KEYSTORE PASSWORD\"\n         location=\"${server.config.dir}/resources/security/AuditEncryptionKeyStore.jks\"\n         type=\"JKS\" />\n\n      <keyStore\n         id=\"auditSignKeyStore\"\n         password=\"ENTER THE SIGNING KEYSTORE PASSWORD\"\n         location=\"${server.config.dir}/resources/security/AuditSigningKeyStore2.jks\"\n         type=\"JKS\" />\n\n3. Verify auditFileHandler encryption is enabled. Signing is optional.\n\n<auditFileHandler \nencrypt=\"true\"\n        encryptAlias=\"auditencryption\"\n        encryptKeyStoreRef=\"auditEncKeyStore\"\n    sign=\"true\"\n        signingAlias=\"auditsigning2\"\n        signingKeyStoreRef=\"auditSignKeyStore\">\n</auditFileHandler>\n\nIf the features and keystore are not configured, and encryption is not enabled, this is a finding.","fix":"If the system is configured to send logs to a remote ELK stack log server, (or other remote logging solution) as per requirement IBMW-LS-000230, this requirement is Not Applicable. \n\nSigning is optional. The encrypted and/or signed audit logs are found under the ${server.config.dir}/logs directory and are named audit.log for the most recent, and audit_<timestamp>.log for any archived logs. Two keystores are recommended but not required when doing both encryption and signing  (ikeyman as part of the JDK may be used) and a certificate imported into each. One keystore will contain the certificate used to encrypt the logs; the other keystore will contain the certificate used to sign the logs. The audit configuration must define the location of every keystore, their passwords, and the alias of each certificate used to encrypt and sign the logs.\n\n1. Enable the following features:\n\n<featureManager>\n<feature>appSecurity-3.0</feature>\n<feature>audit-1.0</feature>\n<feature>ssl-1.0</feature>\n<feature>\n</featureManager> \n\n2. Verify a keystore is configured. The following is a JKS keystore example. PKCS12 is also a viable keystore:\n\n <keyStore\n         id=\"auditEncKeyStore\"\n         password=\"ENTER THE ENCRYPTION KEYSTORE PASSWORD\"\n         location=\"${server.config.dir}/resources/security/AuditEncryptionKeyStore.jks\"\n         type=\"JKS\" />\n\n      <keyStore\n         id=\"auditSignKeyStore\"\n         password=\"ENTER THE SIGNING KEYSTORE PASSWORD\"\n         location=\"${server.config.dir}/resources/security/AuditSigningKeyStore2.jks\"\n         type=\"JKS\" />\n\n3. Enable auditFileHandler encryption. Signing the logs is optional.\n\n<auditFileHandler \nencrypt=\"true\"\n        encryptAlias=\"auditencryption\"\n        encryptKeyStoreRef=\"auditEncKeyStore\"\n    sign=\"true\"\n        signingAlias=\"auditsigning2\"\n        signingKeyStoreRef=\"auditSignKeyStore\">\n</auditFileHandler>"},"impact":0.5,"refs":[{"ref":"DPMS Target IBM WebSphere Liberty Server"}],"tags":{"check_id":"C-53765r795107_chk","severity":"medium","gid":"V-250330","rid":"SV-250330r795108_rule","stig_id":"IBMW-LS-000320","gtitle":"SRG-APP-000126-AS-000085","fix_id":"F-53719r795042_fix","cci":["CCI-000162","CCI-001314","CCI-001350"],"nist":["AU-9 a","SI-11 b","AU-9 (3)"]}},{"id":"SV-250331","code":"control 'SV-250331' do\n  title 'The WebSphere Liberty Server must protect software libraries from unauthorized access.'\n  desc 'Application servers have the ability to specify that the hosted applications use shared libraries. The application server must have a capability to divide roles based upon duties wherein one project user (such as a developer) cannot modify the shared library code of another project user. The application server must also be able to specify that non-privileged users cannot modify any shared library code at all.'\n  desc 'check', 'As a privileged user with local file access to the /opt/IBM/WebSphere/Liberty/lib/ folder, verify all of the jar files in the lib folder have the correct file permissions of 664.\n\nIf the file permissions for all jar files in the lib folder are not set to 664, this is a finding.'\n  desc 'fix', 'As a privileged user with local file access to the /opt/IBM/WebSphere/Liberty/lib/ folder, verify all of the jar files in the lib folder have the correct file permissions of 664.\n\nIf the file permissions for all jar files in the lib folder are not set to 664, use the chmod command to change the file permissions.\n\nchmod 664 *.jar'\n  impact 0.5\n  ref 'DPMS Target IBM WebSphere Liberty Server'\n  tag check_id: 'C-53766r795044_chk'\n  tag severity: 'medium'\n  tag gid: 'V-250331'\n  tag rid: 'SV-250331r795046_rule'\n  tag stig_id: 'IBMW-LS-000340'\n  tag gtitle: 'SRG-APP-000133-AS-000092'\n  tag fix_id: 'F-53720r795045_fix'\n  tag 'documentable'\n  tag cci: ['CCI-001499']\n  tag nist: ['CM-5 (6)']\nend","source_location":{"line":1,"ref":"U_IBM_WebSphere_Liberty_Server_STIG_V1R1/controls/SV-250331.rb"},"title":"The WebSphere Liberty Server must protect software libraries from unauthorized access.","desc":"Application servers have the ability to specify that the hosted applications use shared libraries. The application server must have a capability to divide roles based upon duties wherein one project user (such as a developer) cannot modify the shared library code of another project user. The application server must also be able to specify that non-privileged users cannot modify any shared library code at all.","descriptions":{"default":"Application servers have the ability to specify that the hosted applications use shared libraries. The application server must have a capability to divide roles based upon duties wherein one project user (such as a developer) cannot modify the shared library code of another project user. The application server must also be able to specify that non-privileged users cannot modify any shared library code at all.","check":"As a privileged user with local file access to the /opt/IBM/WebSphere/Liberty/lib/ folder, verify all of the jar files in the lib folder have the correct file permissions of 664.\n\nIf the file permissions for all jar files in the lib folder are not set to 664, this is a finding.","fix":"As a privileged user with local file access to the /opt/IBM/WebSphere/Liberty/lib/ folder, verify all of the jar files in the lib folder have the correct file permissions of 664.\n\nIf the file permissions for all jar files in the lib folder are not set to 664, use the chmod command to change the file permissions.\n\nchmod 664 *.jar"},"impact":0.5,"refs":[{"ref":"DPMS Target IBM WebSphere Liberty Server"}],"tags":{"check_id":"C-53766r795044_chk","severity":"medium","gid":"V-250331","rid":"SV-250331r795046_rule","stig_id":"IBMW-LS-000340","gtitle":"SRG-APP-000133-AS-000092","fix_id":"F-53720r795045_fix","documentable":null,"cci":["CCI-001499"],"nist":["CM-5 (6)"]}},{"id":"SV-250332","code":"control 'SV-250332' do\n  title 'The WebSphere Liberty Server must prohibit or restrict the use of nonsecure ports, protocols, modules, and/or services as defined in the PPSM CAL and vulnerability assessments.'\n  desc 'Some networking protocols may not meet organizational security requirements to protect data and components.\n\nApplication servers natively host a number of various features, such as management interfaces, httpd servers, and message queues. These features all run on TCPIP ports. This creates the potential that the vendor may choose to use port numbers or network services that have been deemed unusable by the organization. The application server must have the capability to both reconfigure and disable the assigned ports without adversely impacting application server operation capabilities. For a list of approved ports and protocols, reference the DoD ports and protocols website at https://powhatan.iiie.disa.mil/ports/cal.html.'\n  desc 'check', 'As a privileged user with access to the server.xml file, review the file and identify all TCPIP ports used by the server. \n\nEXAMPLE:\ngrep -I \"port=\" server.xml\n\n httpsPort=\"9443\">\n\nReview the PPSM site for the list of approved ports. If any of the ports used are not registered with PPSM, this is a finding.'\n  desc 'fix', 'Every port listed in ${server.config.dir}/server.xml must be registered with PPSM. \n\nRefer to the PPSM website on https://cyber.mil/ppsm for information.'\n  impact 0.5\n  ref 'DPMS Target IBM WebSphere Liberty Server'\n  tag check_id: 'C-53767r795047_chk'\n  tag severity: 'medium'\n  tag gid: 'V-250332'\n  tag rid: 'SV-250332r795049_rule'\n  tag stig_id: 'IBMW-LS-000370'\n  tag gtitle: 'SRG-APP-000142-AS-000014'\n  tag fix_id: 'F-53721r795048_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000382']\n  tag nist: ['CM-7 b']\nend","source_location":{"line":1,"ref":"U_IBM_WebSphere_Liberty_Server_STIG_V1R1/controls/SV-250332.rb"},"title":"The WebSphere Liberty Server must prohibit or restrict the use of nonsecure ports, protocols, modules, and/or services as defined in the PPSM CAL and vulnerability assessments.","desc":"Some networking protocols may not meet organizational security requirements to protect data and components.\n\nApplication servers natively host a number of various features, such as management interfaces, httpd servers, and message queues. These features all run on TCPIP ports. This creates the potential that the vendor may choose to use port numbers or network services that have been deemed unusable by the organization. The application server must have the capability to both reconfigure and disable the assigned ports without adversely impacting application server operation capabilities. For a list of approved ports and protocols, reference the DoD ports and protocols website at https://powhatan.iiie.disa.mil/ports/cal.html.","descriptions":{"default":"Some networking protocols may not meet organizational security requirements to protect data and components.\n\nApplication servers natively host a number of various features, such as management interfaces, httpd servers, and message queues. These features all run on TCPIP ports. This creates the potential that the vendor may choose to use port numbers or network services that have been deemed unusable by the organization. The application server must have the capability to both reconfigure and disable the assigned ports without adversely impacting application server operation capabilities. For a list of approved ports and protocols, reference the DoD ports and protocols website at https://powhatan.iiie.disa.mil/ports/cal.html.","check":"As a privileged user with access to the server.xml file, review the file and identify all TCPIP ports used by the server. \n\nEXAMPLE:\ngrep -I \"port=\" server.xml\n\n httpsPort=\"9443\">\n\nReview the PPSM site for the list of approved ports. If any of the ports used are not registered with PPSM, this is a finding.","fix":"Every port listed in ${server.config.dir}/server.xml must be registered with PPSM. \n\nRefer to the PPSM website on https://cyber.mil/ppsm for information."},"impact":0.5,"refs":[{"ref":"DPMS Target IBM WebSphere Liberty Server"}],"tags":{"check_id":"C-53767r795047_chk","severity":"medium","gid":"V-250332","rid":"SV-250332r795049_rule","stig_id":"IBMW-LS-000370","gtitle":"SRG-APP-000142-AS-000014","fix_id":"F-53721r795048_fix","documentable":null,"cci":["CCI-000382"],"nist":["CM-7 b"]}},{"id":"SV-250333","code":"control 'SV-250333' do\n  title 'The WebSphere Liberty Server must use an LDAP user registry.'\n  desc 'To ensure accountability and prevent unauthorized access, application server users must be uniquely identified and authenticated. This is typically accomplished via the use of a user store which is either local (OS-based) or centralized (LDAP) in nature. Best practice guideline to is to use a centralized enterprise LDAP server.\n\nTo ensure support to the enterprise, the authentication must use an enterprise solution.'\n  desc 'check', 'As a user with local file access to ${server.config.dir}/server.xml file, verify the LDAP user registry is used to authenticate users. If the LDAP user registry is not defined within server.xml, this is a finding. \n\n<featureManager>\n<feature>appSecurity-3.0</feature>\n<feature>ldapRegistry-3.0</feature>\n</featureManager> \n\n<ldapRegistry id=\"ldap\" realm=\"SampleLdapRealm\" host=\"${ldap.server.name}\" port=\"${ldap.server.port}\" ignoreCase=\"true\"\nbaseDN=\"${ldap.server.base.dn}\"\nldapType=\"${ldap.vendor.type}\"\nsearchTimeout=\"8m\">\n</ldapRegistry>'\n  desc 'fix', 'To ensure an enterprise user management system is configured to uniquely identify and authenticate users and processes acting on behalf of org users, the server.xml must be configured to use an ldap configuration as follows:\n\n<featureManager>\n<feature>appSecurity-3.0</feature>\n<feature>ldapRegistry-3.0</feature>\n</featureManager> \n\n<ldapRegistry id=\"ldap\" realm=\"SampleLdapRealm\" host=\"${ldap.server.name}\" port=\"${ldap.server.port}\" ignoreCase=\"true\"\nbaseDN=\"${ldap.server.base.dn}\"\nldapType=\"${ldap.vendor.type}\"\nsearchTimeout=\"8m\">\n</ldapRegistry>'\n  impact 0.5\n  ref 'DPMS Target IBM WebSphere Liberty Server'\n  tag check_id: 'C-53768r795050_chk'\n  tag severity: 'medium'\n  tag gid: 'V-250333'\n  tag rid: 'SV-250333r795052_rule'\n  tag stig_id: 'IBMW-LS-000380'\n  tag gtitle: 'SRG-APP-000148-AS-000101'\n  tag fix_id: 'F-53722r795051_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000764']\n  tag nist: ['IA-2']\nend","source_location":{"line":1,"ref":"U_IBM_WebSphere_Liberty_Server_STIG_V1R1/controls/SV-250333.rb"},"title":"The WebSphere Liberty Server must use an LDAP user registry.","desc":"To ensure accountability and prevent unauthorized access, application server users must be uniquely identified and authenticated. This is typically accomplished via the use of a user store which is either local (OS-based) or centralized (LDAP) in nature. Best practice guideline to is to use a centralized enterprise LDAP server.\n\nTo ensure support to the enterprise, the authentication must use an enterprise solution.","descriptions":{"default":"To ensure accountability and prevent unauthorized access, application server users must be uniquely identified and authenticated. This is typically accomplished via the use of a user store which is either local (OS-based) or centralized (LDAP) in nature. Best practice guideline to is to use a centralized enterprise LDAP server.\n\nTo ensure support to the enterprise, the authentication must use an enterprise solution.","check":"As a user with local file access to ${server.config.dir}/server.xml file, verify the LDAP user registry is used to authenticate users. If the LDAP user registry is not defined within server.xml, this is a finding. \n\n<featureManager>\n<feature>appSecurity-3.0</feature>\n<feature>ldapRegistry-3.0</feature>\n</featureManager> \n\n<ldapRegistry id=\"ldap\" realm=\"SampleLdapRealm\" host=\"${ldap.server.name}\" port=\"${ldap.server.port}\" ignoreCase=\"true\"\nbaseDN=\"${ldap.server.base.dn}\"\nldapType=\"${ldap.vendor.type}\"\nsearchTimeout=\"8m\">\n</ldapRegistry>","fix":"To ensure an enterprise user management system is configured to uniquely identify and authenticate users and processes acting on behalf of org users, the server.xml must be configured to use an ldap configuration as follows:\n\n<featureManager>\n<feature>appSecurity-3.0</feature>\n<feature>ldapRegistry-3.0</feature>\n</featureManager> \n\n<ldapRegistry id=\"ldap\" realm=\"SampleLdapRealm\" host=\"${ldap.server.name}\" port=\"${ldap.server.port}\" ignoreCase=\"true\"\nbaseDN=\"${ldap.server.base.dn}\"\nldapType=\"${ldap.vendor.type}\"\nsearchTimeout=\"8m\">\n</ldapRegistry>"},"impact":0.5,"refs":[{"ref":"DPMS Target IBM WebSphere Liberty Server"}],"tags":{"check_id":"C-53768r795050_chk","severity":"medium","gid":"V-250333","rid":"SV-250333r795052_rule","stig_id":"IBMW-LS-000380","gtitle":"SRG-APP-000148-AS-000101","fix_id":"F-53722r795051_fix","documentable":null,"cci":["CCI-000764"],"nist":["IA-2"]}},{"id":"SV-250334","code":"control 'SV-250334' do\n  title 'Basic Authentication must be disabled.'\n  desc 'Basic authentication does not use a centralized user store like LDAP. Not using a centralized user store complicates user management tasks and increases the risk that user accounts could remain on the system long after users have moved to their next deployment. Basic Auth also stores user credentials and passwords on the system and creates the potential for an attacker to circumvent strong authentication requirements like multi-factor or certificate based authentication.\n\nAllowing failover to Basic Auth allows the Liberty Server to fall back to basic authentication in the event certificate based authentication methods fail. Configuring the Liberty Server to fall back to basic authentication creates the potential for an attacker to circumvent strong authentication requirements and must be avoided.'\n  desc 'check', 'As a privileged user with local file access to the ${server.config.dir}/server.xml file, search the server.xml for the basicRegistry setting.\n\ngrep -i basicregistry server.xml\n\nSAMPLE:\n<basicRegistry id=\"basic\" realm=\"BasicRealm\">\n        <user name=\"employee0\" password=\"emp0pwd\" />\n        <user name=\"employee1\" password=\"emp1pwd\" />\n        <user name=\"manager0\" password=\"mgr0pwd\" />\n        <group name=\"employeeGroup\">\n            <member name=\"employee0\" />\n            <member name=\"employee1\" />\n        </group>\n    </basicRegistry>  \n\nIf <basicRegistry> settings are defined in server.xml, this is a finding.'\n  desc 'fix', 'Delete basicRegistry settings and re-configure the server.xml file to use a centralized LDAP user store. \n\nSAMPLE:\n\n<featureManager>\n<feature>appSecurity-3.0</feature>\n<feature>ldapRegistry-3.0</feature>\n</featureManager> \n\n<ldapRegistry id=\"ldap\" realm=\"SampleLdapRealm\" host=\"${ldap.server.name}\" port=\"${ldap.server.port}\" ignoreCase=\"true\"\nbaseDN=\"${ldap.server.base.dn}\"\nldapType=\"${ldap.vendor.type}\"\nsearchTimeout=\"8m\">\n</ldapRegistry>'\n  impact 0.5\n  ref 'DPMS Target IBM WebSphere Liberty Server'\n  tag check_id: 'C-53769r795053_chk'\n  tag severity: 'medium'\n  tag gid: 'V-250334'\n  tag rid: 'SV-250334r795055_rule'\n  tag stig_id: 'IBMW-LS-000381'\n  tag gtitle: 'SRG-APP-000148-AS-000101'\n  tag fix_id: 'F-53723r795054_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000764']\n  tag nist: ['IA-2']\nend","source_location":{"line":1,"ref":"U_IBM_WebSphere_Liberty_Server_STIG_V1R1/controls/SV-250334.rb"},"title":"Basic Authentication must be disabled.","desc":"Basic authentication does not use a centralized user store like LDAP. Not using a centralized user store complicates user management tasks and increases the risk that user accounts could remain on the system long after users have moved to their next deployment. Basic Auth also stores user credentials and passwords on the system and creates the potential for an attacker to circumvent strong authentication requirements like multi-factor or certificate based authentication.\n\nAllowing failover to Basic Auth allows the Liberty Server to fall back to basic authentication in the event certificate based authentication methods fail. Configuring the Liberty Server to fall back to basic authentication creates the potential for an attacker to circumvent strong authentication requirements and must be avoided.","descriptions":{"default":"Basic authentication does not use a centralized user store like LDAP. Not using a centralized user store complicates user management tasks and increases the risk that user accounts could remain on the system long after users have moved to their next deployment. Basic Auth also stores user credentials and passwords on the system and creates the potential for an attacker to circumvent strong authentication requirements like multi-factor or certificate based authentication.\n\nAllowing failover to Basic Auth allows the Liberty Server to fall back to basic authentication in the event certificate based authentication methods fail. Configuring the Liberty Server to fall back to basic authentication creates the potential for an attacker to circumvent strong authentication requirements and must be avoided.","check":"As a privileged user with local file access to the ${server.config.dir}/server.xml file, search the server.xml for the basicRegistry setting.\n\ngrep -i basicregistry server.xml\n\nSAMPLE:\n<basicRegistry id=\"basic\" realm=\"BasicRealm\">\n        <user name=\"employee0\" password=\"emp0pwd\" />\n        <user name=\"employee1\" password=\"emp1pwd\" />\n        <user name=\"manager0\" password=\"mgr0pwd\" />\n        <group name=\"employeeGroup\">\n            <member name=\"employee0\" />\n            <member name=\"employee1\" />\n        </group>\n    </basicRegistry>  \n\nIf <basicRegistry> settings are defined in server.xml, this is a finding.","fix":"Delete basicRegistry settings and re-configure the server.xml file to use a centralized LDAP user store. \n\nSAMPLE:\n\n<featureManager>\n<feature>appSecurity-3.0</feature>\n<feature>ldapRegistry-3.0</feature>\n</featureManager> \n\n<ldapRegistry id=\"ldap\" realm=\"SampleLdapRealm\" host=\"${ldap.server.name}\" port=\"${ldap.server.port}\" ignoreCase=\"true\"\nbaseDN=\"${ldap.server.base.dn}\"\nldapType=\"${ldap.vendor.type}\"\nsearchTimeout=\"8m\">\n</ldapRegistry>"},"impact":0.5,"refs":[{"ref":"DPMS Target IBM WebSphere Liberty Server"}],"tags":{"check_id":"C-53769r795053_chk","severity":"medium","gid":"V-250334","rid":"SV-250334r795055_rule","stig_id":"IBMW-LS-000381","gtitle":"SRG-APP-000148-AS-000101","fix_id":"F-53723r795054_fix","documentable":null,"cci":["CCI-000764"],"nist":["IA-2"]}},{"id":"SV-250335","code":"control 'SV-250335' do\n  title 'Multifactor authentication for network access to privileged accounts must be used.'\n  desc 'Multifactor authentication creates a layered defense and makes it more difficult for an unauthorized person to access the application server. If one factor is compromised or broken, the attacker still has at least one more barrier to breach before successfully breaking into the target. Unlike a simple username/password scenario where the attacker could gain access by knowing both the username and password without the user knowing his account was compromised, multifactor authentication adds the requirement that the attacker must have something from the user, such as a token, or to biometrically be the user.\n\nWhen accessing the application server via a network connection, administrative access to the application server must be PKI Hardware Token enabled.\n\nThe high level steps required for configuring Liberty Server to use certificate based authentication include the following:\n\n1. Configure Web Application with client certificate authentication.\n2. Configure Liberty SSL configuration with client authentication.\n3. Configure Liberty LDAP Security Configuration with certificate filter.\n\n'\n  desc 'check', 'As a user with local file access to ${server.config.dir}/server.xml file, verify the TLS connection used for managing the server is configured to use clientAuthentication.\n\n<featureManager>\n<feature>appSecurity-3.0</feature>\n<feature>ldapRegistry-3.0</feature>\n<feature>transportSecurity-1.0</feature>\n</featureManager> \n\nVerify the TLS connection used for managing the server is configured to use clientAuthentication. The following is used as an example.\n\nIf the clientAuthentication setting for the TLS management application is not set to \"true\", this is a finding.\n\nEXAMPLE:\n<!-- default SSL configuration is defaultSSLSettings -->      \n    <sslDefault sslRef=\"defaultSSLSettings\" />\n    <ssl id=\"defaultSSLSettings\" keyStoreRef=\"defaultKeyStore\" sslProtocol=\"SSL_TLSv2\" trustStoreRef=\"defaultTrustStore\"\nclientAuthentication=\"true\"/>\n\nAccess the web management interface via a web browser and verify TLS secured connectivity to the web based management application.'\n  desc 'fix', 'Refer to IBM documentation on how to configure TLS and client based certificate authentication for additional configuration details. The following is a summary list of items needed to configure the system for certificate based authentication. Production systems and installations will vary. \n\nThe application’s web.xml file must be configured to use client certs.\n\nEXAMPLE:\n<login-config>\n    <auth-method>CLIENT-CERT</auth-method>\n</login-config>\n\nThe server.xml features must be configured to use transportSecurity and an ldap configuration. \n\n<featureManager>\n<feature>appSecurity-3.0</feature>\n<feature>ldapRegistry-3.0</feature>\n<feature>transportSecurity-1.0</feature>\n</featureManager> \n\nThe server.xml TLS and LDAP settings must be configured. The following is an EXAMPLE only. \"Default\" verbiage and keystore information in the below SSL configuration will be different in production systems.\n\n <!-- default SSL configuration is defaultSSLSettings -->      \n    <sslDefault sslRef=\"defaultSSLSettings\" />\n    <ssl id=\"defaultSSLSettings\" keyStoreRef=\"defaultKeyStore\" sslProtocol=\"SSL_TLSv2\" trustStoreRef=\"defaultTrustStore\"\nclientAuthentication=\"true\"/>\n\n <keyStore id=\"defaultKeyStore\" location=\"key.jks\" type=\"JKS\" password=\"defaultPWD\" />\n <keyStore id=\"defaultTrustStore\" location=\"key.jks\" type=\"JKS\" password=\"defaultPWD\" />\n\nConfigure LDAP certificate filter settings according the certificates being used.\n\n<ldapRegistry id=\"ldap\" realm=\"SampleLdapRealm\" host=\"${ldap.server.name}\" port=\"${ldap.server.port}\" ignoreCase=\"true\"\nbaseDN=\"${ldap.server.base.dn}\"\nldapType=\"${ldap.vendor.type}\"\ncertificateMapMode=\"Certificate_Filter\" or \"Exact_DN\"\ncertificateFilter=\"${your certificate mapping}\"\nsearchTimeout=\"8m\"\nsslEnabled=\"true\">\n</ldapRegistry>'\n  impact 0.7\n  ref 'DPMS Target IBM WebSphere Liberty Server'\n  tag check_id: 'C-53770r795056_chk'\n  tag severity: 'high'\n  tag gid: 'V-250335'\n  tag rid: 'SV-250335r795058_rule'\n  tag stig_id: 'IBMW-LS-000390'\n  tag gtitle: 'SRG-APP-000149-AS-000102'\n  tag fix_id: 'F-53724r795057_fix'\n  tag satisfies: ['SRG-APP-000149-AS-000102', 'SRG-APP-000151-AS-000103', 'SRG-APP-000402-AS-000247', 'SRG-APP-000403-AS-000248', 'SRG-APP-000177-AS-000126']\n  tag 'documentable'\n  tag cci: ['CCI-000187', 'CCI-000765', 'CCI-000767', 'CCI-002009', 'CCI-002010']\n  tag nist: ['IA-5 (2) (a) (2)', 'IA-2 (1)', 'IA-2 (3)', 'IA-8 (1)', 'IA-8 (1)']\nend","source_location":{"line":1,"ref":"U_IBM_WebSphere_Liberty_Server_STIG_V1R1/controls/SV-250335.rb"},"title":"Multifactor authentication for network access to privileged accounts must be used.","desc":"Multifactor authentication creates a layered defense and makes it more difficult for an unauthorized person to access the application server. If one factor is compromised or broken, the attacker still has at least one more barrier to breach before successfully breaking into the target. Unlike a simple username/password scenario where the attacker could gain access by knowing both the username and password without the user knowing his account was compromised, multifactor authentication adds the requirement that the attacker must have something from the user, such as a token, or to biometrically be the user.\n\nWhen accessing the application server via a network connection, administrative access to the application server must be PKI Hardware Token enabled.\n\nThe high level steps required for configuring Liberty Server to use certificate based authentication include the following:\n\n1. Configure Web Application with client certificate authentication.\n2. Configure Liberty SSL configuration with client authentication.\n3. Configure Liberty LDAP Security Configuration with certificate filter.\n\n","descriptions":{"default":"Multifactor authentication creates a layered defense and makes it more difficult for an unauthorized person to access the application server. If one factor is compromised or broken, the attacker still has at least one more barrier to breach before successfully breaking into the target. Unlike a simple username/password scenario where the attacker could gain access by knowing both the username and password without the user knowing his account was compromised, multifactor authentication adds the requirement that the attacker must have something from the user, such as a token, or to biometrically be the user.\n\nWhen accessing the application server via a network connection, administrative access to the application server must be PKI Hardware Token enabled.\n\nThe high level steps required for configuring Liberty Server to use certificate based authentication include the following:\n\n1. Configure Web Application with client certificate authentication.\n2. Configure Liberty SSL configuration with client authentication.\n3. Configure Liberty LDAP Security Configuration with certificate filter.\n\n","check":"As a user with local file access to ${server.config.dir}/server.xml file, verify the TLS connection used for managing the server is configured to use clientAuthentication.\n\n<featureManager>\n<feature>appSecurity-3.0</feature>\n<feature>ldapRegistry-3.0</feature>\n<feature>transportSecurity-1.0</feature>\n</featureManager> \n\nVerify the TLS connection used for managing the server is configured to use clientAuthentication. The following is used as an example.\n\nIf the clientAuthentication setting for the TLS management application is not set to \"true\", this is a finding.\n\nEXAMPLE:\n<!-- default SSL configuration is defaultSSLSettings -->      \n    <sslDefault sslRef=\"defaultSSLSettings\" />\n    <ssl id=\"defaultSSLSettings\" keyStoreRef=\"defaultKeyStore\" sslProtocol=\"SSL_TLSv2\" trustStoreRef=\"defaultTrustStore\"\nclientAuthentication=\"true\"/>\n\nAccess the web management interface via a web browser and verify TLS secured connectivity to the web based management application.","fix":"Refer to IBM documentation on how to configure TLS and client based certificate authentication for additional configuration details. The following is a summary list of items needed to configure the system for certificate based authentication. Production systems and installations will vary. \n\nThe application’s web.xml file must be configured to use client certs.\n\nEXAMPLE:\n<login-config>\n    <auth-method>CLIENT-CERT</auth-method>\n</login-config>\n\nThe server.xml features must be configured to use transportSecurity and an ldap configuration. \n\n<featureManager>\n<feature>appSecurity-3.0</feature>\n<feature>ldapRegistry-3.0</feature>\n<feature>transportSecurity-1.0</feature>\n</featureManager> \n\nThe server.xml TLS and LDAP settings must be configured. The following is an EXAMPLE only. \"Default\" verbiage and keystore information in the below SSL configuration will be different in production systems.\n\n <!-- default SSL configuration is defaultSSLSettings -->      \n    <sslDefault sslRef=\"defaultSSLSettings\" />\n    <ssl id=\"defaultSSLSettings\" keyStoreRef=\"defaultKeyStore\" sslProtocol=\"SSL_TLSv2\" trustStoreRef=\"defaultTrustStore\"\nclientAuthentication=\"true\"/>\n\n <keyStore id=\"defaultKeyStore\" location=\"key.jks\" type=\"JKS\" password=\"defaultPWD\" />\n <keyStore id=\"defaultTrustStore\" location=\"key.jks\" type=\"JKS\" password=\"defaultPWD\" />\n\nConfigure LDAP certificate filter settings according the certificates being used.\n\n<ldapRegistry id=\"ldap\" realm=\"SampleLdapRealm\" host=\"${ldap.server.name}\" port=\"${ldap.server.port}\" ignoreCase=\"true\"\nbaseDN=\"${ldap.server.base.dn}\"\nldapType=\"${ldap.vendor.type}\"\ncertificateMapMode=\"Certificate_Filter\" or \"Exact_DN\"\ncertificateFilter=\"${your certificate mapping}\"\nsearchTimeout=\"8m\"\nsslEnabled=\"true\">\n</ldapRegistry>"},"impact":0.7,"refs":[{"ref":"DPMS Target IBM WebSphere Liberty Server"}],"tags":{"check_id":"C-53770r795056_chk","severity":"high","gid":"V-250335","rid":"SV-250335r795058_rule","stig_id":"IBMW-LS-000390","gtitle":"SRG-APP-000149-AS-000102","fix_id":"F-53724r795057_fix","satisfies":["SRG-APP-000149-AS-000102","SRG-APP-000151-AS-000103","SRG-APP-000402-AS-000247","SRG-APP-000403-AS-000248","SRG-APP-000177-AS-000126"],"documentable":null,"cci":["CCI-000187","CCI-000765","CCI-000767","CCI-002009","CCI-002010"],"nist":["IA-5 (2) (a) (2)","IA-2 (1)","IA-2 (3)","IA-8 (1)","IA-8 (1)"]}},{"id":"SV-250336","code":"control 'SV-250336' do\n  title 'The WebSphere Liberty Server must store only encrypted representations of user passwords.'\n  desc 'WebSphere Liberty can either provide a local account store or integrate with enterprise account stores such as LDAP directories. If the application server stores application passwords in the server.xml configuration files, the application server must store encrypted representations of passwords rather than unencrypted, clear-text passwords.\n\nThe Liberty Application Server provides a SecurityUtility tool that can take a plain-text or encoded password and convert it to an encrypted password. This tool does not update the ${server.config.dir/server.xml file directly; a manual update of the server.xml is needed once the utility is run. \n\nIt is imperative that administrators understand that the SecurityUtility tool must be run for each application password that is stored within the server.xml file.\n\n'\n  desc 'check', 'As a privileged user with file access to ${server.config.dir}/server.xml, review and ensure there are no clear-text passwords stored within the server.xml file.\n\nIf any passwords appear in plain text, or if any passwords start with {xor}, this is a finding.'\n  desc 'fix', 'For additional information regarding the use of the SecurityUtility command, refer to IBM’s website: \nhttps://www.ibm.com/docs/en/was-liberty/base?topic=applications-securityutility-command\n\nCreate a new xml file with file permissions of 660.\n\nFile owner and group membership is the same as the WebSphere Liberty server user.\n\nAdd the following line to the new xml file:\n\n<variable name=\"wlp.password.encryption.key\" value=\"mysecret\"/>\n\nIn the above, \"mysecret\" is the passphrase selected to create a cryptographic hash that represents the password.\n\nSave the file to a secured location. Note the path and name, as it will be needed when updating server.xml.\n\nEdit the server.xml file and add the following line:\n\n<include location=\"/path/<xml file created>\" />\n\nFor every unencrypted password in server.xml, run the following SecurityUtility command, which can be found in the Liberty Server install path:\n\nSecurityUtility encode --encoding=aes \n\nThis will prompt the user to enter the plain-text password stored within the server.xml file.\n\nThe SecurityUtility tool will generate an AES cryptographic hash of the password.\n\nCopy and replace the plain-text password with the hashed value.\n\nThis must be done for every plain-text password in server.xml.\n\nRestart the server by entering: \nserver stop <server name>\nserver start <server name>'\n  impact 0.7\n  ref 'DPMS Target IBM WebSphere Liberty Server'\n  tag check_id: 'C-53771r795059_chk'\n  tag severity: 'high'\n  tag gid: 'V-250336'\n  tag rid: 'SV-250336r795061_rule'\n  tag stig_id: 'IBMW-LS-000440'\n  tag gtitle: 'SRG-APP-000171-AS-000119'\n  tag fix_id: 'F-53725r795060_fix'\n  tag satisfies: ['SRG-APP-000171-AS-000119', 'SRG-APP-000428-AS-000265', 'SRG-APP-000429-AS-000157']\n  tag 'documentable'\n  tag cci: ['CCI-000196', 'CCI-002475', 'CCI-002476']\n  tag nist: ['IA-5 (1) (c)', 'SC-28 (1)', 'SC-28 (1)']\nend","source_location":{"line":1,"ref":"U_IBM_WebSphere_Liberty_Server_STIG_V1R1/controls/SV-250336.rb"},"title":"The WebSphere Liberty Server must store only encrypted representations of user passwords.","desc":"WebSphere Liberty can either provide a local account store or integrate with enterprise account stores such as LDAP directories. If the application server stores application passwords in the server.xml configuration files, the application server must store encrypted representations of passwords rather than unencrypted, clear-text passwords.\n\nThe Liberty Application Server provides a SecurityUtility tool that can take a plain-text or encoded password and convert it to an encrypted password. This tool does not update the ${server.config.dir/server.xml file directly; a manual update of the server.xml is needed once the utility is run. \n\nIt is imperative that administrators understand that the SecurityUtility tool must be run for each application password that is stored within the server.xml file.\n\n","descriptions":{"default":"WebSphere Liberty can either provide a local account store or integrate with enterprise account stores such as LDAP directories. If the application server stores application passwords in the server.xml configuration files, the application server must store encrypted representations of passwords rather than unencrypted, clear-text passwords.\n\nThe Liberty Application Server provides a SecurityUtility tool that can take a plain-text or encoded password and convert it to an encrypted password. This tool does not update the ${server.config.dir/server.xml file directly; a manual update of the server.xml is needed once the utility is run. \n\nIt is imperative that administrators understand that the SecurityUtility tool must be run for each application password that is stored within the server.xml file.\n\n","check":"As a privileged user with file access to ${server.config.dir}/server.xml, review and ensure there are no clear-text passwords stored within the server.xml file.\n\nIf any passwords appear in plain text, or if any passwords start with {xor}, this is a finding.","fix":"For additional information regarding the use of the SecurityUtility command, refer to IBM’s website: \nhttps://www.ibm.com/docs/en/was-liberty/base?topic=applications-securityutility-command\n\nCreate a new xml file with file permissions of 660.\n\nFile owner and group membership is the same as the WebSphere Liberty server user.\n\nAdd the following line to the new xml file:\n\n<variable name=\"wlp.password.encryption.key\" value=\"mysecret\"/>\n\nIn the above, \"mysecret\" is the passphrase selected to create a cryptographic hash that represents the password.\n\nSave the file to a secured location. Note the path and name, as it will be needed when updating server.xml.\n\nEdit the server.xml file and add the following line:\n\n<include location=\"/path/<xml file created>\" />\n\nFor every unencrypted password in server.xml, run the following SecurityUtility command, which can be found in the Liberty Server install path:\n\nSecurityUtility encode --encoding=aes \n\nThis will prompt the user to enter the plain-text password stored within the server.xml file.\n\nThe SecurityUtility tool will generate an AES cryptographic hash of the password.\n\nCopy and replace the plain-text password with the hashed value.\n\nThis must be done for every plain-text password in server.xml.\n\nRestart the server by entering: \nserver stop <server name>\nserver start <server name>"},"impact":0.7,"refs":[{"ref":"DPMS Target IBM WebSphere Liberty Server"}],"tags":{"check_id":"C-53771r795059_chk","severity":"high","gid":"V-250336","rid":"SV-250336r795061_rule","stig_id":"IBMW-LS-000440","gtitle":"SRG-APP-000171-AS-000119","fix_id":"F-53725r795060_fix","satisfies":["SRG-APP-000171-AS-000119","SRG-APP-000428-AS-000265","SRG-APP-000429-AS-000157"],"documentable":null,"cci":["CCI-000196","CCI-002475","CCI-002476"],"nist":["IA-5 (1) (c)","SC-28 (1)","SC-28 (1)"]}},{"id":"SV-250337","code":"control 'SV-250337' do\n  title 'The WebSphere Liberty Server must use TLS-enabled LDAP.'\n  desc 'Passwords need to be protected at all times, and encryption is the standard method for protecting passwords during transmission. If passwords are not encrypted, they can be plainly read (i.e., clear text) and easily compromised.\n\nApplication servers have the capability to use either certificates (tokens) or user IDs and passwords in order to authenticate. When the application server transmits or receives passwords, the passwords must be encrypted. The certificate used by LDAP to establish trust with incoming client requests must be imported into a trust keystore created on the Liberty Server (JDK ikeyman may be used to do this). The LDAP configuration must indicate it is using SSL, provide the BindDN and BindPassword and point to the trust keystore containing the LDAP certificate.'\n  desc 'check', 'As a user with local file access to ${server.config.dir}/server.xml, verify TLS-enabled LDAP is in use. If TLS-Enabled LDAP is not defined within server.xml, this is a finding. \n\n<featureManager>\n<feature>appSecurity-3.0</feature>\n<feature>ssl-1.0</feature>\n<feature>ldapRegistry-3.0</feature>\n</featureManager> \n\n<ldapRegistry id=\"ldap\" realm=\"SampleLdapRealm\" host=\"${ldap.server.name}\" port=\"${ldap.server.port}\" ignoreCase=\"true\"\nbaseDN=\"${ldap.server.base.dn}\"\nbindDN=\"${ldap.server.bind.dn}’\nbindPassword=\"${ldap.server.bind.password}\"\nsslEnabled=\"true\"\nsslRef=\"LDAPTLSSettings\"\nldapType=\"${ldap.vendor.type}\"\nsearchTimeout=\"8m\">\n</ldapRegistry> \n\n<sslDefault sslRef=\"LDAPTLSSettings\" />\n<ssl id=\"LDAPTLSSettings\" keyStoreRef=\"LDAPKeyStore\" trustStoreRef=\"LDAPTrustStore\" \nsslProtocol=\"TLSv1.2\"/>\n<keyStore id=\"LDAPKeyStore\" location=\"${server.config.dir}/LdapSSLKeyStore.jks\" type=\"JKS\" password=\"{xor}CDo9Hgw=\" />\n<keyStore id=\"LDAPTrustStore\" location=\"${server.config.dir}/LdapTLSTrustStore.jks\" type=\"JKS\" password=\"{xor}CDo9Hgw=\" />'\n  desc 'fix', 'To ensure the Liberty Server transmits only encrypted passwords, the ${server.config.dir}/server.xml must be configured as follows:\n\n<featureManager>\n<feature>appSecurity-3.0</feature>\n<feature>ssl-1.0</feature>\n<feature>ldapRegistry-3.0</feature>\n<feature>servlet-3.1</feature>\n<feature>ejbLite-3.1</feature>\n</featureManager> \n\n<ldapRegistry id=\"ldap\" realm=\"SampleLdapRealm\" host=\"${ldap.server.name}\" port=\"${ldap.server.port}\" ignoreCase=\"true\"\nbaseDN=\"${ldap.server.base.dn}\"\nbindDN=\"${ldap.server.bind.dn}’\nbindPassword=\"${ldap.server.bind.password}\"\nsslEnabled=\"true\"\nsslRef=\"LDAPTLSSettings\"\nldapType=\"${ldap.vendor.type}\"\nsearchTimeout=\"8m\">\n</ldapRegistry> \n\n<sslDefault sslRef=\"LDAPTLSSettings\" />\n<ssl id=\"LDAPTLSSettings\" keyStoreRef=\"LDAPKeyStore\" trustStoreRef=\"LDAPTrustStore\"\nsslProtocol=\"TLSv1.2\"\n />\n<keyStore id=\"LDAPKeyStore\" location=\"${server.config.dir}/LdapSSLKeyStore.jks\" type=\"JKS\" password=\"{xor}CDo9Hgw=\" />\n<keyStore id=\"LDAPTrustStore\" location=\"${server.config.dir}/LdapTLSTrustStore.jks\" type=\"JKS\" password=\"{xor}CDo9Hgw=\" />'\n  impact 0.7\n  ref 'DPMS Target IBM WebSphere Liberty Server'\n  tag check_id: 'C-53772r795062_chk'\n  tag severity: 'high'\n  tag gid: 'V-250337'\n  tag rid: 'SV-250337r795064_rule'\n  tag stig_id: 'IBMW-LS-000450'\n  tag gtitle: 'SRG-APP-000172-AS-000120'\n  tag fix_id: 'F-53726r795063_fix'\n  tag 'documentable'\n  tag cci: ['CCI-000197']\n  tag nist: ['IA-5 (1) (c)']\nend","source_location":{"line":1,"ref":"U_IBM_WebSphere_Liberty_Server_STIG_V1R1/controls/SV-250337.rb"},"title":"The WebSphere Liberty Server must use TLS-enabled LDAP.","desc":"Passwords need to be protected at all times, and encryption is the standard method for protecting passwords during transmission. If passwords are not encrypted, they can be plainly read (i.e., clear text) and easily compromised.\n\nApplication servers have the capability to use either certificates (tokens) or user IDs and passwords in order to authenticate. When the application server transmits or receives passwords, the passwords must be encrypted. The certificate used by LDAP to establish trust with incoming client requests must be imported into a trust keystore created on the Liberty Server (JDK ikeyman may be used to do this). The LDAP configuration must indicate it is using SSL, provide the BindDN and BindPassword and point to the trust keystore containing the LDAP certificate.","descriptions":{"default":"Passwords need to be protected at all times, and encryption is the standard method for protecting passwords during transmission. If passwords are not encrypted, they can be plainly read (i.e., clear text) and easily compromised.\n\nApplication servers have the capability to use either certificates (tokens) or user IDs and passwords in order to authenticate. When the application server transmits or receives passwords, the passwords must be encrypted. The certificate used by LDAP to establish trust with incoming client requests must be imported into a trust keystore created on the Liberty Server (JDK ikeyman may be used to do this). The LDAP configuration must indicate it is using SSL, provide the BindDN and BindPassword and point to the trust keystore containing the LDAP certificate.","check":"As a user with local file access to ${server.config.dir}/server.xml, verify TLS-enabled LDAP is in use. If TLS-Enabled LDAP is not defined within server.xml, this is a finding. \n\n<featureManager>\n<feature>appSecurity-3.0</feature>\n<feature>ssl-1.0</feature>\n<feature>ldapRegistry-3.0</feature>\n</featureManager> \n\n<ldapRegistry id=\"ldap\" realm=\"SampleLdapRealm\" host=\"${ldap.server.name}\" port=\"${ldap.server.port}\" ignoreCase=\"true\"\nbaseDN=\"${ldap.server.base.dn}\"\nbindDN=\"${ldap.server.bind.dn}’\nbindPassword=\"${ldap.server.bind.password}\"\nsslEnabled=\"true\"\nsslRef=\"LDAPTLSSettings\"\nldapType=\"${ldap.vendor.type}\"\nsearchTimeout=\"8m\">\n</ldapRegistry> \n\n<sslDefault sslRef=\"LDAPTLSSettings\" />\n<ssl id=\"LDAPTLSSettings\" keyStoreRef=\"LDAPKeyStore\" trustStoreRef=\"LDAPTrustStore\" \nsslProtocol=\"TLSv1.2\"/>\n<keyStore id=\"LDAPKeyStore\" location=\"${server.config.dir}/LdapSSLKeyStore.jks\" type=\"JKS\" password=\"{xor}CDo9Hgw=\" />\n<keyStore id=\"LDAPTrustStore\" location=\"${server.config.dir}/LdapTLSTrustStore.jks\" type=\"JKS\" password=\"{xor}CDo9Hgw=\" />","fix":"To ensure the Liberty Server transmits only encrypted passwords, the ${server.config.dir}/server.xml must be configured as follows:\n\n<featureManager>\n<feature>appSecurity-3.0</feature>\n<feature>ssl-1.0</feature>\n<feature>ldapRegistry-3.0</feature>\n<feature>servlet-3.1</feature>\n<feature>ejbLite-3.1</feature>\n</featureManager> \n\n<ldapRegistry id=\"ldap\" realm=\"SampleLdapRealm\" host=\"${ldap.server.name}\" port=\"${ldap.server.port}\" ignoreCase=\"true\"\nbaseDN=\"${ldap.server.base.dn}\"\nbindDN=\"${ldap.server.bind.dn}’\nbindPassword=\"${ldap.server.bind.password}\"\nsslEnabled=\"true\"\nsslRef=\"LDAPTLSSettings\"\nldapType=\"${ldap.vendor.type}\"\nsearchTimeout=\"8m\">\n</ldapRegistry> \n\n<sslDefault sslRef=\"LDAPTLSSettings\" />\n<ssl id=\"LDAPTLSSettings\" keyStoreRef=\"LDAPKeyStore\" trustStoreRef=\"LDAPTrustStore\"\nsslProtocol=\"TLSv1.2\"\n />\n<keyStore id=\"LDAPKeyStore\" location=\"${server.config.dir}/LdapSSLKeyStore.jks\" type=\"JKS\" password=\"{xor}CDo9Hgw=\" />\n<keyStore id=\"LDAPTrustStore\" location=\"${server.config.dir}/LdapTLSTrustStore.jks\" type=\"JKS\" password=\"{xor}CDo9Hgw=\" />"},"impact":0.7,"refs":[{"ref":"DPMS Target IBM WebSphere Liberty Server"}],"tags":{"check_id":"C-53772r795062_chk","severity":"high","gid":"V-250337","rid":"SV-250337r795064_rule","stig_id":"IBMW-LS-000450","gtitle":"SRG-APP-000172-AS-000120","fix_id":"F-53726r795063_fix","documentable":null,"cci":["CCI-000197"],"nist":["IA-5 (1) (c)"]}},{"id":"SV-250338","code":"control 'SV-250338' do\n  title 'The WebSphere Liberty Server must use DoD-issued/signed certificates.'\n  desc 'The cornerstone of PKI is the private key used to encrypt or digitally sign information. The key by itself is a cryptographic value that does not contain specific user information, but the key can be mapped to a user. Without mapping the certificate used to authenticate to the user account, the ability to determine the identity of the individual user or group will not be available for forensic analysis.\n\n'\n  desc 'check', 'As a privileged user with access to the ${server.config.dir}/server.xml file; search for SSLDefault in order to identify the default SSL configuration.\n\ngrep -i ssldefault server.xml\n\nIdentify the default ssl configuration by examining the sslRef flag.\n\nSAMPLE:\n <sslDefault sslRef=\"DefaultTLSSettings\" /> \n\nReview the default ssl configuration to identify the default truststore.\n\nSAMPLE:\n <ssl id=\"DefaultTLSSettings\" keyStoreRef=\"defaultKeyStore\" />\n       <keyStore id=\"LDAPTrustStore\" location=\"${server.config.dir}/liberty.ks\" type=\"JKS\" password=\"xxxxxxx\" />\n\nUse the java keytool or ikeyman utilities to open and examine the certificates stored in the truststore.\n\nIf the certificates are self signed or not signed by a DoD approved CA, this is a finding.'\n  desc 'fix', 'Do not use self-signed certificates in a production environment. Only import certificates signed by an authorized DoD CA or authorized for DoD use. \n\nObtain the signer certificate either as a Base 64-encoded ASCII file or as binary DER data. \n\nUsing the JDK’s ikeyman or keytool utility, open the default trusted keystore specified in the ${server.config.dir}/server.xml. \n\nClick on signer certificates and import the file that contains the DoD signed certificate.'\n  impact 0.5\n  ref 'DPMS Target IBM WebSphere Liberty Server'\n  tag check_id: 'C-53773r795105_chk'\n  tag severity: 'medium'\n  tag gid: 'V-250338'\n  tag rid: 'SV-250338r795106_rule'\n  tag stig_id: 'IBMW-LS-000500'\n  tag gtitle: 'SRG-APP-000177-AS-000126'\n  tag fix_id: 'F-53727r795066_fix'\n  tag satisfies: ['SRG-APP-000177-AS-000126', 'SRG-APP-000427-AS-000264', 'SRG-APP-000514-AS-000137']\n  tag 'documentable'\n  tag cci: ['CCI-000187', 'CCI-002450', 'CCI-002470']\n  tag nist: ['IA-5 (2) (a) (2)', 'SC-13 b', 'SC-23 (5)']\nend","source_location":{"line":1,"ref":"U_IBM_WebSphere_Liberty_Server_STIG_V1R1/controls/SV-250338.rb"},"title":"The WebSphere Liberty Server must use DoD-issued/signed certificates.","desc":"The cornerstone of PKI is the private key used to encrypt or digitally sign information. The key by itself is a cryptographic value that does not contain specific user information, but the key can be mapped to a user. Without mapping the certificate used to authenticate to the user account, the ability to determine the identity of the individual user or group will not be available for forensic analysis.\n\n","descriptions":{"default":"The cornerstone of PKI is the private key used to encrypt or digitally sign information. The key by itself is a cryptographic value that does not contain specific user information, but the key can be mapped to a user. Without mapping the certificate used to authenticate to the user account, the ability to determine the identity of the individual user or group will not be available for forensic analysis.\n\n","check":"As a privileged user with access to the ${server.config.dir}/server.xml file; search for SSLDefault in order to identify the default SSL configuration.\n\ngrep -i ssldefault server.xml\n\nIdentify the default ssl configuration by examining the sslRef flag.\n\nSAMPLE:\n <sslDefault sslRef=\"DefaultTLSSettings\" /> \n\nReview the default ssl configuration to identify the default truststore.\n\nSAMPLE:\n <ssl id=\"DefaultTLSSettings\" keyStoreRef=\"defaultKeyStore\" />\n       <keyStore id=\"LDAPTrustStore\" location=\"${server.config.dir}/liberty.ks\" type=\"JKS\" password=\"xxxxxxx\" />\n\nUse the java keytool or ikeyman utilities to open and examine the certificates stored in the truststore.\n\nIf the certificates are self signed or not signed by a DoD approved CA, this is a finding.","fix":"Do not use self-signed certificates in a production environment. Only import certificates signed by an authorized DoD CA or authorized for DoD use. \n\nObtain the signer certificate either as a Base 64-encoded ASCII file or as binary DER data. \n\nUsing the JDK’s ikeyman or keytool utility, open the default trusted keystore specified in the ${server.config.dir}/server.xml. \n\nClick on signer certificates and import the file that contains the DoD signed certificate."},"impact":0.5,"refs":[{"ref":"DPMS Target IBM WebSphere Liberty Server"}],"tags":{"check_id":"C-53773r795105_chk","severity":"medium","gid":"V-250338","rid":"SV-250338r795106_rule","stig_id":"IBMW-LS-000500","gtitle":"SRG-APP-000177-AS-000126","fix_id":"F-53727r795066_fix","satisfies":["SRG-APP-000177-AS-000126","SRG-APP-000427-AS-000264","SRG-APP-000514-AS-000137"],"documentable":null,"cci":["CCI-000187","CCI-002450","CCI-002470"],"nist":["IA-5 (2) (a) (2)","SC-13 b","SC-23 (5)"]}},{"id":"SV-250339","code":"control 'SV-250339' do\n  title 'The WebSphere Liberty Server must use FIPS 140-2 approved encryption modules when authenticating users and processes.'\n  desc 'Application servers must use and meet requirements of the DoD Enterprise PKI infrastructure for application authentication. Encryption is only as good as the encryption modules used. Unapproved cryptographic module algorithms cannot be verified and cannot be relied upon to provide confidentiality or integrity, and DoD data may be compromised due to weak algorithms. The use of TLS provides confidentiality of data in transit between the application server and client. FIPS 140-2 approved TLS versions include TLS V1.0 or greater. \n\nTLS must be enabled and non-FIPS-approved SSL versions must be disabled. NIST SP 800-52 specifies the preferred configurations for government systems.\n\n'\n  desc 'check', 'Review the ${server.config.dir}/jvm.options file. Verify FIPS is in use. If the -Dcom.ibm.jsse2.usefipsprovider=true property is not set in the ${server.config.dir}/jvm.options file, this is a finding.\n\nReview the ${JAVA_HOME}/jre/lib/security/java.security file. If the ${JAVA_HOME}/jre/lib/security/java.security file does not contain the following settings, this is a finding. \n\nssl.SocketFactory.provider=com.ibm.jsse2.SSLSocketFactoryImpl\nssl.ServerSocketFactory.provider=com.ibm.jsse2.SSLServerSocketFactoryImpl\n\nLocate the list of cryptographic providers and replace it with the following list in the following order:\n\nsecurity.provider.1=com.ibm.crypto.fips.provider.IBMJCEFIPS\nsecurity.provider.2=com.ibm.jsse2.IBMJSSEProvider2\nsecurity.provider.3=com.ibm.crypto.provider.IBMJCE\nsecurity.provider.4=com.ibm.security.jgss.IBMJGSSProvider\nsecurity.provider.5=com.ibm.security.cert.IBMCertPath\nsecurity.provider.6=com.ibm.security.sasl.IBMSASL\nsecurity.provider.7=com.ibm.xml.crypto.IBMXMLCryptoProvider\nsecurity.provider.8=com.ibm.xml.enc.IBMXMLEncProvider\nsecurity.provider.9=org.apache.harmony.security.provider.PolicyProvider\nsecurity.provider.10=com.ibm.security.jgss.mech.spnego.IBMSPNEGO'\n  desc 'fix', 'Edit the ${server.config.dir}/jvm.options file. Add or modify the -Dcom.ibm.jsse2.usefipsprovider=true property to enable the JSSE2 provider to run in FIPS 140-2 mode. \n\nEdit ${JAVA_HOME}/jre/lib/security/java.security file to register additional cryptographic package provides. Update these two lines: \n\n#ssl.SocketFactory.provider=\n#ssl.ServerSocketFactory.provider=\nto\nssl.SocketFactory.provider=com.ibm.jsse2.SSLSocketFactoryImpl\nssl.ServerSocketFactory.provider=com.ibm.jsse2.SSLServerSocketFactoryImpl\n\nLocate the list of cryptographic providers that are located after the line\n# List\nof providers and their preference orders and replace it with the following list:\nsecurity.provider.1=com.ibm.crypto.fips.provider.IBMJCEFIPS\nsecurity.provider.2=com.ibm.jsse2.IBMJSSEProvider2\nsecurity.provider.3=com.ibm.crypto.provider.IBMJCE\nsecurity.provider.4=com.ibm.security.jgss.IBMJGSSProvider\nsecurity.provider.5=com.ibm.security.cert.IBMCertPath\nsecurity.provider.6=com.ibm.security.sasl.IBMSASL\nsecurity.provider.7=com.ibm.xml.crypto.IBMXMLCryptoProvider\nsecurity.provider.8=com.ibm.xml.enc.IBMXMLEncProvider\nsecurity.provider.9=org.apache.harmony.security.provider.PolicyProvider\nsecurity.provider.10=com.ibm.security.jgss.mech.spnego.IBMSPNEGO'\n  impact 0.7\n  ref 'DPMS Target IBM WebSphere Liberty Server'\n  tag check_id: 'C-53774r795068_chk'\n  tag severity: 'high'\n  tag gid: 'V-250339'\n  tag rid: 'SV-250339r795070_rule'\n  tag stig_id: 'IBMW-LS-000520'\n  tag gtitle: 'SRG-APP-000179-AS-000129'\n  tag fix_id: 'F-53728r795069_fix'\n  tag satisfies: ['SRG-APP-000179-AS-000129', 'SRG-APP-000224-AS-000152', 'SRG-APP-000416-AS-000140', 'SRG-APP-000439-AS-000155', 'SRG-APP-000442-AS-000259', 'SRG-APP-000514-AS-000136']\n  tag 'documentable'\n  tag cci: ['CCI-000803', 'CCI-001188', 'CCI-002418', 'CCI-002422', 'CCI-002450']\n  tag nist: ['IA-7', 'SC-23 (3)', 'SC-8', 'SC-8 (2)', 'SC-13 b']\nend","source_location":{"line":1,"ref":"U_IBM_WebSphere_Liberty_Server_STIG_V1R1/controls/SV-250339.rb"},"title":"The WebSphere Liberty Server must use FIPS 140-2 approved encryption modules when authenticating users and processes.","desc":"Application servers must use and meet requirements of the DoD Enterprise PKI infrastructure for application authentication. Encryption is only as good as the encryption modules used. Unapproved cryptographic module algorithms cannot be verified and cannot be relied upon to provide confidentiality or integrity, and DoD data may be compromised due to weak algorithms. The use of TLS provides confidentiality of data in transit between the application server and client. FIPS 140-2 approved TLS versions include TLS V1.0 or greater. \n\nTLS must be enabled and non-FIPS-approved SSL versions must be disabled. NIST SP 800-52 specifies the preferred configurations for government systems.\n\n","descriptions":{"default":"Application servers must use and meet requirements of the DoD Enterprise PKI infrastructure for application authentication. Encryption is only as good as the encryption modules used. Unapproved cryptographic module algorithms cannot be verified and cannot be relied upon to provide confidentiality or integrity, and DoD data may be compromised due to weak algorithms. The use of TLS provides confidentiality of data in transit between the application server and client. FIPS 140-2 approved TLS versions include TLS V1.0 or greater. \n\nTLS must be enabled and non-FIPS-approved SSL versions must be disabled. NIST SP 800-52 specifies the preferred configurations for government systems.\n\n","check":"Review the ${server.config.dir}/jvm.options file. Verify FIPS is in use. If the -Dcom.ibm.jsse2.usefipsprovider=true property is not set in the ${server.config.dir}/jvm.options file, this is a finding.\n\nReview the ${JAVA_HOME}/jre/lib/security/java.security file. If the ${JAVA_HOME}/jre/lib/security/java.security file does not contain the following settings, this is a finding. \n\nssl.SocketFactory.provider=com.ibm.jsse2.SSLSocketFactoryImpl\nssl.ServerSocketFactory.provider=com.ibm.jsse2.SSLServerSocketFactoryImpl\n\nLocate the list of cryptographic providers and replace it with the following list in the following order:\n\nsecurity.provider.1=com.ibm.crypto.fips.provider.IBMJCEFIPS\nsecurity.provider.2=com.ibm.jsse2.IBMJSSEProvider2\nsecurity.provider.3=com.ibm.crypto.provider.IBMJCE\nsecurity.provider.4=com.ibm.security.jgss.IBMJGSSProvider\nsecurity.provider.5=com.ibm.security.cert.IBMCertPath\nsecurity.provider.6=com.ibm.security.sasl.IBMSASL\nsecurity.provider.7=com.ibm.xml.crypto.IBMXMLCryptoProvider\nsecurity.provider.8=com.ibm.xml.enc.IBMXMLEncProvider\nsecurity.provider.9=org.apache.harmony.security.provider.PolicyProvider\nsecurity.provider.10=com.ibm.security.jgss.mech.spnego.IBMSPNEGO","fix":"Edit the ${server.config.dir}/jvm.options file. Add or modify the -Dcom.ibm.jsse2.usefipsprovider=true property to enable the JSSE2 provider to run in FIPS 140-2 mode. \n\nEdit ${JAVA_HOME}/jre/lib/security/java.security file to register additional cryptographic package provides. Update these two lines: \n\n#ssl.SocketFactory.provider=\n#ssl.ServerSocketFactory.provider=\nto\nssl.SocketFactory.provider=com.ibm.jsse2.SSLSocketFactoryImpl\nssl.ServerSocketFactory.provider=com.ibm.jsse2.SSLServerSocketFactoryImpl\n\nLocate the list of cryptographic providers that are located after the line\n# List\nof providers and their preference orders and replace it with the following list:\nsecurity.provider.1=com.ibm.crypto.fips.provider.IBMJCEFIPS\nsecurity.provider.2=com.ibm.jsse2.IBMJSSEProvider2\nsecurity.provider.3=com.ibm.crypto.provider.IBMJCE\nsecurity.provider.4=com.ibm.security.jgss.IBMJGSSProvider\nsecurity.provider.5=com.ibm.security.cert.IBMCertPath\nsecurity.provider.6=com.ibm.security.sasl.IBMSASL\nsecurity.provider.7=com.ibm.xml.crypto.IBMXMLCryptoProvider\nsecurity.provider.8=com.ibm.xml.enc.IBMXMLEncProvider\nsecurity.provider.9=org.apache.harmony.security.provider.PolicyProvider\nsecurity.provider.10=com.ibm.security.jgss.mech.spnego.IBMSPNEGO"},"impact":0.7,"refs":[{"ref":"DPMS Target IBM WebSphere Liberty Server"}],"tags":{"check_id":"C-53774r795068_chk","severity":"high","gid":"V-250339","rid":"SV-250339r795070_rule","stig_id":"IBMW-LS-000520","gtitle":"SRG-APP-000179-AS-000129","fix_id":"F-53728r795069_fix","satisfies":["SRG-APP-000179-AS-000129","SRG-APP-000224-AS-000152","SRG-APP-000416-AS-000140","SRG-APP-000439-AS-000155","SRG-APP-000442-AS-000259","SRG-APP-000514-AS-000136"],"documentable":null,"cci":["CCI-000803","CCI-001188","CCI-002418","CCI-002422","CCI-002450"],"nist":["IA-7","SC-23 (3)","SC-8","SC-8 (2)","SC-13 b"]}},{"id":"SV-250340","code":"control 'SV-250340' do\n  title 'HTTP session timeout must be configured.'\n  desc 'An attacker can take advantage of user sessions that are left open, thus bypassing the user authentication process.\n\nTo thwart the vulnerability of open and unused user sessions, the application server must be configured to close the sessions when a configured condition or trigger event is met.\n\nSession termination terminates all processes associated with a user’s logical session except those processes that are specifically created by the user (i.e., session owner) to continue after the session is terminated.\n\nConditions or trigger events requiring automatic session termination can include, for example, periods of user inactivity, targeted responses to certain types of incidents, and time-of-day restrictions on information system use.\n\n'\n  desc 'check', 'As a user with access to the server xml file, review the contents and verify the httpSession time out setting is configured for 10 minutes.\n\nIf the ${server.config.dir}/server.xml does not define the timeout setting as 10 minutes, this is a finding.\n\n<httpSession invalidationTimeout=\"10m\"/>'\n  desc 'fix', 'The ${server.config.dir}/server.xml file must be configured to update the invalidationTimeout attribute on the httpSession element to set the session timeout value in hours (h) or minutes (m). The server.xml file must define the following: \n\n<httpSession invalidationTimeout=\"10m\"/>  \n\nBy default, httpSession invalidationTimeout is set to 30m.'\n  impact 0.5\n  ref 'DPMS Target IBM WebSphere Liberty Server'\n  tag check_id: 'C-53775r795071_chk'\n  tag severity: 'medium'\n  tag gid: 'V-250340'\n  tag rid: 'SV-250340r795073_rule'\n  tag stig_id: 'IBMW-LS-000720'\n  tag gtitle: 'SRG-APP-000295-AS-000263'\n  tag fix_id: 'F-53729r795072_fix'\n  tag satisfies: ['SRG-APP-000295-AS-000263', 'SRG-APP-000389-AS-000253']\n  tag 'documentable'\n  tag cci: ['CCI-002038', 'CCI-002361']\n  tag nist: ['IA-11', 'AC-12']\nend","source_location":{"line":1,"ref":"U_IBM_WebSphere_Liberty_Server_STIG_V1R1/controls/SV-250340.rb"},"title":"HTTP session timeout must be configured.","desc":"An attacker can take advantage of user sessions that are left open, thus bypassing the user authentication process.\n\nTo thwart the vulnerability of open and unused user sessions, the application server must be configured to close the sessions when a configured condition or trigger event is met.\n\nSession termination terminates all processes associated with a user’s logical session except those processes that are specifically created by the user (i.e., session owner) to continue after the session is terminated.\n\nConditions or trigger events requiring automatic session termination can include, for example, periods of user inactivity, targeted responses to certain types of incidents, and time-of-day restrictions on information system use.\n\n","descriptions":{"default":"An attacker can take advantage of user sessions that are left open, thus bypassing the user authentication process.\n\nTo thwart the vulnerability of open and unused user sessions, the application server must be configured to close the sessions when a configured condition or trigger event is met.\n\nSession termination terminates all processes associated with a user’s logical session except those processes that are specifically created by the user (i.e., session owner) to continue after the session is terminated.\n\nConditions or trigger events requiring automatic session termination can include, for example, periods of user inactivity, targeted responses to certain types of incidents, and time-of-day restrictions on information system use.\n\n","check":"As a user with access to the server xml file, review the contents and verify the httpSession time out setting is configured for 10 minutes.\n\nIf the ${server.config.dir}/server.xml does not define the timeout setting as 10 minutes, this is a finding.\n\n<httpSession invalidationTimeout=\"10m\"/>","fix":"The ${server.config.dir}/server.xml file must be configured to update the invalidationTimeout attribute on the httpSession element to set the session timeout value in hours (h) or minutes (m). The server.xml file must define the following: \n\n<httpSession invalidationTimeout=\"10m\"/>  \n\nBy default, httpSession invalidationTimeout is set to 30m."},"impact":0.5,"refs":[{"ref":"DPMS Target IBM WebSphere Liberty Server"}],"tags":{"check_id":"C-53775r795071_chk","severity":"medium","gid":"V-250340","rid":"SV-250340r795073_rule","stig_id":"IBMW-LS-000720","gtitle":"SRG-APP-000295-AS-000263","fix_id":"F-53729r795072_fix","satisfies":["SRG-APP-000295-AS-000263","SRG-APP-000389-AS-000253"],"documentable":null,"cci":["CCI-002038","CCI-002361"],"nist":["IA-11","AC-12"]}},{"id":"SV-250341","code":"control 'SV-250341' do\n  title 'Application security must be enabled on the WebSphere Liberty Server.'\n  desc 'Application security enables security for the applications in the environment. This type of security provides application isolation and requirements for authenticating application users. When a user enables security, both administrative and application security is enabled. \n\nApplication security is in effect only when administrative security is enabled via the security feature. If the application server is to be used for only web applications, only the servlet-3.1 feature needs to be defined. If the application server is to be used for only ejb applications, only the ejbLite-3.1 feature needs to be defined. If both web and ejb applications are to be deployed on the application server, then both the servlet-3.1 and ejbLite-3.1 features need to be defined. The check and fix assumes that the application server will have both web and ejb applications deployed.\n\n'\n  desc 'check', 'As a user with local file access to ${server.config.dir}/server.xml file, verify application security is enabled. \n\nIf the appSecurity-3.0 feature is not defined within server.xml, this is a finding.\n\n<featureManager>\n  <feature>appSecurity-3.0</feature>\n</featureManager>'\n  desc 'fix', 'Configure the  ${server.config.dir}/server.xml file and add the appSecurity-3.0 feature. \n\n<featureManager>\n<feature>appSecurity-3.0</feature>\n</featureManager>\n\nReview ${server.config.dir}/logs/messages.log\n\nValidate log entry that indicates \"Security service is ready\".'\n  impact 0.7\n  ref 'DPMS Target IBM WebSphere Liberty Server'\n  tag check_id: 'C-53776r795074_chk'\n  tag severity: 'high'\n  tag gid: 'V-250341'\n  tag rid: 'SV-250341r795076_rule'\n  tag stig_id: 'IBMW-LS-000770'\n  tag gtitle: 'SRG-APP-000315-AS-000094'\n  tag fix_id: 'F-53730r795075_fix'\n  tag satisfies: ['SRG-APP-000315-AS-000094', 'SRG-APP-000014-AS-000009']\n  tag 'documentable'\n  tag cci: ['CCI-000068', 'CCI-002314']\n  tag nist: ['AC-17 (2)', 'AC-17 (1)']\nend","source_location":{"line":1,"ref":"U_IBM_WebSphere_Liberty_Server_STIG_V1R1/controls/SV-250341.rb"},"title":"Application security must be enabled on the WebSphere Liberty Server.","desc":"Application security enables security for the applications in the environment. This type of security provides application isolation and requirements for authenticating application users. When a user enables security, both administrative and application security is enabled. \n\nApplication security is in effect only when administrative security is enabled via the security feature. If the application server is to be used for only web applications, only the servlet-3.1 feature needs to be defined. If the application server is to be used for only ejb applications, only the ejbLite-3.1 feature needs to be defined. If both web and ejb applications are to be deployed on the application server, then both the servlet-3.1 and ejbLite-3.1 features need to be defined. The check and fix assumes that the application server will have both web and ejb applications deployed.\n\n","descriptions":{"default":"Application security enables security for the applications in the environment. This type of security provides application isolation and requirements for authenticating application users. When a user enables security, both administrative and application security is enabled. \n\nApplication security is in effect only when administrative security is enabled via the security feature. If the application server is to be used for only web applications, only the servlet-3.1 feature needs to be defined. If the application server is to be used for only ejb applications, only the ejbLite-3.1 feature needs to be defined. If both web and ejb applications are to be deployed on the application server, then both the servlet-3.1 and ejbLite-3.1 features need to be defined. The check and fix assumes that the application server will have both web and ejb applications deployed.\n\n","check":"As a user with local file access to ${server.config.dir}/server.xml file, verify application security is enabled. \n\nIf the appSecurity-3.0 feature is not defined within server.xml, this is a finding.\n\n<featureManager>\n  <feature>appSecurity-3.0</feature>\n</featureManager>","fix":"Configure the  ${server.config.dir}/server.xml file and add the appSecurity-3.0 feature. \n\n<featureManager>\n<feature>appSecurity-3.0</feature>\n</featureManager>\n\nReview ${server.config.dir}/logs/messages.log\n\nValidate log entry that indicates \"Security service is ready\"."},"impact":0.7,"refs":[{"ref":"DPMS Target IBM WebSphere Liberty Server"}],"tags":{"check_id":"C-53776r795074_chk","severity":"high","gid":"V-250341","rid":"SV-250341r795076_rule","stig_id":"IBMW-LS-000770","gtitle":"SRG-APP-000315-AS-000094","fix_id":"F-53730r795075_fix","satisfies":["SRG-APP-000315-AS-000094","SRG-APP-000014-AS-000009"],"documentable":null,"cci":["CCI-000068","CCI-002314"],"nist":["AC-17 (2)","AC-17 (1)"]}},{"id":"SV-250342","code":"control 'SV-250342' do\n  title 'Users in a reader-role must be authorized.'\n  desc 'The reader role is a management role that allows read-only access to select administrative REST APIs as well as the Admin Center UI (adminCenter-1.0). Preventing non-privileged users from viewing privileged functions mitigates the risk that unauthorized individuals or processes may gain unnecessary access to information or privileges.\n\nUsers granted reader role access must be authorized.'\n  desc 'check', 'As a user with access to the ${server.config.dir}/server.xml file. Review the contents and identify if users have been granted the reader-role.\n\ngrep -i reader-role ${server.config.dir}/server.xml\n\nIf the reader-role has been created, users in that role must be documented and approved. \n\nIf users in the reader-role are not approved, this is a finding.\n\nEXAMPLE:\n<featureManager><feature>appSecurity-3.0</feature></featureManager> \n\n<reader-role>\n<group>group</group>\n<group-access-id>group:realmName/groupUniqueId</group-access-id>\n<user>user</user>\n<user-access-id>user:realmName/userUniqueId</user-access-id>\n</reader-role>'\n  desc 'fix', 'Edit the ${server.config.dir}/server.xml file. If unauthorized users have been added to the reader-role, remove those users. \n\nOtherwise, document the users who are granted the reader-role access.\n\nTo allow read-only access to select administrative REST APIs, the ${server.config.dir}/server.xml must be configured as follows. Additionally, the users and groups they are a part of must be defined within LDAP.\n\nEXAMPLE:\n<featureManager>\n<feature>appSecurity-3.0</feature>\n</featureManager> \n\n<reader-role>\n<group>group</group><group-access-id> group:realmName/groupUniqueId</group-access-id><user>user</user><user-access-id>user:realmName/userUniqueId</user-access-id>\n</reader-role>\n\n<ldapRegistry id=\"ldap\" realm=\"SampleLdapRealm\" host=\"${ldap.server.name}\" port=\"${ldap.server.port}\" ignoreCase=\"true\"\nbaseDN=\"${ldap.server.base.dn}\"\nldapType=\"${ldap.vendor.type}\"\nsearchTimeout=\"8m\">\n</ldapRegistry>'\n  impact 0.5\n  ref 'DPMS Target IBM WebSphere Liberty Server'\n  tag check_id: 'C-53777r795077_chk'\n  tag severity: 'medium'\n  tag gid: 'V-250342'\n  tag rid: 'SV-250342r795079_rule'\n  tag stig_id: 'IBMW-LS-000790'\n  tag gtitle: 'SRG-APP-000340-AS-000185'\n  tag fix_id: 'F-53731r795078_fix'\n  tag 'documentable'\n  tag cci: ['CCI-002235']\n  tag nist: ['AC-6 (10)']\nend","source_location":{"line":1,"ref":"U_IBM_WebSphere_Liberty_Server_STIG_V1R1/controls/SV-250342.rb"},"title":"Users in a reader-role must be authorized.","desc":"The reader role is a management role that allows read-only access to select administrative REST APIs as well as the Admin Center UI (adminCenter-1.0). Preventing non-privileged users from viewing privileged functions mitigates the risk that unauthorized individuals or processes may gain unnecessary access to information or privileges.\n\nUsers granted reader role access must be authorized.","descriptions":{"default":"The reader role is a management role that allows read-only access to select administrative REST APIs as well as the Admin Center UI (adminCenter-1.0). Preventing non-privileged users from viewing privileged functions mitigates the risk that unauthorized individuals or processes may gain unnecessary access to information or privileges.\n\nUsers granted reader role access must be authorized.","check":"As a user with access to the ${server.config.dir}/server.xml file. Review the contents and identify if users have been granted the reader-role.\n\ngrep -i reader-role ${server.config.dir}/server.xml\n\nIf the reader-role has been created, users in that role must be documented and approved. \n\nIf users in the reader-role are not approved, this is a finding.\n\nEXAMPLE:\n<featureManager><feature>appSecurity-3.0</feature></featureManager> \n\n<reader-role>\n<group>group</group>\n<group-access-id>group:realmName/groupUniqueId</group-access-id>\n<user>user</user>\n<user-access-id>user:realmName/userUniqueId</user-access-id>\n</reader-role>","fix":"Edit the ${server.config.dir}/server.xml file. If unauthorized users have been added to the reader-role, remove those users. \n\nOtherwise, document the users who are granted the reader-role access.\n\nTo allow read-only access to select administrative REST APIs, the ${server.config.dir}/server.xml must be configured as follows. Additionally, the users and groups they are a part of must be defined within LDAP.\n\nEXAMPLE:\n<featureManager>\n<feature>appSecurity-3.0</feature>\n</featureManager> \n\n<reader-role>\n<group>group</group><group-access-id> group:realmName/groupUniqueId</group-access-id><user>user</user><user-access-id>user:realmName/userUniqueId</user-access-id>\n</reader-role>\n\n<ldapRegistry id=\"ldap\" realm=\"SampleLdapRealm\" host=\"${ldap.server.name}\" port=\"${ldap.server.port}\" ignoreCase=\"true\"\nbaseDN=\"${ldap.server.base.dn}\"\nldapType=\"${ldap.vendor.type}\"\nsearchTimeout=\"8m\">\n</ldapRegistry>"},"impact":0.5,"refs":[{"ref":"DPMS Target IBM WebSphere Liberty Server"}],"tags":{"check_id":"C-53777r795077_chk","severity":"medium","gid":"V-250342","rid":"SV-250342r795079_rule","stig_id":"IBMW-LS-000790","gtitle":"SRG-APP-000340-AS-000185","fix_id":"F-53731r795078_fix","documentable":null,"cci":["CCI-002235"],"nist":["AC-6 (10)"]}},{"id":"SV-250343","code":"control 'SV-250343' do\n  title 'The WebSphere Liberty Server must allocate JVM log record storage capacity in accordance with organization-defined log record storage requirements.'\n  desc 'JVM logs are logs used to store application and runtime related events, rather than audit related events. They are mainly used to diagnose application or runtime bugs. However, they are useful for providing more context when correlated with audit related events. \n\nBy default, Liberty automatically logs the console.log, messages.log, and trace.log but these default settings must be validated.'\n  desc 'check', 'Review the ${server.config.dir}/bootstrap.properties file, verify console logging is not turned off. If the property com.ibm.ws.logging.console.log.level=OFF, this is a finding. \n\nReview the ${server.config.dir}/server.xml file and verify the logging traceSpecification setting is configured according to system capacity requirements. If the logging traceSpecification settings are not configured, this is a finding.\n\nEXAMPLE:\n<logging traceSpecification=\"*=info=enabled:my.package.*=all\" maxFileSize=\"40\" maxFiles=\"20\"/>'\n  desc 'fix', 'Edit the bootstrap.properties file and configure the  com.ibm.ws.logging.console.log.level=ON. \n\nEdit the ${server.config.dir}/server.xml file. Configure <logging traceSpecification> in accordance with local policy and system storage limits.\n\nEXAMPLE:\n<logging traceSpecification=\"*=info=enabled:my.package.*=all\" maxFileSize=\"40\" maxFiles=\"20\"/>, \n\nwhere maxFileSize is set to the maximum file size defined in local policy and maxFiles is set to the maximum number of historical files defined in local policy and in accordance with system storage limits.'\n  impact 0.5\n  ref 'DPMS Target IBM WebSphere Liberty Server'\n  tag check_id: 'C-53778r795080_chk'\n  tag severity: 'medium'\n  tag gid: 'V-250343'\n  tag rid: 'SV-250343r795113_rule'\n  tag stig_id: 'IBMW-LS-000830'\n  tag gtitle: 'SRG-APP-000357-AS-000038'\n  tag fix_id: 'F-53732r795112_fix'\n  tag 'documentable'\n  tag cci: ['CCI-001849']\n  tag nist: ['AU-4']\nend","source_location":{"line":1,"ref":"U_IBM_WebSphere_Liberty_Server_STIG_V1R1/controls/SV-250343.rb"},"title":"The WebSphere Liberty Server must allocate JVM log record storage capacity in accordance with organization-defined log record storage requirements.","desc":"JVM logs are logs used to store application and runtime related events, rather than audit related events. They are mainly used to diagnose application or runtime bugs. However, they are useful for providing more context when correlated with audit related events. \n\nBy default, Liberty automatically logs the console.log, messages.log, and trace.log but these default settings must be validated.","descriptions":{"default":"JVM logs are logs used to store application and runtime related events, rather than audit related events. They are mainly used to diagnose application or runtime bugs. However, they are useful for providing more context when correlated with audit related events. \n\nBy default, Liberty automatically logs the console.log, messages.log, and trace.log but these default settings must be validated.","check":"Review the ${server.config.dir}/bootstrap.properties file, verify console logging is not turned off. If the property com.ibm.ws.logging.console.log.level=OFF, this is a finding. \n\nReview the ${server.config.dir}/server.xml file and verify the logging traceSpecification setting is configured according to system capacity requirements. If the logging traceSpecification settings are not configured, this is a finding.\n\nEXAMPLE:\n<logging traceSpecification=\"*=info=enabled:my.package.*=all\" maxFileSize=\"40\" maxFiles=\"20\"/>","fix":"Edit the bootstrap.properties file and configure the  com.ibm.ws.logging.console.log.level=ON. \n\nEdit the ${server.config.dir}/server.xml file. Configure <logging traceSpecification> in accordance with local policy and system storage limits.\n\nEXAMPLE:\n<logging traceSpecification=\"*=info=enabled:my.package.*=all\" maxFileSize=\"40\" maxFiles=\"20\"/>, \n\nwhere maxFileSize is set to the maximum file size defined in local policy and maxFiles is set to the maximum number of historical files defined in local policy and in accordance with system storage limits."},"impact":0.5,"refs":[{"ref":"DPMS Target IBM WebSphere Liberty Server"}],"tags":{"check_id":"C-53778r795080_chk","severity":"medium","gid":"V-250343","rid":"SV-250343r795113_rule","stig_id":"IBMW-LS-000830","gtitle":"SRG-APP-000357-AS-000038","fix_id":"F-53732r795112_fix","documentable":null,"cci":["CCI-001849"],"nist":["AU-4"]}},{"id":"SV-250344","code":"control 'SV-250344' do\n  title 'The server.xml file must be protected from unauthorized modification.'\n  desc 'When dealing with access restrictions pertaining to change control, it should be noted that any changes to the software, and/or application server configuration could potentially have significant adverse effects on the overall security of the system.\n\nProtect the server.xml file from unauthorized modification by applying file permission restrictions.'\n  desc 'check', 'As a privileged user with local file access to ${server.config.dir}/server.xml, verify the server.xml file permissions are set to 660.\n\nIf the server.xml file permissions are not set to 660, this is a finding.'\n  desc 'fix', 'As a privileged user with local file access to ${server.config.dir}/server.xml.\n\nUse the chmod command to configure the correct file permissions of 660.\n\nchmod 660 server.xml'\n  impact 0.5\n  ref 'DPMS Target IBM WebSphere Liberty Server'\n  tag check_id: 'C-53779r795083_chk'\n  tag severity: 'medium'\n  tag gid: 'V-250344'\n  tag rid: 'SV-250344r795085_rule'\n  tag stig_id: 'IBMW-LS-000910'\n  tag gtitle: 'SRG-APP-000380-AS-000088'\n  tag fix_id: 'F-53733r795084_fix'\n  tag 'documentable'\n  tag cci: ['CCI-001813']\n  tag nist: ['CM-5 (1) (a)']\nend","source_location":{"line":1,"ref":"U_IBM_WebSphere_Liberty_Server_STIG_V1R1/controls/SV-250344.rb"},"title":"The server.xml file must be protected from unauthorized modification.","desc":"When dealing with access restrictions pertaining to change control, it should be noted that any changes to the software, and/or application server configuration could potentially have significant adverse effects on the overall security of the system.\n\nProtect the server.xml file from unauthorized modification by applying file permission restrictions.","descriptions":{"default":"When dealing with access restrictions pertaining to change control, it should be noted that any changes to the software, and/or application server configuration could potentially have significant adverse effects on the overall security of the system.\n\nProtect the server.xml file from unauthorized modification by applying file permission restrictions.","check":"As a privileged user with local file access to ${server.config.dir}/server.xml, verify the server.xml file permissions are set to 660.\n\nIf the server.xml file permissions are not set to 660, this is a finding.","fix":"As a privileged user with local file access to ${server.config.dir}/server.xml.\n\nUse the chmod command to configure the correct file permissions of 660.\n\nchmod 660 server.xml"},"impact":0.5,"refs":[{"ref":"DPMS Target IBM WebSphere Liberty Server"}],"tags":{"check_id":"C-53779r795083_chk","severity":"medium","gid":"V-250344","rid":"SV-250344r795085_rule","stig_id":"IBMW-LS-000910","gtitle":"SRG-APP-000380-AS-000088","fix_id":"F-53733r795084_fix","documentable":null,"cci":["CCI-001813"],"nist":["CM-5 (1) (a)"]}},{"id":"SV-250345","code":"control 'SV-250345' do\n  title 'The WebSphere Liberty Server must prohibit the use of cached authenticators after an organization-defined time period.'\n  desc 'Larger authentication cache timeout values can increase security risks. For example, a user who is revoked can still log in by using a credential that is cached in the authentication cache until the cache is refreshed.\n\nSmaller authentication cache timeout values can affect performance. When this value is smaller, the Liberty Server accesses the user registry or repository more frequently.\n\nLarger numbers of entries in the authentication cache, which is caused by an increased number of users, increases the memory usage of the authentication cache. Thus, the application server might slow down and affect performance.\n\nIf cached authentication information is out of date, the validity of the authentication information may be questionable.'\n  desc 'check', 'Review system security plan and identify the cache timeout parameters for authentication. The  value for admin timeout is 10 minutes. However, a case-by-case exception based on operational requirements can be configured with AO acceptance. \n\nAs a privileged user with access to server.xml, review the file and verify the authCache timeout parameter is configured for 10 minutes.\n\ngrep -i authcache server.xml\n\nEXAMPLE:\n<authCache initialSize=\"100\" maxSize=\"50000\" timeout=\"10m\"/>\n\nIf the authCache timeout parameter is not configured for 10 minutes, or the AO has not accepted the risk for extending the timeout period specified, this is a finding.'\n  desc 'fix', 'Edit the server.xml file and define the authCache timeout value as 10 minutes or AO approved value. Also ensure the appSecurity-3.0 feature is enabled.\n\nEXAMPLE:\n\n<featureManager> \n<feature>appSecurity-3.0</feature>\n</featureManager>\n\n<authCache initialSize=\"100\" maxSize=\"50000\" timeout=\"10m\"/>'\n  impact 0.5\n  ref 'DPMS Target IBM WebSphere Liberty Server'\n  tag check_id: 'C-53780r795086_chk'\n  tag severity: 'medium'\n  tag gid: 'V-250345'\n  tag rid: 'SV-250345r795088_rule'\n  tag stig_id: 'IBMW-LS-000970'\n  tag gtitle: 'SRG-APP-000400-AS-000246'\n  tag fix_id: 'F-53734r795087_fix'\n  tag 'documentable'\n  tag cci: ['CCI-002007']\n  tag nist: ['IA-5 (13)']\nend","source_location":{"line":1,"ref":"U_IBM_WebSphere_Liberty_Server_STIG_V1R1/controls/SV-250345.rb"},"title":"The WebSphere Liberty Server must prohibit the use of cached authenticators after an organization-defined time period.","desc":"Larger authentication cache timeout values can increase security risks. For example, a user who is revoked can still log in by using a credential that is cached in the authentication cache until the cache is refreshed.\n\nSmaller authentication cache timeout values can affect performance. When this value is smaller, the Liberty Server accesses the user registry or repository more frequently.\n\nLarger numbers of entries in the authentication cache, which is caused by an increased number of users, increases the memory usage of the authentication cache. Thus, the application server might slow down and affect performance.\n\nIf cached authentication information is out of date, the validity of the authentication information may be questionable.","descriptions":{"default":"Larger authentication cache timeout values can increase security risks. For example, a user who is revoked can still log in by using a credential that is cached in the authentication cache until the cache is refreshed.\n\nSmaller authentication cache timeout values can affect performance. When this value is smaller, the Liberty Server accesses the user registry or repository more frequently.\n\nLarger numbers of entries in the authentication cache, which is caused by an increased number of users, increases the memory usage of the authentication cache. Thus, the application server might slow down and affect performance.\n\nIf cached authentication information is out of date, the validity of the authentication information may be questionable.","check":"Review system security plan and identify the cache timeout parameters for authentication. The  value for admin timeout is 10 minutes. However, a case-by-case exception based on operational requirements can be configured with AO acceptance. \n\nAs a privileged user with access to server.xml, review the file and verify the authCache timeout parameter is configured for 10 minutes.\n\ngrep -i authcache server.xml\n\nEXAMPLE:\n<authCache initialSize=\"100\" maxSize=\"50000\" timeout=\"10m\"/>\n\nIf the authCache timeout parameter is not configured for 10 minutes, or the AO has not accepted the risk for extending the timeout period specified, this is a finding.","fix":"Edit the server.xml file and define the authCache timeout value as 10 minutes or AO approved value. Also ensure the appSecurity-3.0 feature is enabled.\n\nEXAMPLE:\n\n<featureManager> \n<feature>appSecurity-3.0</feature>\n</featureManager>\n\n<authCache initialSize=\"100\" maxSize=\"50000\" timeout=\"10m\"/>"},"impact":0.5,"refs":[{"ref":"DPMS Target IBM WebSphere Liberty Server"}],"tags":{"check_id":"C-53780r795086_chk","severity":"medium","gid":"V-250345","rid":"SV-250345r795088_rule","stig_id":"IBMW-LS-000970","gtitle":"SRG-APP-000400-AS-000246","fix_id":"F-53734r795087_fix","documentable":null,"cci":["CCI-002007"],"nist":["IA-5 (13)"]}},{"id":"SV-250346","code":"control 'SV-250346' do\n  title 'The WebSphere Liberty Server LTPA keys password must be changed.'\n  desc 'The default location of the automatically generated Lightweight Third Party Authentication (LTPA) keys file is ${server.output.dir}/resources/security/ltpa.keys. \n\nThe LTPA keys are encrypted with a randomly generated key and a default password of WebAS is initially used to protect the keys. The password is required when importing the LTPA keys into another server. To protect the security of the LTPA keys, change the password. \n\nWhen the LTPA keys are exchanged between servers, this password must match across the servers for Single Sign On (SSO) to work.\n\nAutomated LTPA key generation can create unplanned outages. Plan to change the LTPA keys during a scheduled outage and do not use automated key changes. Distribute the new keys to all nodes in the cell and to all external systems/cells during this outage window.'\n  desc 'check', 'If LTPA is not used, this requirement is not a finding.\n\nAs a privileged user with access to ${server.config.dir}/server.xml file, review the server.xml file and locate LTPA settings. If the LTPA settings do not exist, this is not a finding.\n\nEXAMPLE:\ngrep -i \"<ltpa\" server.xml\n\n <ltpa keysFileName=\"LTPA.keys\" keysPassword=\"myLTPAkeysPassword\" expiration=\"120\" monitorInterval=\"5s\" />\n\nIf the LTPA setting exists and the password is set to \"WebAS\", this is a finding.'\n  desc 'fix', 'To update key password and force a regeneration of keys follow these steps. To obtain encoded values, use the Liberty \"securityUtility encode\" command.\n\n1. Shut down the server.\n\n2. Configure the <ltpa> element in the server.xml file as follows, replacing the sample values in the example with local values. The password may be encoded or encrypted.\n\n<ltpa keysFileName=\"yourLTPAKeysFileName.keys\" keysPassword=\"yourkeysPassword\" expiration=\"120\" />\n\n3. Delete the existing ${wlp.server.dir}/resources/security/ltpa.keys file.\n\n4. Sync changes with all servers in the cell.\n\n5. Start the servers.'\n  impact 0.5\n  ref 'DPMS Target IBM WebSphere Liberty Server'\n  tag check_id: 'C-53781r795089_chk'\n  tag severity: 'medium'\n  tag gid: 'V-250346'\n  tag rid: 'SV-250346r795114_rule'\n  tag stig_id: 'IBMW-LS-001050'\n  tag gtitle: 'SRG-APP-000428-AS-000265'\n  tag fix_id: 'F-53735r795090_fix'\n  tag 'documentable'\n  tag cci: ['CCI-002475']\n  tag nist: ['SC-28 (1)']\nend","source_location":{"line":1,"ref":"U_IBM_WebSphere_Liberty_Server_STIG_V1R1/controls/SV-250346.rb"},"title":"The WebSphere Liberty Server LTPA keys password must be changed.","desc":"The default location of the automatically generated Lightweight Third Party Authentication (LTPA) keys file is ${server.output.dir}/resources/security/ltpa.keys. \n\nThe LTPA keys are encrypted with a randomly generated key and a default password of WebAS is initially used to protect the keys. The password is required when importing the LTPA keys into another server. To protect the security of the LTPA keys, change the password. \n\nWhen the LTPA keys are exchanged between servers, this password must match across the servers for Single Sign On (SSO) to work.\n\nAutomated LTPA key generation can create unplanned outages. Plan to change the LTPA keys during a scheduled outage and do not use automated key changes. Distribute the new keys to all nodes in the cell and to all external systems/cells during this outage window.","descriptions":{"default":"The default location of the automatically generated Lightweight Third Party Authentication (LTPA) keys file is ${server.output.dir}/resources/security/ltpa.keys. \n\nThe LTPA keys are encrypted with a randomly generated key and a default password of WebAS is initially used to protect the keys. The password is required when importing the LTPA keys into another server. To protect the security of the LTPA keys, change the password. \n\nWhen the LTPA keys are exchanged between servers, this password must match across the servers for Single Sign On (SSO) to work.\n\nAutomated LTPA key generation can create unplanned outages. Plan to change the LTPA keys during a scheduled outage and do not use automated key changes. Distribute the new keys to all nodes in the cell and to all external systems/cells during this outage window.","check":"If LTPA is not used, this requirement is not a finding.\n\nAs a privileged user with access to ${server.config.dir}/server.xml file, review the server.xml file and locate LTPA settings. If the LTPA settings do not exist, this is not a finding.\n\nEXAMPLE:\ngrep -i \"<ltpa\" server.xml\n\n <ltpa keysFileName=\"LTPA.keys\" keysPassword=\"myLTPAkeysPassword\" expiration=\"120\" monitorInterval=\"5s\" />\n\nIf the LTPA setting exists and the password is set to \"WebAS\", this is a finding.","fix":"To update key password and force a regeneration of keys follow these steps. To obtain encoded values, use the Liberty \"securityUtility encode\" command.\n\n1. Shut down the server.\n\n2. Configure the <ltpa> element in the server.xml file as follows, replacing the sample values in the example with local values. The password may be encoded or encrypted.\n\n<ltpa keysFileName=\"yourLTPAKeysFileName.keys\" keysPassword=\"yourkeysPassword\" expiration=\"120\" />\n\n3. Delete the existing ${wlp.server.dir}/resources/security/ltpa.keys file.\n\n4. Sync changes with all servers in the cell.\n\n5. Start the servers."},"impact":0.5,"refs":[{"ref":"DPMS Target IBM WebSphere Liberty Server"}],"tags":{"check_id":"C-53781r795089_chk","severity":"medium","gid":"V-250346","rid":"SV-250346r795114_rule","stig_id":"IBMW-LS-001050","gtitle":"SRG-APP-000428-AS-000265","fix_id":"F-53735r795090_fix","documentable":null,"cci":["CCI-002475"],"nist":["SC-28 (1)"]}},{"id":"SV-250347","code":"control 'SV-250347' do\n  title 'The WebSphere Liberty Server must remove all export ciphers to protect the confidentiality and integrity of transmitted information.'\n  desc 'Export grade encryption suites are not strong and do not meet DoD requirements. The encryption for the session becomes easy for the attacker to break. Do not use export grade encryption.'\n  desc 'check', 'Review the ${server.config.dir}/server.xml file and check the \"enabledCiphers\" setting. If any of the ciphers specified in the enabledCiphers setting contains the word \"EXPORT\", this is a finding. \n\n<ssl id=\"myDefaultSSLConfig\"\n       keyStoreRef=\"defaultKeyStore\"\n       trustStoreRef=\"defaultTrustStore\"\n       clientAuthentication=\"true\"\n       sslProtocol=\"TLS\" \n       enabledCiphers=\"SSL_xxx_yyy_zzz\"/>'\n  desc 'fix', 'Review the ${server.config.dir}/server.xml file and if needed, modify the \"enabledCiphers\" setting for each affected SSL configuration.\n\n<ssl id=\"myDefaultSSLConfig\"\n       keyStoreRef=\"defaultKeyStore\"\n       trustStoreRef=\"defaultTrustStore\"\n       clientAuthentication=\"true\"\n       sslProtocol=\"TLS\" \n       enabledCiphers=\"SSL_xxx_yyy_zzz\"/> \n\nwhere xxx, yyy, and zzz do not contain \"EXPORT\".'\n  impact 0.5\n  ref 'DPMS Target IBM WebSphere Liberty Server'\n  tag check_id: 'C-53782r795092_chk'\n  tag severity: 'medium'\n  tag gid: 'V-250347'\n  tag rid: 'SV-250347r795094_rule'\n  tag stig_id: 'IBMW-LS-001110'\n  tag gtitle: 'SRG-APP-000439-AS-000274'\n  tag fix_id: 'F-53736r795093_fix'\n  tag 'documentable'\n  tag cci: ['CCI-002418']\n  tag nist: ['SC-8']\nend","source_location":{"line":1,"ref":"U_IBM_WebSphere_Liberty_Server_STIG_V1R1/controls/SV-250347.rb"},"title":"The WebSphere Liberty Server must remove all export ciphers to protect the confidentiality and integrity of transmitted information.","desc":"Export grade encryption suites are not strong and do not meet DoD requirements. The encryption for the session becomes easy for the attacker to break. Do not use export grade encryption.","descriptions":{"default":"Export grade encryption suites are not strong and do not meet DoD requirements. The encryption for the session becomes easy for the attacker to break. Do not use export grade encryption.","check":"Review the ${server.config.dir}/server.xml file and check the \"enabledCiphers\" setting. If any of the ciphers specified in the enabledCiphers setting contains the word \"EXPORT\", this is a finding. \n\n<ssl id=\"myDefaultSSLConfig\"\n       keyStoreRef=\"defaultKeyStore\"\n       trustStoreRef=\"defaultTrustStore\"\n       clientAuthentication=\"true\"\n       sslProtocol=\"TLS\" \n       enabledCiphers=\"SSL_xxx_yyy_zzz\"/>","fix":"Review the ${server.config.dir}/server.xml file and if needed, modify the \"enabledCiphers\" setting for each affected SSL configuration.\n\n<ssl id=\"myDefaultSSLConfig\"\n       keyStoreRef=\"defaultKeyStore\"\n       trustStoreRef=\"defaultTrustStore\"\n       clientAuthentication=\"true\"\n       sslProtocol=\"TLS\" \n       enabledCiphers=\"SSL_xxx_yyy_zzz\"/> \n\nwhere xxx, yyy, and zzz do not contain \"EXPORT\"."},"impact":0.5,"refs":[{"ref":"DPMS Target IBM WebSphere Liberty Server"}],"tags":{"check_id":"C-53782r795092_chk","severity":"medium","gid":"V-250347","rid":"SV-250347r795094_rule","stig_id":"IBMW-LS-001110","gtitle":"SRG-APP-000439-AS-000274","fix_id":"F-53736r795093_fix","documentable":null,"cci":["CCI-002418"],"nist":["SC-8"]}},{"id":"SV-250348","code":"control 'SV-250348' do\n  title 'The WebSphere Liberty Server must be configured to use HTTPS only.'\n  desc 'Transmission of data can take place between the application server and a large number of devices/applications external to the application server. Examples are a web client used by a user, a backend database, a log server, or other application servers in an application server cluster.'\n  desc 'check', 'Review the ${server.config.dir}/server.xml file and check the ssl-1.0 feature and httpEndpoint settings. \n\nIf the ssl-1.0 feature is not defined, this is a finding. \n\nIf the httpEndpoint settings do not include ssloptions, this is a finding.\n\n<featureManager>\n    <feature>timedexit-1.0</feature>\n        <feature>servlet-3.0</feature>\n        <feature>ssl-1.0</feature>\n        <feature>appSecurity-2.0</feature>\n    </featureManager>\n\n<httpEndpoint id=\"defaultHttpEndpoint\"\n          host=\"localhost\"\n          httpPort=\"${bvt.prop.HTTP_default}\"\n          httpsPort=\"${bvt.prop.HTTP_default.secure}\" >\n          <tcpOptions soReuseAddr=\"true\" />\n          <sslOptions sslRef=\"testSSLConfig\" />\n</httpEndpoint>'\n  desc 'fix', 'Modify the server.xml file. Enable the ssl-1.0 feature and configure the httpEndpoint settings. The keystores and truststores must also be configured.\n\n<featureManager>\n    <feature>timedexit-1.0</feature>\n        <feature>servlet-3.0</feature>\n        <feature>ssl-1.0</feature>\n        <feature>appSecurity-2.0</feature>\n    </featureManager>\n    \n    <httpEndpoint id=\"defaultHttpEndpoint\"\n          host=\"localhost\"\n          httpPort=\"${bvt.prop.HTTP_default}\"\n          httpsPort=\"${bvt.prop.HTTP_default.secure}\" >\n          <tcpOptions soReuseAddr=\"true\" />\n          <sslOptions sslRef=\"testSSLConfig\" />\n</httpEndpoint> \n\n     <ssl id=\"defaultSSLConfig\"\n      keyStoreRef=\"defaultKeyStore\"\n      trustStoreRef=\"defaultKeyStore\"\n      serverKeyAlias=\"default\" />\n\n     <ssl id=\"testSSLConfig\"\n      keyStoreRef=\"defaultKeyStore\"\n      trustStoreRef=\"alternateTrustStore\"\n      serverKeyAlias=\"alternateCert\"\n      enabledCiphers=\"AES256-SHA AES128-SHA\" />\n\n<!-- inbound (HTTPS) keystore -->\n<keyStore id=\"defaultKeyStore\" password=\"Liberty\"\n           location=\"${server.config.dir}/resources/security/sslOptions.jks\" />\n\n<keyStore id=\"defaultTrustStore\" password=\"Liberty\"\n           location=\"${server.config.dir}/resources/security/trust.jks\" />\n           \n<keyStore id=\"alternateTrustStore\" password=\"Liberty\"\n           location=\"${server.config.dir}/resources/security/optionsTrust.jks\" />\n\n    <application type=\"war\" id=\"basicauth\" name=\"basicauth\"\n             location=\"${server.config.dir}/apps/basicauth.war\" />'\n  impact 0.5\n  ref 'DPMS Target IBM WebSphere Liberty Server'\n  tag check_id: 'C-53783r795095_chk'\n  tag severity: 'medium'\n  tag gid: 'V-250348'\n  tag rid: 'SV-250348r795097_rule'\n  tag stig_id: 'IBMW-LS-001120'\n  tag gtitle: 'SRG-APP-000440-AS-000167'\n  tag fix_id: 'F-53737r795096_fix'\n  tag 'documentable'\n  tag cci: ['CCI-002421']\n  tag nist: ['SC-8 (1)']\nend","source_location":{"line":1,"ref":"U_IBM_WebSphere_Liberty_Server_STIG_V1R1/controls/SV-250348.rb"},"title":"The WebSphere Liberty Server must be configured to use HTTPS only.","desc":"Transmission of data can take place between the application server and a large number of devices/applications external to the application server. Examples are a web client used by a user, a backend database, a log server, or other application servers in an application server cluster.","descriptions":{"default":"Transmission of data can take place between the application server and a large number of devices/applications external to the application server. Examples are a web client used by a user, a backend database, a log server, or other application servers in an application server cluster.","check":"Review the ${server.config.dir}/server.xml file and check the ssl-1.0 feature and httpEndpoint settings. \n\nIf the ssl-1.0 feature is not defined, this is a finding. \n\nIf the httpEndpoint settings do not include ssloptions, this is a finding.\n\n<featureManager>\n    <feature>timedexit-1.0</feature>\n        <feature>servlet-3.0</feature>\n        <feature>ssl-1.0</feature>\n        <feature>appSecurity-2.0</feature>\n    </featureManager>\n\n<httpEndpoint id=\"defaultHttpEndpoint\"\n          host=\"localhost\"\n          httpPort=\"${bvt.prop.HTTP_default}\"\n          httpsPort=\"${bvt.prop.HTTP_default.secure}\" >\n          <tcpOptions soReuseAddr=\"true\" />\n          <sslOptions sslRef=\"testSSLConfig\" />\n</httpEndpoint>","fix":"Modify the server.xml file. Enable the ssl-1.0 feature and configure the httpEndpoint settings. The keystores and truststores must also be configured.\n\n<featureManager>\n    <feature>timedexit-1.0</feature>\n        <feature>servlet-3.0</feature>\n        <feature>ssl-1.0</feature>\n        <feature>appSecurity-2.0</feature>\n    </featureManager>\n    \n    <httpEndpoint id=\"defaultHttpEndpoint\"\n          host=\"localhost\"\n          httpPort=\"${bvt.prop.HTTP_default}\"\n          httpsPort=\"${bvt.prop.HTTP_default.secure}\" >\n          <tcpOptions soReuseAddr=\"true\" />\n          <sslOptions sslRef=\"testSSLConfig\" />\n</httpEndpoint> \n\n     <ssl id=\"defaultSSLConfig\"\n      keyStoreRef=\"defaultKeyStore\"\n      trustStoreRef=\"defaultKeyStore\"\n      serverKeyAlias=\"default\" />\n\n     <ssl id=\"testSSLConfig\"\n      keyStoreRef=\"defaultKeyStore\"\n      trustStoreRef=\"alternateTrustStore\"\n      serverKeyAlias=\"alternateCert\"\n      enabledCiphers=\"AES256-SHA AES128-SHA\" />\n\n<!-- inbound (HTTPS) keystore -->\n<keyStore id=\"defaultKeyStore\" password=\"Liberty\"\n           location=\"${server.config.dir}/resources/security/sslOptions.jks\" />\n\n<keyStore id=\"defaultTrustStore\" password=\"Liberty\"\n           location=\"${server.config.dir}/resources/security/trust.jks\" />\n           \n<keyStore id=\"alternateTrustStore\" password=\"Liberty\"\n           location=\"${server.config.dir}/resources/security/optionsTrust.jks\" />\n\n    <application type=\"war\" id=\"basicauth\" name=\"basicauth\"\n             location=\"${server.config.dir}/apps/basicauth.war\" />"},"impact":0.5,"refs":[{"ref":"DPMS Target IBM WebSphere Liberty Server"}],"tags":{"check_id":"C-53783r795095_chk","severity":"medium","gid":"V-250348","rid":"SV-250348r795097_rule","stig_id":"IBMW-LS-001120","gtitle":"SRG-APP-000440-AS-000167","fix_id":"F-53737r795096_fix","documentable":null,"cci":["CCI-002421"],"nist":["SC-8 (1)"]}},{"id":"SV-250349","code":"control 'SV-250349' do\n  title 'The WebSphere Liberty Server must install security-relevant software updates within the time period directed by an authoritative source.'\n  desc 'Security vulnerabilities are often addressed by testing and applying the latest security patches and fix packs. The latest fixpacks can be found at: http://www-01.ibm.com/support/docview.wss?uid=swg27009661'\n  desc 'check', 'Use the \"productInfo(.bat/.sh) version\" command to determine the WebSphere version. Review the patch level and fix pack. \n\nReview the latest fixpacks at: http://www-01.ibm.com/support/docview.wss?uid=swg27009661 and determine if the system is operating at the latest patch level.\n\nIf the most recent patches/fix packs have not been applied, this is a finding.'\n  desc 'fix', 'Obtain WebSphere Liberty product security and patch support at http://www-01.ibm.com/support/docview.wss?uid=swg27009661. \n\nRun the productInfo validate command to validate the MD5 checksum file for server installation and each feature.\n\nIf a feature is not valid, the command outputs an error and lists the manifest file for the affected feature. The following example validates the features for the current installation and outputs the results to the validate.txt file:\n\nproductInfo validate --output=/tmp/validate.txt'\n  impact 0.5\n  ref 'DPMS Target IBM WebSphere Liberty Server'\n  tag check_id: 'C-53784r795098_chk'\n  tag severity: 'medium'\n  tag gid: 'V-250349'\n  tag rid: 'SV-250349r795100_rule'\n  tag stig_id: 'IBMW-LS-001170'\n  tag gtitle: 'SRG-APP-000456-AS-000266'\n  tag fix_id: 'F-53738r795099_fix'\n  tag 'documentable'\n  tag cci: ['CCI-002605']\n  tag nist: ['SI-2 c']\nend","source_location":{"line":1,"ref":"U_IBM_WebSphere_Liberty_Server_STIG_V1R1/controls/SV-250349.rb"},"title":"The WebSphere Liberty Server must install security-relevant software updates within the time period directed by an authoritative source.","desc":"Security vulnerabilities are often addressed by testing and applying the latest security patches and fix packs. The latest fixpacks can be found at: http://www-01.ibm.com/support/docview.wss?uid=swg27009661","descriptions":{"default":"Security vulnerabilities are often addressed by testing and applying the latest security patches and fix packs. The latest fixpacks can be found at: http://www-01.ibm.com/support/docview.wss?uid=swg27009661","check":"Use the \"productInfo(.bat/.sh) version\" command to determine the WebSphere version. Review the patch level and fix pack. \n\nReview the latest fixpacks at: http://www-01.ibm.com/support/docview.wss?uid=swg27009661 and determine if the system is operating at the latest patch level.\n\nIf the most recent patches/fix packs have not been applied, this is a finding.","fix":"Obtain WebSphere Liberty product security and patch support at http://www-01.ibm.com/support/docview.wss?uid=swg27009661. \n\nRun the productInfo validate command to validate the MD5 checksum file for server installation and each feature.\n\nIf a feature is not valid, the command outputs an error and lists the manifest file for the affected feature. The following example validates the features for the current installation and outputs the results to the validate.txt file:\n\nproductInfo validate --output=/tmp/validate.txt"},"impact":0.5,"refs":[{"ref":"DPMS Target IBM WebSphere Liberty Server"}],"tags":{"check_id":"C-53784r795098_chk","severity":"medium","gid":"V-250349","rid":"SV-250349r795100_rule","stig_id":"IBMW-LS-001170","gtitle":"SRG-APP-000456-AS-000266","fix_id":"F-53738r795099_fix","documentable":null,"cci":["CCI-002605"],"nist":["SI-2 c"]}},{"id":"SV-250350","code":"control 'SV-250350' do\n  title 'The WebSphere Liberty Server must generate log records for authentication and authorization events.'\n  desc 'Enabling authentication (SECURITY_AUTHN) and authorization (SECURITY_AUTHZ) event handlers configures the server to record security authorization and authentication events. By logging these events, the logs can be analyzed to identify activity that could be related to security events and to aid post mortem forensic analysis.\n\n'\n  desc 'check', 'Review the ${server.config.dir}/server.xml file, verify the audit-1.0 feature is enabled. Also verify the auditFile Handler is configured to log AUTHN and AUTHZ events. \n\nIf the audit1.0 feature is not enabled, this is a finding.\n\nIf the SECURITY_AUTHN and SECURITY_AUTHZ event handlers are not configured, this is a finding. \n\n<featureManager>\n<feature>audit-1.0</feature>\n</featureManager>\n\n    <auditFileHandler>\n        <events name=\"AllAuthn\" eventName=\"SECURITY_AUTHN\" />\n<events name=\"AllAuthz\" eventName=\"SECURITY_AUTHZ\" />\n    </auditFileHandler>'\n  desc 'fix', 'Modify the ${server.config.dir}/server.xml file and configure the audit-1.0 feature.\n\n<featureManager>\n<feature>audit-1.0</feature>\n</featureManager>\n\nConfigure the auditFileHandler setting to record SECURITY_AUTHN and SECURITY_AUTHZ events. \n\n<auditFileHandler>\n      <events name=\"AllAuthn\" eventName=\"SECURITY_AUTHN\"/>\n<events name=\"AllAuthz\" eventName=\"SECURITY_AUTHZ\" />\n    </auditFileHandler>    \n\nReview audit logs located under the ${server.config.dir}/logs directory and ensure AUTHN and AUTHZ events are logged.'\n  impact 0.5\n  ref 'DPMS Target IBM WebSphere Liberty Server'\n  tag check_id: 'C-53785r795101_chk'\n  tag severity: 'medium'\n  tag gid: 'V-250350'\n  tag rid: 'SV-250350r795103_rule'\n  tag stig_id: 'IBMW-LS-001190'\n  tag gtitle: 'SRG-APP-000499-AS-000224'\n  tag fix_id: 'F-53739r795102_fix'\n  tag satisfies: ['SRG-APP-000499-AS-000224', 'SRG-APP-000495-AS-000220', 'SRG-APP-000503-AS-000228', 'SRG-APP-000504-AS-000229', 'SRG-APP-000505-AS-000230', 'SRG-APP-000506-AS-000231', 'SRG-APP-000509-AS-000234', 'SRG-APP-000092-AS-000053']\n  tag 'documentable'\n  tag cci: ['CCI-000172', 'CCI-001464']\n  tag nist: ['AU-12 c', 'AU-14 (1)']\nend","source_location":{"line":1,"ref":"U_IBM_WebSphere_Liberty_Server_STIG_V1R1/controls/SV-250350.rb"},"title":"The WebSphere Liberty Server must generate log records for authentication and authorization events.","desc":"Enabling authentication (SECURITY_AUTHN) and authorization (SECURITY_AUTHZ) event handlers configures the server to record security authorization and authentication events. By logging these events, the logs can be analyzed to identify activity that could be related to security events and to aid post mortem forensic analysis.\n\n","descriptions":{"default":"Enabling authentication (SECURITY_AUTHN) and authorization (SECURITY_AUTHZ) event handlers configures the server to record security authorization and authentication events. By logging these events, the logs can be analyzed to identify activity that could be related to security events and to aid post mortem forensic analysis.\n\n","check":"Review the ${server.config.dir}/server.xml file, verify the audit-1.0 feature is enabled. Also verify the auditFile Handler is configured to log AUTHN and AUTHZ events. \n\nIf the audit1.0 feature is not enabled, this is a finding.\n\nIf the SECURITY_AUTHN and SECURITY_AUTHZ event handlers are not configured, this is a finding. \n\n<featureManager>\n<feature>audit-1.0</feature>\n</featureManager>\n\n    <auditFileHandler>\n        <events name=\"AllAuthn\" eventName=\"SECURITY_AUTHN\" />\n<events name=\"AllAuthz\" eventName=\"SECURITY_AUTHZ\" />\n    </auditFileHandler>","fix":"Modify the ${server.config.dir}/server.xml file and configure the audit-1.0 feature.\n\n<featureManager>\n<feature>audit-1.0</feature>\n</featureManager>\n\nConfigure the auditFileHandler setting to record SECURITY_AUTHN and SECURITY_AUTHZ events. \n\n<auditFileHandler>\n      <events name=\"AllAuthn\" eventName=\"SECURITY_AUTHN\"/>\n<events name=\"AllAuthz\" eventName=\"SECURITY_AUTHZ\" />\n    </auditFileHandler>    \n\nReview audit logs located under the ${server.config.dir}/logs directory and ensure AUTHN and AUTHZ events are logged."},"impact":0.5,"refs":[{"ref":"DPMS Target IBM WebSphere Liberty Server"}],"tags":{"check_id":"C-53785r795101_chk","severity":"medium","gid":"V-250350","rid":"SV-250350r795103_rule","stig_id":"IBMW-LS-001190","gtitle":"SRG-APP-000499-AS-000224","fix_id":"F-53739r795102_fix","satisfies":["SRG-APP-000499-AS-000224","SRG-APP-000495-AS-000220","SRG-APP-000503-AS-000228","SRG-APP-000504-AS-000229","SRG-APP-000505-AS-000230","SRG-APP-000506-AS-000231","SRG-APP-000509-AS-000234","SRG-APP-000092-AS-000053"],"documentable":null,"cci":["CCI-000172","CCI-001464"],"nist":["AU-12 c","AU-14 (1)"]}}],"groups":[{"id":"controls/SV-250322.rb","title":null,"controls":["SV-250322"]},{"id":"controls/SV-250323.rb","title":null,"controls":["SV-250323"]},{"id":"controls/SV-250324.rb","title":null,"controls":["SV-250324"]},{"id":"controls/SV-250325.rb","title":null,"controls":["SV-250325"]},{"id":"controls/SV-250326.rb","title":null,"controls":["SV-250326"]},{"id":"controls/SV-250327.rb","title":null,"controls":["SV-250327"]},{"id":"controls/SV-250328.rb","title":null,"controls":["SV-250328"]},{"id":"controls/SV-250329.rb","title":null,"controls":["SV-250329"]},{"id":"controls/SV-250330.rb","title":null,"controls":["SV-250330"]},{"id":"controls/SV-250331.rb","title":null,"controls":["SV-250331"]},{"id":"controls/SV-250332.rb","title":null,"controls":["SV-250332"]},{"id":"controls/SV-250333.rb","title":null,"controls":["SV-250333"]},{"id":"controls/SV-250334.rb","title":null,"controls":["SV-250334"]},{"id":"controls/SV-250335.rb","title":null,"controls":["SV-250335"]},{"id":"controls/SV-250336.rb","title":null,"controls":["SV-250336"]},{"id":"controls/SV-250337.rb","title":null,"controls":["SV-250337"]},{"id":"controls/SV-250338.rb","title":null,"controls":["SV-250338"]},{"id":"controls/SV-250339.rb","title":null,"controls":["SV-250339"]},{"id":"controls/SV-250340.rb","title":null,"controls":["SV-250340"]},{"id":"controls/SV-250341.rb","title":null,"controls":["SV-250341"]},{"id":"controls/SV-250342.rb","title":null,"controls":["SV-250342"]},{"id":"controls/SV-250343.rb","title":null,"controls":["SV-250343"]},{"id":"controls/SV-250344.rb","title":null,"controls":["SV-250344"]},{"id":"controls/SV-250345.rb","title":null,"controls":["SV-250345"]},{"id":"controls/SV-250346.rb","title":null,"controls":["SV-250346"]},{"id":"controls/SV-250347.rb","title":null,"controls":["SV-250347"]},{"id":"controls/SV-250348.rb","title":null,"controls":["SV-250348"]},{"id":"controls/SV-250349.rb","title":null,"controls":["SV-250349"]},{"id":"controls/SV-250350.rb","title":null,"controls":["SV-250350"]}],"name":"IBM_WebSphere_Liberty_Server_STIG","title":null,"maintainer":null,"copyright":null,"copyright_email":null,"license":null,"summary":null,"description":null,"version":"1.0.0","supports":[],"depends":[],"inspec_version":null,"inputs":[],"sha256":"1b237fcd252d2d74fd93b67530f75c3be25e14a9fc33c1d458bee56cfca21d95","status_message":"","status":"loaded","generator":{"name":"inspec","version":"6.6.0"}}
